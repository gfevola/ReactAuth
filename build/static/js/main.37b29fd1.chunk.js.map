{"version":3,"sources":["pages/Navbar.tsx","pages/home.tsx","reducers/user_actions.tsx","pages/user/Login.tsx","pages/user/Logout.tsx","pages/user/SignUp.tsx","three/shaders/fragmentShaderPlus.js","three/ThreeTest.js","three/ThreeParticles.js","reducers/employee_actions.tsx","functions/DateSort.js","data/Employee/EmpModel_Import.tsx","data/Employee/Employee_Import.tsx","data/AxiosUpload.tsx","data/Employee/Employee_Upload.tsx","pages/data/fields/subfunctions/FieldsDiv.tsx","functions/GetAuthConfigHeaders.tsx","data/Employee/EmpModel_Dropdown.tsx","data/Employee/EmpModel_Delete.tsx","reducers/field_actions.tsx","data/Fields/Fields_Import.tsx","pages/data/employees/EmployeeDataSetup.tsx","data/Employee/Employee_Dropdown.tsx","functions/CompareObjects.js","pages/data/employees/subfunctions/EmployeeStateDetail.tsx","pages/data/employees/subfunctions/EmployeeCard.tsx","pages/data/employees/subfunctions/EmployeeFilter.tsx","functions/CompareObjects_SingleField.js","functions/ReturnValfromType.js","pages/data/employees/subfunctions/EmpFieldTrend.tsx","images/CityHorizon.jpeg","pages/data/employees/SingleEmployeePage.tsx","reducers/jobdesc_actions.tsx","data/JobDescription/JobDesc_Import.tsx","data/JobDescription/JobDesc_Upload.js","pages/data/jobdescriptions/JDDataSetup.tsx","data/JobDescription/JobTitleDropdown.tsx","pages/data/jobdescriptions/subfunctions/GramViewer.tsx","pages/data/jobdescriptions/JDDataViewer.tsx","pages/data/rulesets/subfunctions/RuleModelDropdown.tsx","pages/data/rulesets/subfunctions/ModalRuleManager.tsx","charts/ForceBubble.js","reducers/basicquery_actions.tsx","data/Employee/Employee_ImportTest.tsx","pages/data/employees/subfunctions/DateSpreadOptionSpread.js","pages/data/employees/subfunctions/DateSpreadOptionRange.js","charts/ChartLegend.js","functions/GetFieldName.tsx","functions/UniqueArrayValues.js","charts/functions/Textwrap.js","charts/chartfns/BarChartStacked1.js","functions/PivotArray.js","charts/chartfns/LineChartStacked1.js","charts/chartfns/LineChart1.js","charts/ChartPrimary.js","pages/data/employees/subfunctions/QueryModelDropdown.tsx","pages/data/employees/EmpGraphs.tsx","data/Rulesets/Rulesets_Upload.tsx","reducers/ruleset_actions.tsx","data/Rulesets/Rulesets_Import.tsx","pages/data/rulesets/subfunctions/RulesDropdown.js","data/Rulesets/RuleModel_Upload.tsx","data/Fields/Fields_ImportEmpValues.tsx","pages/data/rulesets/subfunctions/RuleExceptionPicker.tsx","pages/data/rulesets/subfunctions/RuleAdd.js","data/Rulesets/RuleModel_Delete.tsx","data/Rulesets/Rulesets_Delete.tsx","pages/data/rulesets/RulesetsManager.tsx","reducers/department_actions.tsx","data/Departments/Department_Import.tsx","data/Departments/Department_Upload.tsx","functions/IsInVector.js","data/Model_UploadChange.tsx","functions/FilterData.js","functions/EditableTable/EnumerateSelectedRow.tsx","functions/EditableTable/CustomTable.tsx","pages/data/departments/DepartmentTable.tsx","data/Fields/Fields_UploadNew.tsx","pages/data/fields/FieldsViewer.tsx","pages/data/fields/FieldsKey.tsx","OnLoad.tsx","App.tsx","store.tsx","index.tsx"],"names":["Navbar","userstate","useSelector","state","user","linkstyle","className","style","type","id","to","NavDropdown","title","isAuthenticated","Home","userSlice","createSlice","name","initialState","email","password","authtoken","reducers","login","payload","logout","_","actions","loginActionCreator","logoutActionCreator","Login","dispatcher","useDispatch","useState","formData","setFormData","onChange","e","target","value","loginauth","body","JSON","stringify","console","log","axios","post","process","headers","then","response","rdata","data","accesstoken","access","err","onSubmit","preventDefault","placeholder","required","minLength","Logout","msg","setMsg","onClick","SignUp","re_password","Signupauth","fragmentShaderPlus","Threetest","uniforms","mesh","testval","scene","THREE","camera","w","renderer","domElement","setSize","useEffect","document","getElementById","appendChild","position","z","animate","Math","sin","remove","res","window","innerWidth","innerHeight","aspect","zoom","pset1","pset2","iTime","geometry1","material1","vertexShader","vShader","fragmentShader","add","drawfunc","requestAnimationFrame","render","pointlight","set","ambientlight","geometry","material","color","rotation","y","EmpStateInit","EmpID","Name","ModelKey","Date","JobCode","Salary","DeptID","Location","ServiceLine","Embedding1","Embedding2","Status","EmpInit","CreateDate","EmailAddress","EmpModelInit","ModelName","empModelSlice","empmodel","reducer","push","prepare","empmodel_delete","splice","length","employeestateDataSlice","empstatedata","employeestate_delete","employeeDataSlice","empdata","employee_delete","empstatedeleteActionCreator","empDataActionCreator","empdeleteActionCreator","empModelActionCreator","empModelDeleteActionCreator","EmpSort","Arry","val","asc_desc","aa","sort","a","b","da","db","EmpModelImport","configheaders","get","dataset","forEach","dset","catch","Employee_Import","props","dsetstate","dsetstate_sorted","DateSort","AxiosUpload","dataArray","path","config","elem","innerHTML","Employee_Upload","event","modelname","empFile","repType","elementstring","FormData","append","FieldsDiv","fieldData","fieldmapping","isModalVisible","setIsModalVisible","FieldsModal","map","fld","i","margin","Modal","show","GetAuthConfigHeaders","EmpModelDropdown","change","Models","Items","d","indexOf","EmpModelDelete","fieldmapSlice","Key","AttrName","FieldName","HeaderName","DataType","fielddata","field_delete","fieldvalSlice","FieldAttr","Value","FieldNum","fieldvaldata","fieldval_delete","fieldDataActionCreator","fielddeleteActionCreator","fieldValActionCreator","fieldValdeleteActionCreator","FieldsImport","modelcategory","flddata","EmployeeDataSetup","setEmpFile","setrepType","setModelname","EmployeeUpload","files","ApplyFile","ReportTypeSel","selectedOptions","ChangeModel","Employee_Dropdown","Employees","employee","CompareObjects","obj1","obj2","mismatches","Object","entries","key","EmpStateDetail","prevState","currState","entryno","CurrentCard","PreviousCard","differences","EmployeeCard","empl","currEmp","currID","selID","setselID","lastEmp","setlastEmp","Overall","EntryList","EmployeeStateDetail","st","String","Changecard","intgr","currentTarget","EmployeeFilter","CompareObjects_SingleField","fieldName","ReturnValfromType","obj","EmpFieldTrend","field","CheckTrend","series1","series2","s","visible","SingleEmployeePage","Empl","empSelect","setEmpSelect","fieldFocus","setFieldFocus","selectedField","setSelectedField","ClickedRadio","div_id","simuldiv","background","backgroundColor","attributes","EmpSelect","FieldSelect","backgroundImage","CityHorizon","backgroundSize","JobTitleInit","JobTitle","Description","grams","relatedSlice","GramPrimary","GramRelated","relatedgramdata","relatedgram_delete","descgramDataSlice","GramKey","GramIndicator","Text","Category","TopicNum","Embedding3","pairs","descgramdata","descgram_delete","jobtitleDataSlice","jobtitle","jobtitle_delete","singletitleDataSlice","singletitle","singletitle_delete","slice","relateddeleteActionCreator","descgramdeleteActionCreator","jobtitleActionCreator","jobtitledeleteActionCreator","singletitleActionCreator","singletitledeleteActionCreator","JobDesc_Import","JobTitles","jt","gram","jdFile","setjdFile","JDDataSetup","JobDescUpload","JobTitleDropdown","titles","populate","GramViewer","Title","selectedtitle","g","JDDataViewer","jobtitles","JTSelect","RuleModelDropdown","rulemodels","ModalRuleManager","selModel","ruleset","RuleKey","ForceBubble","xfield","yfield","fieldnames","div_ID","size","d3","width","height","countTotal","sqrt","nodes","node","sleeve","groupNum","groupName","count","radius","svg","attr","clusters","domain","range","interpolator","force","on","k","this","alpha","n","x","label","selectAll","enter","text","queryInit","DateVar","Variable","QueryInit","ChartType","XFieldName","YFieldName","basicquery","basicquerySlice","qrybasicAdd","qrybasic_delete","queryModelSlice","qryAdd","qry_delete","basicqueryActionCreator","basicquerydeleteActionCreator","queryActionCreator","querydeleteActionCreator","EmployeeImportTest","params","nperiods","SelModel","fieldBand","dateSpread","ed","bg","dataencoded","rule","modelparams","fields","Field1","Field2","exceptions","exc","FieldNo","ExceptionVal","Operation","rulesetencoded","tuple","replace","report","reportType","dateEd","getDate","getMonth","getFullYear","dateBg","year","month","day","groupfield","chartType","ruleModelName","period","DateSpreadOptionSpread","ChangePeriod","NumberChange","numPer","divname","min","max","DateSpreadOptionRange","ChgDate","beginDateStr","marginTop","marginBottom","ChartLegend","legendDiv","GetFieldName","attrname","byField","UniqueArrayValues","array","uniquevals","c","Textwrap","yfactor","each","word","words","split","reverse","line","lineNumber","dy","parseFloat","tspan","pop","join","getComputedTextLength","BarChartStacked1","xcol","ycol","xgroups","groupcol","groups","colorScale","y2","mina2","useopacity","wait_period","dvals","dheights","dvars","dsums","GetCumVal","grp","gvar","bandwidth","transition","duration","cval","hval","GetVal","call","delay","PivotArray","byField1","byField2","aggField","arr","arrcount","arrsum","result","Count","Sum","Mean","round","LineChartStacked1","gdata","grpdata","LineChart1","ChartPrimary","charttype","colorauto","colors","chartDiv","showLabels","padding","mina","colordata","QueryModelDropdown","querymodels","EmpGraphs","RModels","Query","selDate","setSelDate","beginDate","setBeginDate","setNumPer","xFldName","setXFldName","setDateSpread","timeframeDisplay","setTimeframeDisplay","initDate","chartTitle","setChartTitle","ruleModel","setRuleModel","isimported","endDateStr","showBandInput","setParams","labelsonoff","colorGradientType","visualParams","setVisualParams","anti_colorGradientType","setAnti_colorGradientType","setColors","coloridx","setColorIdx","clickedopen","clickedclose","changeParameter","par","str","lmnt","importlmnt","changeVisualParameter","begin_end","date1","dates","changedisplay","Index","coll","getElementsByClassName","Array","from","lmntTop","lmnt2","display","CreateChart","sorteddata","xfieldname","chartpars","chartkeys","FieldSetup","xy","keynm","fontSize","repinfo_elem","ChangeReportModel","SwitchDate","innerText","ChangeRuleModel","SwitchBanding","colorelem","el_coll","ChangeColorIndex","onChangeComplete","hex","ChangeColor","SaveModel","ChangeQueryChartModel","RulesetsUpload","exceptiondata","fieldkey1","fieldkey2","andOr","rulename","RulesInit","Model","Rule","RuleModInit","ruleModelDataSlice","ruleModels","ruleModels_delete","rulesetDataSlice","ruledata","ruledata_delete","selectedRuleModelSlice","selruledata","selruledata_delete","RuleModelActionCreator","RuleModelDeleteActionCreator","RulesetsImport","ImportedModel","model","RulesetsDropdown","Change","RuleModelUpload","FieldsImportEmpValues","fieldname","fld_no","fldval1","RuleExceptionPicker","fieldNames","setFieldNames","fieldKeys","setFieldKeys","fvalues","setFValues","employee_full","fdata","fieldvalues","showMult","setShowMult","ChangeRadio","otherItm","itm","ColorChg","GetValsFromFields","fldnum","Dropdown","keyname","fieldkey","num","SetValue","Imports","CheckAgainstRule","backgroundcolor","check","RuleAdd","SubmitForm","ruleName","setRuleName","RuleModelDelete","location","reload","RulesetsDelete","RulesetsManager","addChangeRule","setAddChangeRule","modelName","setModelName","postmodelName","setPostModelName","selRule","setSelRule","setSelModel","ExistingModelchange","DeleteRule","elem1","ModelAssessment","marginRight","AddChangeModel","marginLeft","RulesDropdown","rn","mdl","RuleAdded","exceptionlist","substring","andorVal","andorSwitch","CreateRule","CreateModel","ChangedModel","DeptInit","AttrKey","Dept","DepartmentName","AsofDate","NextDate","IsMostRecent","Attribute1","Attribute2","Attribute3","Attribute4","deptDataSlice","deptAdd","dept_delete","departmentActionCreator","deptdeleteActionCreator","DepartmentImport","deptdata","dept","DepartmentUpload","asofDate","IsInVector","Arr","ind","ModelUploadChange","modelCategory","FilterData","onField","filterValue","returndata","EnumerateSelectedRow","selectedRow","keycol","colsHide","optionalchoices","Fields","newarry","keys","SubmitDepartment","colname","options","onInputChange","onDdownChange","opt","CustomTable","DeptData","pageNo","setPageNo","maxPg","setMaxPg","headerdata","setSelectedRow","maxno","ChangePage","direction","nextstep","OpenEditor","idno","isDisplayed","DepartmentTable","deptFile","setDeptFile","departments","showTable","setShowTable","IsTable","UploadBtn","SetFile","FieldsUploadNew","formdata","iskeyfield","attrName","headerName","FieldsViewer","fldFormData","setFldFormData","onFormChange","onCategoryChange","SubmitField","FieldsKey","fieldsFile","setFieldsFile","UploadFieldKeys","OnLoad","App","exact","component","ThreeTest","ThreeParticles","combineReducers","descgrams","relatedgrams","persistConfig","storage","persistedReducer","persistReducer","configureStore","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","store","ReactDOM","StrictMode","loading"],"mappings":"gpBAgHeA,EAzGA,WAEd,IAAMC,EAAkBC,aAAY,SAACC,GAAD,OAAgBA,EAAMC,QAGtDC,EAAY,CAAC,gBAAmB,UAAU,MAAS,WAwBvD,OACC,qBAAKC,UAAU,iDAAiDC,MA1B/C,CAAC,gBAAmB,UAAU,OAAS,KA0BxD,SACE,sBAAKD,UAAU,kBAAf,UACD,wBACEA,UAAU,iBACVE,KAAK,SACL,kBAAgB,WAChB,kBAAgB,aAChB,gBAAc,YACd,gBAAc,QACd,aAAW,oBAPb,SASC,mBAAGF,UAAU,kBAKd,qBAAKA,UAAU,2BAA2BG,GAAG,YAA7C,SACG,qBAAIH,UAAU,aAAd,UAED,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,IAAIH,MAAOF,EAApE,oBAGF,eAACM,EAAA,EAAD,CAAaC,MAAM,WAAWH,GAAG,sBAAjC,UACE,oBAAIH,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,kBAAkBH,MAAOF,EAAlF,qBAEF,oBAAIC,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,mBAAmBH,MAAOF,EAAnF,sBAEF,oBAAIC,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,mBAAmBH,MAAOF,EAAnF,sBAEF,oBAAIC,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,wBAAwBH,MAAOF,EAAxF,oCAIJ,eAACM,EAAA,EAAD,CAAaC,MAAM,UAAUH,GAAG,sBAAhC,UACC,oBAAIH,UAAU,WAAd,SACC,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,SAASH,MAAOF,EAAzE,yBAED,oBAAIC,UAAU,WAAd,SACC,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,mBAAmBH,MAAOF,EAAnF,4BAIF,eAACM,EAAA,EAAD,CAAaC,MAAM,UAAUH,GAAG,sBAAhC,UACC,oBAAIH,UAAU,WAAd,SACC,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,iBAAiBH,MAAOF,EAAjF,qBAED,oBAAIC,UAAU,WAAd,SACC,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,kBAAkBH,MAAOF,EAAlF,yBAIF,eAACM,EAAA,EAAD,CAAaC,MAAM,WAAWH,GAAG,sBAAjC,UACC,oBAAIH,UAAU,WAAd,SACC,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,eAAeH,MAAOF,EAA/E,kCAED,oBAAIC,UAAU,WAAd,SACC,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,iBAAiBH,MAAOF,EAAjF,8BAED,oBAAIC,UAAU,WAAd,SACC,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,cAAcH,MAAOF,EAA9E,6BAGDJ,EAAUY,gBA3Eb,oBAAIP,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,UAAUH,MAAOF,EAA1E,sBAdF,eAAC,WAAD,WACC,oBAAIC,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,SAASH,MAAOF,EAAzE,sBAEF,oBAAIC,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,UAAUH,MAAOF,EAA1E,qCCYSS,G,OA5BF,WAGZ,OACC,8BACC,sBAAKR,UAAU,UAAf,UAEC,qBAAKA,UAAU,YAAf,SACC,sBAAKA,UAAU,aAAf,UACC,oBAAIA,UAAU,YAAd,yBACA,mBAAGA,UAAU,OAAb,4EACA,oBAAIA,UAAU,SACd,sDAKF,qBAAKA,UAAU,sB,8BCTNS,EAAYC,YAAY,CACpCC,KAAM,cACNC,aAV2B,CAC1BC,MAAO,GACPC,SAAU,GACVC,UAAU,GACVR,iBAAiB,GAOlBS,SAAU,CACTC,MAAO,SAACpB,EAAD,GAAqH,IAA5GqB,EAA2G,EAA3GA,QAGf,MAAO,CACNL,MAAOK,EAAQL,MACfC,SAAUI,EAAQJ,SAClBC,UAAWG,EAAQH,UACnBR,gBAAiBW,EAAQX,kBAG3BY,OAAQ,SAACtB,EAAOuB,GAGf,MAAO,CACNP,MAAO,GACPC,SAAU,GACVC,UAAW,GACXR,iBAAiB,OAOd,EAGHE,EAAUY,QAFNC,EADD,EACNL,MACQM,EAFF,EAENJ,O,iBC2EcK,G,cA7GD,WAGb,IAAMC,EAAaC,cAInB,EAAgCC,mBAAS,CAClCd,MAAO,GACPC,SAAU,GAChBC,UAAW,GACXR,iBAAiB,IAJlB,mBAAOqB,EAAP,KAAiBC,EAAjB,KAOWhB,EAA+Be,EAA/Bf,MAAOC,EAAwBc,EAAxBd,SAAUC,EAAca,EAAdb,UAEnBe,EAAW,SAACC,GACpBF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOrB,KAAOoB,EAAEC,OAAOC,UAShDC,EAAY,WAEjB,IAKMC,EAAOC,KAAKC,UAAU,CAAExB,QAAOC,WAAUC,cAC/CuB,QAAQC,IAAIJ,GACZ,IACCK,IAAMC,KAAN,UAAcC,wBAAd,oBAA+DP,EARjD,CACdQ,QAAS,CACR,eAAgB,sBAOdC,MAAK,SAAAC,GACL,IAAIC,EAAYD,EAASE,KACrBC,EAAqBF,EAAMG,OAC/BX,QAAQC,IAAIO,GACZR,QAAQC,IAAIS,GAEZvB,EAAWH,EAAmB,CAC5BT,MAAMA,EACNC,SAAUA,EACVC,UAAWiC,EACXzC,iBAAiB,QAIrB,MAAO2C,GACRZ,QAAQC,IAAIW,KAKd,OACC,gCACC,sBAAKlD,UAAU,mBAAf,UACC,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,aAEjB,qBAAKA,UAAU,iBAAf,SAEC,sBAAKG,GAAG,WAAR,UACC,qBAAKA,GAAG,aAAR,sBACA,qBAAKA,GAAG,UAAR,SAEE,uBAAMH,UAAU,YAAYmD,SAAU,SAAApB,GAAC,OAlD3B,SAACA,GACXA,EAAEqB,iBACRlB,IAgD+CiB,CAASpB,IAApD,UACH,qBAAK/B,UAAU,oBAAf,SACC,uBACCA,UAAU,YACVE,KAAK,QACLmD,YAAY,QACZ1C,KAAK,QACLsB,MAAOpB,EACPiB,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBuB,UAAQ,MAGV,qBAAKtD,UAAU,YAAf,SACC,uBACCA,UAAU,YACVE,KAAK,WACLmD,YAAY,WACZ1C,KAAK,WACLsB,MAAOnB,EACPgB,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBwB,UAAW,MAGb,sBAAKpD,GAAG,gBAAR,kCAEI,cAAC,IAAD,CAAM,eAAa,OAAOC,GAAG,UAAUH,MAAO,CAAC,WAAa,OAA5D,wBAGJ,wBAAQD,UAAU,eAAlB,kCC5DYwD,G,cAvCA,WAGd,IAAM/B,EAAaC,cAEnB,EAAsBC,mBAAS,oBAA/B,mBAAO8B,EAAP,KAAYC,EAAZ,KASA,OACC,gCACC,sBAAK1D,UAAU,sBAAf,UACC,qBAAKA,UAAU,aACf,qBAAKA,UAAU,aACf,qBAAKA,UAAU,gBAEjB,qBAAKA,UAAU,kBAAf,SAEC,sBAAKG,GAAG,WAAR,UACC,qBAAKA,GAAG,aAAR,uBAEA,qBAAKA,GAAG,UAAR,SACC,wBAAQH,UAAU,gBAAgB2D,QApBnB,WAElBlC,EAAWF,EAAoB,KAC/BmC,EAAO,2CAiBJ,wBAGD,8BAAMD,cC8EKG,G,OA7GA,WAGd,IAAMnC,EAAaC,cAInB,EAAgCC,mBAAS,CAClCd,MAAO,GACPC,SAAU,GAChBH,KAAK,GACLkD,YAAa,GACbtD,iBAAiB,IALlB,mBAAOqB,EAAP,KAAiBC,EAAjB,KAQWhB,EAAuCe,EAAvCf,MAAOF,EAAgCiB,EAAhCjB,KAAMG,EAA0Bc,EAA1Bd,SAAU+C,EAAgBjC,EAAhBiC,YAEzB/B,EAAW,SAACC,GACpBF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOrB,KAAOoB,EAAEC,OAAOC,UAShD6B,EAAa,WAElB,IAKM3B,EAAOC,KAAKC,UAAU,CAAExB,QAAOF,OAAMG,WAAU+C,gBACrDvB,QAAQC,IAAIJ,GAEZ,IACCK,IAAMC,KAAN,UAAcC,wBAAd,yBAAoEP,EATtD,CACdQ,QAAS,CACR,eAAgB,sBAQdC,MAAK,SAAAC,GACL,IAAIC,EAAYD,EAASE,KACrBC,EAAqBF,EAAMG,OAC/BX,QAAQC,IAAIO,GACZR,QAAQC,IAAIS,GACZvB,EAAWH,EAAmB,CAC5BT,MAAMA,EACNC,SAAUA,EACVC,UAAWiC,EACXzC,iBAAiB,QAIrB,MAAO2C,GACRZ,QAAQC,IAAIW,KAKd,OACC,8BACA,qBAAKlD,UAAU,kBAAf,SAEC,sBAAKG,GAAG,YAAR,UACC,qBAAKA,GAAG,cAAR,wBACA,qBAAKA,GAAG,UAAR,SAEE,uBAAMH,UAAU,YAAYmD,SAAU,SAAApB,GAAC,OA7C3B,SAACA,GACXA,EAAEqB,iBACRU,IA2C+CX,CAASpB,IAApD,UACH,qBAAK/B,UAAU,oBAAf,SACC,uBACCA,UAAU,aACVE,KAAK,QACLmD,YAAY,QACZ1C,KAAK,QACLsB,MAAOpB,EACPiB,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBuB,UAAQ,MAGV,sBAAKtD,UAAU,YAAf,UACC,uBACCA,UAAU,aACVE,KAAK,WACLmD,YAAY,WACZ1C,KAAK,WACLsB,MAAOnB,EACPgB,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBwB,UAAW,IAEZ,uBACCvD,UAAU,aACVE,KAAK,WACLmD,YAAY,kBACZ1C,KAAK,cACLsB,MAAO4B,EACP/B,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBwB,UAAW,OAGb,wBAAQvD,UAAU,gBAAlB,uC,cCxEY+D,MAjCf,WACC,MAAM,g1BCuFQC,EA9EG,WACjB,IAEIC,EAGAC,EAJAC,EAAU,EAKVC,EAAQ,IAAIC,QACZC,EAAS,IAAID,oBAAyB,GAAIE,EAAK,GAAK,KACpDC,EAAW,IAAIH,gBACJ,IAAIA,gBAAoBC,EAAQE,EAASC,YAExDD,EAASE,QARD,IACA,KAmEN,OApBFC,qBAAU,WAETC,SAASC,eAAe,WAAWC,YAAYN,EAASC,YAExDH,EAAOS,SAASC,EAAI,KAGN,SAAVC,IAEHd,EAA8B,EAApBe,KAAKC,IA5DH,GA4DsB,EA/CnB,WAEhBf,EAAMgB,OAAOlB,GACbD,EAAW,CACVoB,IAAK,CAACnF,KAAM,OAAQ+B,MAAO,IAAIoC,UAAciB,OAAOC,WAAYD,OAAOE,cACvEC,OAAQ,CAACvF,KAAM,QAAS+B,MAAO,GAC/ByD,KAAM,CAACxF,KAAK,QAAS+B,MAAO,KAC5BkC,QAAS,CAACjE,KAAK,QAAQ+B,MAAOkC,GAC9BwB,MAAO,CAACzF,KAAK,OAAQ+B,MAAO,IAAIoC,UAAc,GAAG,IAAI,KACrDuB,MAAO,CAAC1F,KAAK,OAAQ+B,MAAO,IAAIoC,UAAc,GAAG,GAAG,KACpDwB,MAAO,CAAC3F,KAAK,QAAQ+B,MAAOkC,IAE3B,IAAI2B,EAAY,IAAIzB,sBAA0B,EAAG,GAC7C0B,EAAY,IAAI1B,iBAAqB,CAC1CJ,SAAUA,EACV+B,aAAcC,EACdC,eAAgBnC,MAEhBG,EAAO,IAAIG,OAAWyB,EAAWC,GACjC3B,EAAM+B,IAAIjC,GA6BVkC,GAEAC,sBAAuBpB,GACvBT,EAAS8B,OAAQlC,EAAOE,GAGzBW,KACI,IAIJ,qBAAK9E,GAAG,UAAUF,MAAO,CAAC,OAAS,QAAQ,MAAQ,YAO/CgG,EAAO,+IC5BEjC,EAzDG,WAEjB,IAEIE,EACAE,EAAQ,IAAIC,QACZC,EAAS,IAAID,oBAAyB,GAAIE,EAAK,GAAK,KAEpDC,EAAW,IAAIH,gBAEJ,IAAIA,gBAAoBC,EAAQE,EAASC,YAExDD,EAASE,QAVD,IACA,KAgDN,OA1BFC,qBAAU,WAETC,SAASC,eAAe,WAAWC,YAAYN,EAASC,YAExDH,EAAOS,SAASC,EAAI,GACpB,IAAIuB,EAAa,IAAIlC,aAAiB,UACtCkC,EAAWxB,SAASyB,KAAK,EAAE,EAAE,GAC7BpC,EAAM+B,IAAII,GAEV,IAAIE,EAAe,IAAIpC,eAAmB,UAC1CD,EAAM+B,IAAIM,GArBM,WAEhBrC,EAAMgB,OAAOlB,GAEZ,IAAIwC,EAAW,IAAIrC,eAAmB,EAAG,EAAG,GACxCsC,EAAW,IAAItC,sBAA0B,CAACuC,MAAO,UACrD1C,EAAO,IAAIG,OAAWqC,EAAUC,GAEhCvC,EAAM+B,IAAIjC,GAeXkC,IAGc,SAAVnB,IACHf,EAAK2C,SAASC,GAAK,IAEnBT,sBAAuBpB,GACvBT,EAAS8B,OAAQlC,EAAOE,GAGzBW,KACI,IAIJ,qBAAK9E,GAAG,UAAUF,MAAO,CAAC,OAAS,QAAQ,MAAQ,YCpD/C8G,G,OAA4B,CAAC,CAClCC,MAAO,GACPC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,QAAS,GACTC,OAAQ,EACRC,OAAQ,GACRC,SAAU,GACVC,YAAa,GACbC,WAAY,EACZC,WAAY,EACZC,OAAO,MAIFC,EAAsB,CAAC,CAC5BZ,MAAO,GACPC,KAAM,GACNY,WAAY,GACZC,aAAc,GACdjI,MAAOkH,IAGFgB,EAA2B,CAAC,CACjCC,UAAU,GACVH,WAAY,IAAIV,OAIJc,EAAgBvH,YAAY,CACxCC,KAAM,kBACNC,aAAcmH,EACd/G,SAAU,CACTkH,SAAU,CACTC,QAAS,SAACtI,EAAD,GAAgD,IAAvCqB,EAAsC,EAAtCA,QACjBrB,EAAMuI,KAAKlH,IAEZmH,QAAS,kBAAwC,CAChDnH,QAAS,CACR8G,UAFO,EAAEA,UAGTH,WAHO,EAAaA,eAOvBS,gBAAiB,SAACzI,EAAOuB,GACxBvB,EAAM0I,OAAO,EAAE1I,EAAM2I,YAMXC,EAAyB/H,YAAY,CACjDC,KAAM,sBACNC,aAAcmG,EACd/F,SAAU,CACT0H,aAAc,CACbP,QAAS,SAACtI,EAAD,GAAiD,IAAxCqB,EAAuC,EAAvCA,QACjBrB,EAAMuI,KAAKlH,IAEZmH,QAAS,kBAAgI,CACxInH,QAAS,CACR8F,MAFO,EAAEA,MAGTC,KAHO,EAASA,KAIhBC,SAJO,EAAeA,SAKtBC,KALO,EAAyBA,KAMhCC,QANO,EAA+BA,QAOtCC,OAPO,EAAwCA,OAQ/CC,OARO,EAAgDA,OASvDC,SATO,EAAwDA,SAU/DC,YAVO,EAAkEA,YAWzEC,WAXO,EAA+EA,WAYtFC,WAZO,EAA2FA,WAalGC,OAbO,EAAuGA,WAiBjHgB,qBAAsB,SAAC9I,EAAOuB,GAC7BvB,EAAM0I,OAAO,EAAE1I,EAAM2I,YAKXI,EAAoBlI,YAAY,CAC5CC,KAAM,iBACNC,aAAcgH,EACd5G,SAAU,CACT6H,QAAS,CACRV,QAAS,SAACtI,EAAD,GAAgD,IAAvCqB,EAAsC,EAAtCA,QACjBrB,EAAMuI,KAAKlH,IAEZmH,QAAS,kBAA+D,CACvEnH,QAAS,CACR8F,MAFO,EAAEA,MAGTC,KAHO,EAASA,KAIhBY,WAJO,EAAeA,WAKtBC,aALO,EAA2BA,aAMlCjI,MANO,EAAyCA,UAUnDiJ,gBAAiB,SAACjJ,EAAOuB,GACxBvB,EAAM0I,OAAO,EAAE1I,EAAM2I,YAOjB,EAGHC,EAAuBpH,QADJ0H,GAFhB,EACNL,aADM,EAENC,sBAKM,EAGHC,EAAkBvH,QAFZ2H,EADH,EACNH,QACiBI,EAFX,EAENH,gBAKM,EAGHb,EAAc5G,QAFP6H,EADJ,EACNhB,SACiBiB,EAFX,EAENb,gB,QC7Gcc,MApBf,SAAiBC,EAAKC,GAA0B,IAAtBC,EAAqB,uDAAZ,YAC5BC,EAAE,YAAOH,GACZ,OAAIG,EAAGhB,OAAS,GAClBgB,EAAGC,MAAK,SAACC,EAAGC,GACF,IAAIC,EAAK,IAAIzC,KAAKuC,EAAEJ,IAChBO,EAAK,IAAI1C,KAAKwC,EAAEL,IAEpB,MAAe,eAAXC,EACQM,EAAKD,EAENA,EAAKC,KAIbL,GAEAH,GCSAS,EArBQ,SAACC,EAAoBtI,GAE1Ce,IAAMwH,IAAN,UAAoBtH,wBAApB,0BAA2EqH,GACzEnH,MAAK,SAAAyC,GACL/C,QAAQC,IAAI8C,EAAItC,MAEhBtB,EAAW0H,EAA4B,KAEvC,IAAMc,EAAsB5E,EAAItC,KAC5BkH,EAAQzB,OAAO,GAClByB,EAAQC,SAAQ,SAAAC,GACf1I,EAAWyH,EAAsBiB,UAInCC,OAAM,SAAAlH,GACNZ,QAAQC,IAAI,kBC2BD8H,EAvCS,SAACC,GAExB,IAAKP,EAAiBO,EAAjBP,cACCtI,EAAaC,cAgCnB,OACC,wBAAQ1B,UAAU,eAAe2D,QA/Bf,WAGlBnB,IAAMwH,IAAN,UAAoBtH,wBAApB,sBAAuEqH,GACrEnH,MAAK,SAAAyC,GACL/C,QAAQC,IAAI8C,EAAItC,MAEhBtB,EAAWsH,EAA4B,KACvCtH,EAAWwH,EAAuB,KAElC,IAAMgB,EAAsB5E,EAAItC,KAC5BkH,EAAQzB,OAAO,GAClByB,EAAQC,SAAQ,SAAAC,GAEf,IAAMI,EAAyBJ,EAAKtK,MAChC2K,EAA0BC,EAASF,GAEvCJ,EAAKtK,MAAQ2K,EACb/I,EAAWuH,EAAqBmB,UAIlCC,OAAM,SAAAlH,GACNZ,QAAQC,IAAI,iBAGbuH,EAAeC,EAActI,IAK9B,qBC1BaiJ,EAjBK,SAACC,EAAgBC,EAAcC,EAAaC,GAG5DtI,IAAMC,KAAN,UAAcC,wBAAd,YAA+CkI,GACnCD,EACAE,GAEXjI,MAAK,SAAAyC,GACF/C,QAAQC,IAAI,0BACRuI,IAAMA,EAAKC,UAAY,6BAE9BX,OAAM,SAAAlH,GACHZ,QAAQC,IAAI,cACRuI,IAAMA,EAAKC,UAAY,2BCQpBC,EAnBS,SAACC,EAAkCC,EAAkBC,EACjDC,EAAgBP,EAAYQ,GAEtDJ,EAAM7H,iBAEN,IAAIuH,EAAY,IAAIW,SACpBX,EAAUY,OAAO,YAAYL,GAC7BP,EAAUY,OAAO,UAAUJ,GAC3BR,EAAUY,OAAO,UAAUH,GAE3B,IAAIN,EAAOlG,SAASC,eAAewG,GAChCP,IAAMA,EAAKC,UAAY,gBAE1BzI,QAAQC,IAAI,uBAGPmI,EAAYC,EAAU,wBAAwBE,EAAOC,I,yBC0B7CU,EAxCG,SAAClB,GAEf,IAAImB,EAAY7L,aAAY,SAACC,GAAD,OAAeA,EAAM6L,gBAEjD,EAAyC/J,oBAAS,GAAlD,mBAAKgK,EAAL,KAAoBC,EAApB,KAGMC,EAAc,WACnB,OACO,sBAAK7L,UAAU,YAAf,UACI,qBAAKG,GAAG,mBAAR,2CAEIsL,EAAUK,KAAI,SAACC,EAAaC,GAExB,OACI,sBAAa7L,GAAI4L,EAAG,IAApB,UACKA,EAAG,UADR,MAC0BA,EAAG,aADnBC,UAWlC,OACI,8BACI,yBAAQrI,QAvBI,WAAyBiI,GAAjBD,IAuBU1L,MAAO,CAACgM,OAAO,QAA7C,0CAEI,cAACC,EAAA,EAAD,CAAOC,KAAMR,EAAb,SACI,cAACE,EAAD,YCvBLO,GAXc,WASzB,MANsB,CAClBzJ,QAAS,CACL,cAAiB,UAHF/C,aAAY,SAACC,GAAD,OAAeA,EAAMC,QAGTiB,aCuBpCsL,GA3BU,SAACC,GAEtB,IAAMC,EAAoB3M,aAAY,SAACC,GAAD,OAAgBA,EAAMqI,YACxDsE,EAAiB,GAEjB,OACI,yBAAQrM,GAAG,kBAAkB2B,SAAUwK,EAAOA,OAA9C,UACI,qDAAY,KAIRC,EAAOT,KAAI,SAACW,EAAET,GACd,IAAmC,IAA/BQ,EAAME,QAAQD,EAAEzE,WAGhB,OAFAwE,EAAMpE,KAAKqE,EAAEzE,WAGT,wBAAqB/F,MAAOwK,EAAEzE,UAA9B,SACKyE,EAAEzE,WADM,IAAIgE,UCG9BW,GArBQ,SAACzB,EAAmBnB,EAAoBsB,GAE3D,IAAIV,EAAY,IAAIW,SACpBX,EAAUY,OAAO,YAAYL,GAE7B1I,IAAMC,KAAN,UAAcC,wBAAd,gCACIiI,EACAZ,GAEHnH,MAAK,SAAAyC,GACF/C,QAAQC,IAAI8C,GACZ/C,QAAQC,IAAI,WACZ8I,EAAcN,UAAY,WAAaG,EAAY,oBAEtDd,OAAM,SAAAlH,GACPZ,QAAQC,IAAI,uBACR8I,EAAcN,UAAY,0BCCrB6B,GAAgBlM,YAAY,CACxCC,KAAM,oBACNC,aAjB6B,CAAC,CAC9BiM,IAAI,GACJ7E,UAAW,GACX8E,SAAS,GACTC,UAAW,GACXC,WAAY,GACZC,SAAU,KAYVjM,SAAU,CACTkM,UAAW,CACV/E,QAAS,SAACtI,EAAD,GAAgD,IAAvCqB,EAAsC,EAAtCA,QACjBrB,EAAMuI,KAAKlH,IAEZmH,QAAS,kBAA4E,CACpFnH,QAAS,CACR2L,IAFO,EAAEA,IAGT7E,UAHO,EAAOA,UAId8E,SAJO,EAAkBA,SAKzBC,UALO,EAA4BA,UAMnCC,WANO,EAAuCA,WAO9CC,SAPO,EAAmDA,aAW7DE,aAAc,SAACtN,EAAOuB,GACrBvB,EAAM0I,OAAO,EAAE1I,EAAM2I,YAKX4E,GAAgB1M,YAAY,CACxCC,KAAM,sBACNC,aAjC+B,CAAC,CAChCyM,UAAU,GACVC,MAAO,GACPC,SAAU,IA+BVvM,SAAU,CACTwM,aAAc,CACbrF,QAAS,SAACtI,EAAD,GAAgD,IAAvCqB,EAAsC,EAAtCA,QACjBrB,EAAMuI,KAAKlH,IAEZmH,QAAS,kBAA8C,CACtDnH,QAAS,CACRmM,UAFO,EAAEA,UAGTC,MAHO,EAAaA,MAIpBC,SAJO,EAAoBA,aAQ9BE,gBAAiB,SAAC5N,EAAOuB,GACxBvB,EAAM0I,OAAO,EAAE1I,EAAM2I,YAKjB,GAGHoE,GAAcvL,QAFNqM,GADL,GACNR,UACcS,GAFR,GAENR,aAGM,GAGHC,GAAc/L,QAFHuM,GADR,GACNJ,aACiBK,GAFX,GAENJ,gBCrDcK,GAdM,SAACC,EAAsBlD,EAAYpJ,GACpD,IAAIuM,EAAe,GAWnB,OATAxL,IAAMC,KAAN,UAAqBC,wBAArB,6BAA8E,CAACqL,iBAAgBlD,GAC1FjI,MAAK,SAAAyC,GACF2I,EAAU3I,EAAItC,KACdtB,EAAWkM,GAAyB,KACpCK,EAAQ9D,SAAQ,SAAC6B,GACbtK,EAAWiM,GAAuB3B,UAIvCiC,GC8EIC,GApFW,WAEzB,MAA8BtM,qBAA9B,mBAAOwJ,EAAP,KAAgB+C,EAAhB,KACA,EAA8BvM,mBAAS,eAAvC,mBAAOyJ,EAAP,KAAgB+C,EAAhB,KAEOtD,EAASuB,KAEb,EAAkCzK,mBAAiB,IAAnD,mBAAOuJ,EAAP,KAAkBkD,EAAlB,KAGI3M,EAAaC,cAEjBiD,qBAAU,WACNmJ,GAAa,gBAAgBjD,EAAOpJ,MA6BxC,OACQ,sBAAKtB,GAAG,aAAR,UACI,qBAAKA,GAAG,kBAAR,iDACA,sBAAKA,GAAG,qBAAR,UACI,sBAAKH,UAAU,gBAAf,UAEI,uBAAMmD,SAAU,SAAApB,GAAC,OAAEsM,EAAetM,EAAEmJ,EAAWC,EAASC,EAASP,EAAO,qBAAqB5K,MAAO,CAAC,UAAY,OAAQ,UAAY,QAArI,UACI,uBAAOC,KAAK,OAAOF,UAAU,aAAaW,KAAK,aAAamB,SAAU,SAACC,GAAD,OAd5E,SAACA,GACXA,EAAEC,OAAOsM,OACTJ,EAAWnM,EAAEC,OAAOsM,MAAM,IAYiGC,CAAUxM,MACrH,yBAAQ5B,GAAG,gBAAgB2B,SAAU,SAACC,GAAD,OAnBvC,SAACA,GACnBoM,EAAWpM,EAAEC,OAAOC,OAkB2EuM,CAAczM,IAAzF,UACI,gDAAY,eACZ,0CAAY,SACZ,iDAAY,gBACZ,6CAAY,gBAEhB,iDACA,uBAAO7B,KAAK,OAAOS,KAAK,YAAYmB,SAAU,SAAAC,GAAC,OAAIqM,EAAarM,EAAEC,OAAOC,UACzE,wBAAQjC,UAAU,eAAeE,KAAK,SAAtC,yBACA,qBAAKC,GAAG,mBAAR,kBAGJ,qBAAKH,UAAU,YAAf,+BACA,cAAC,EAAD,OAGJ,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,YAAf,oCAEA,cAAC,EAAD,CAAgB+J,cAAec,IAE/B,qDACA,gCACI,wBAAQlH,QApDX,WACjBlC,EAAWwH,EAAuB,KAClCxH,EAAWsH,EAA4B,MAkDnB,oCACA,cAAC,GAAD,CAAkBuD,OAAQ,SAACvK,GAAD,OA1D9B,SAACA,GACjB,IAAIuH,EAAavH,EAAEC,OAAOyM,gBAAgB,GAAGxM,MAC7CmM,EAAa9E,GAwDuEoF,CAAY3M,MAC5E,wBAAQ4B,QAjDZ,WAChB,IAAImH,EAAwBlG,SAASC,eAAe,sBAChDiG,GAAM6B,GAAezB,EAAWL,EAAOC,IA+CvB,iCACA,qBAAK3K,GAAG,oCC5DrBwO,GA1BW,SAACrC,GAE1B,IAAMsC,EAAuBhP,aAAY,SAACC,GAAD,OAAgBA,EAAMgP,YAC3DrC,EAAY,GAEhB,OACC,yBAAQrM,GAAG,kBAAkB2B,SAAUwK,EAAOA,OAA9C,UACC,qDAAY,KAIXsC,EAAU9C,KAAI,SAACW,EAAET,GACjB,IAA+B,IAA3BQ,EAAME,QAAQD,EAAEzF,OAGnB,OAFAwF,EAAMpE,KAAKqE,EAAEzF,OAGZ,wBAAqB/E,MAAO+J,EAA5B,SACES,EAAExF,MADS,IAAI+E,U,cCCR8C,OAlBf,SAAwBC,EAAMC,GAE1B,IAAIC,EAAa,GAajB,OAZAC,OAAOC,QAAQJ,GAAM7E,SAAQ,YAAkB,IAAD,mBAAfkF,EAAe,UACjC,OAANA,GACKL,EAAKK,KAASJ,EAAKI,KACK,kBAAbL,EAAKK,GACZH,EAAW7G,KAAK,CAACgH,EAAKL,EAAKK,GAAMJ,EAAKI,GAAKL,EAAKK,GAAOJ,EAAKI,KAE5DH,EAAW7G,KAAK,CAACgH,EAAKL,EAAKK,GAAMJ,EAAKI,SAM/CH,GC4CII,GAxDQ,SAAC/E,GAEpB,IAAIgF,EAAsBhF,EAAMgF,UAC5BC,EAAsBjF,EAAMiF,UAC5BC,EAAkBlF,EAAMkF,QAEtBC,EAAc,WAEhB,OACI,sBAAKtP,GAAG,WAAR,UACI,sBAAKA,GAAG,aAAR,uBAAiCqP,KAC7B,sBAAKxP,UAAU,WAAf,2BACmBuP,EAAUpI,QAE7B,sBAAKnH,UAAU,WAAf,uBACeuP,EAAUnI,WAEzB,sBAAKpH,UAAU,WAAf,uBACeuP,EAAUhI,YAEzB,sBAAKvH,UAAU,WAAf,4BACoBuP,EAAUjI,UAE9B,sBAAKtH,UAAU,WAAf,qBACauP,EAAUlI,cAMjCqI,EAAe,WACjB,GAAIJ,EAAU,CACV,IAAIK,EAAcb,GAAeQ,EAAWC,GAC5C,OACI,sBAAKpP,GAAG,gBAAR,yBAEKwP,EAAY7D,KAAI,SAACsD,EAASpD,GACvB,OACA,sBAAahM,UAAU,OAAvB,UACKoP,EAAI,GADT,KACeA,EAAI,GADnB,IACwB,KADxB,IAC+BA,EAAI,KADzBpD,SAQtB,OAAO,yBAGf,OACI,gCACI,cAACyD,EAAD,IACA,cAACC,EAAD,QCsBGE,GAxEM,SAACtF,GAElB,IAEIiF,EACAD,EAHAO,EAAOvF,EAAMA,MACbwF,EAAUxF,EAAMyF,OAIpB,EAAyBpO,mBAAS,GAAlC,mBAAOqO,EAAP,KAAaC,EAAb,KACA,EAA8BtO,mBAAS,GAAvC,mBAAOuO,EAAP,KAAgBC,EAAhB,KAIMC,EAAU,WACZ,IAAIZ,EAAU,EACd,OAAIK,EAAKhQ,MAAM2I,OAAS,GAEhBsH,IAAUI,GACVX,EAAYM,EAAKhQ,MAAM,GACGyP,EAAJ,IAAtBO,EAAKhQ,MAAM2I,OAA2BqH,EAAKhQ,MAAM,GAAiBgQ,EAAKhQ,MAAM,KAE7E2P,EAAUQ,EAAM,EAChBT,EAAYM,EAAKhQ,MAAMmQ,GACSV,EAAhCU,EAAQH,EAAKhQ,MAAM2I,OAAS,EAAgBqH,EAAKhQ,MAAMmQ,EAAM,GAAiBH,EAAKhQ,MAAMmQ,IAGzF,sBAAK7P,GAAG,WAAR,UACI,cAACkQ,EAAD,IACA,cAACC,GAAD,CAAqBf,UAAWA,EAAWD,UAAWA,EAAWE,QAASA,QAI3E,yBAITa,EAAY,WACd,OACA,sBAAKrQ,UAAU,YAAf,UACI,qBAAKG,GAAG,cAAR,uBACA,qBAAKH,UAAU,YAAf,SACC6P,EAAKhQ,MAAMiM,KAAI,SAACyE,EAAavE,GAC1B,OACI,qBAEQ7L,GAAIqQ,OAAOxE,GACXhM,UAAU,YACV2D,QAAS,SAAC5B,GAAD,OAA6B0O,EAAW1O,IAJzD,SAMKwO,EAAGpJ,MALK6E,YAcvByE,EAAa,SAAC1O,GAChB,IAAI2O,GAAS3O,EAAE4O,cAAcxQ,GAC7B8P,EAASS,GACTP,EAAWL,IAGf,OACI,sBAAK3P,GAAG,aAAR,UACI,sBAAKA,GAAG,cAAcF,MAAO,CAAC,MAAS,SAAvC,cAAmD+P,EAAnD,cAAqEH,EAAK5I,KAA1E,SAAsF4I,EAAK7I,MAA3F,QACA,cAACoJ,EAAD,IACA,mBAAGpQ,UAAU,mBClDV4Q,GAtBQ,SAACtE,GAIvB,OACC,yBAAQnM,GAAG,kBAAkB2B,SAAUwK,EAAOA,OAA9C,UACC,2CAAY,KAJE,CAAC,WAAW,cAQlBR,KAAI,SAACW,EAAET,GACb,OACC,wBAAqB/J,MAAOwK,EAA5B,SACEA,GADW,IAAIT,UCJR6E,OATf,SAAoC9B,EAAMC,EAAM8B,GAE5C,OAAI/B,EAAK+B,KAAa9B,EAAK8B,GAChB,CAAC/B,EAAK+B,GAAW9B,EAAK8B,IAEtB,ICAAC,OALf,SAA2BC,EAAIF,GAE3B,OAAOE,EAAIF,IC8DAG,I,OA3DO,SAAC3G,GAEnB,IAAIuF,EAAiBvF,EAAMuF,KACvBqB,EAAgB5G,EAAM4G,MAGpBC,EAAa,WACf,IAAIC,EAAc,GACdC,EAAc,GAElB,OAAIxB,EAAKhQ,MAAM2I,OAAS,GACpBqH,EAAKhQ,MAAMqK,SAAQ,SAACqG,EAAavE,GAE7B,GAAQ,IAAJA,EAAM,CACN,IAAI1C,EAAMuH,GAA2BN,EAAGV,EAAKhQ,MAAMmM,EAAE,GAAGkF,GACpD5H,EAAId,OAAS,IACb4I,EAAQhJ,KAAK,CAACkB,EAAI,GAAIuG,EAAKhQ,MAAMmM,EAAE,GAAG7E,OACtCkK,EAAQjJ,KAAK,CAACkB,EAAI,GAAIiH,EAAGpJ,YAIjCkK,EAAQ7I,OAAS,EACjB4I,EAAQhJ,KAAKiJ,EAAQD,EAAQ5I,OAAS,IAEtC4I,EAAQhJ,KAAK,CAAC2I,GAAkBlB,EAAKhQ,MAAM,GAAGqR,GAAOrB,EAAKhQ,MAAM,GAAGsH,OAI/D,6DAEI,qBAAKhH,GAAG,kBAAR,SACKiR,EAAQtF,KAAI,SAACwF,EAAQtF,GAClB,OACI,sBAAiBhM,UAAU,WAA3B,UACI,oCAAOsR,EAAE,GAAT,OACA,oCAAOA,EAAE,GAAT,SAFMtF,EAAE,cAU7B,yBAKf,OA5CuB1B,EAAMiH,SA4CN,WAARL,EAEP,sBAAK/Q,GAAG,cAAR,UACG,sBAAKF,MAAO,CAAC,SAAW,QAAxB,uBAA4CiR,KAC5C,cAACC,EAAD,OAIA,0BC7DA,OAA0B,yCCuG1BK,GA7FY,WACvB,IAQMC,EAAmB7R,aAAY,SAACC,GAAD,OAAeA,EAAMgP,YAC1D,EAAkClN,mBATR,CACtBqF,MAAO,GACPC,KAAM,GACNY,WAAY,GACZC,aAAc,GACdjI,MAAO,KAIX,mBAAO6R,EAAP,KAAkBC,EAAlB,KACA,EAAoChQ,oBAAS,GAA7C,mBAAOiQ,EAAP,KAAmBC,EAAnB,KACA,EAA0ClQ,mBAAS,IAAnD,mBAAOmQ,EAAP,KAAsBC,EAAtB,KAeMC,EAAe,SAAC/G,EAAkCgH,GACpD,IAAIC,EAA8BtN,SAASC,eAAeoN,GACf,UAAvChH,EAAM0F,cAAc1Q,MAAMkS,YAEG,oBAAzBlH,EAAM0F,cAAcxQ,IACpB0R,GAAc,GAElB5G,EAAM0F,cAAc1Q,MAAMkS,WAAa,QACnCD,IAAWA,EAASjS,MAAMmS,gBAAkB,aAGnB,oBAAzBnH,EAAM0F,cAAcxQ,IACpB0R,GAAc,GAElB5G,EAAM0F,cAAc1Q,MAAMkS,WAAa,QACnCD,IAAWA,EAASjS,MAAMmS,gBAAkB,WAIxD,OACG,sBAAKjS,GAAG,oBAAR,UACL,sBAAKA,GAAG,eAAR,UACa,qBAAKA,GAAG,sBAAR,0BACC,sBAAKA,GAAG,yBAAR,UAEI,qBAAKA,GAAG,cAAcH,UAAU,gBAAgBC,MAAO,CAACmS,gBAAgB,WAAxE,SACI,sBAAKpS,UAAU,YAAf,UACA,qBAAKC,MAAO,CAAC,SAAW,OAAO,UAAY,QAA3C,8BACI,qBAAKA,MAAO,CAAC,UAAY,OAAzB,6BACA,cAAC,GAAD,CAAkBqM,OAAQ,SAACvK,GAAD,OA1ChC,SAACA,GACf,IAAI2O,GAAS3O,EAAEC,OAAOyM,gBAAgB,GAAG4D,WAAW,GAAGpQ,MACvD0P,EAAaF,EAAKf,IAClBpO,QAAQC,IAAIkP,EAAKf,IAuCmE4B,CAAUvQ,WAIlF,sBAAK5B,GAAG,gBAAgBH,UAAU,gBAAlC,UACI,gDACA,cAAC,GAAD,CAAgBsM,OAAQ,SAACvK,GAAD,OA1CxB,SAACA,GACvB,GAAIA,EAAEC,OAAOyM,gBAAgB,GAAG4D,WAAW7J,OAAO,EAAE,CACnD,IAAIuD,EAAahK,EAAEC,OAAOyM,gBAAgB,GAAG4D,WAAW,GAAGpQ,MAC3D8P,EAAiBhG,IAuCkEwG,CAAYxQ,SAGtE,qBAAK/B,UAAU,aAAaG,GAAG,cAA/B,SACI,qBAAKA,GAAG,kBAAkBH,UAAU,cAC5B2D,QAAS,SAAC5B,GAAD,OAAKiQ,EAAajQ,EAAE,sBAIzC,qBAAK/B,UAAU,aAAaG,GAAG,eAA/B,SACI,qBAAKA,GAAG,mBAAmBH,UAAU,cAC7B2D,QAAS,SAAC5B,GAAD,OAAKiQ,EAAajQ,EAAE,eAM7D,sBAAK/B,UAAU,WAAWC,MAAO,CACrBuS,gBAAgB,OAAD,OAASC,GAAT,KACf,OAAS,iBACTC,eAAgB,QAH5B,UAKI,cAAC,GAAD,CAAcpI,MAAOoH,EAAW3B,OAAQ2B,EAAU1K,QAClD,cAAC,GAAD,CAAe6I,KAAM6B,EAAYR,MAAOY,EAAeP,QAASK,WC1FtEe,GAA2B,CAAC,CACjCvL,QAAS,GACNwL,SAAU,GACVC,YAAa,GACbC,MAAO,KAqBEC,GAAerS,YAAY,CACvCC,KAAM,qBACNC,aARsC,CAAC,CACpCoS,YAAa,GACbC,YAAa,KAOhBjS,SAAU,CACTkS,gBAAiB,CAChB/K,QAAS,SAACtI,EAAD,GAAmD,IAA1CqB,EAAyC,EAAzCA,QACjBrB,EAAMuI,KAAKlH,IAEZmH,QAAS,kBAAiD,CACzDnH,QAAS,CACR8R,YAFO,EAAEA,YAGTC,YAHO,EAAeA,gBAOzBE,mBAAoB,SAACtT,EAAOuB,GAC3BvB,EAAM0I,OAAO,EAAE1I,EAAM2I,YAMX4K,GAAoB1S,YAAY,CAC5CC,KAAM,sBACNC,aA1CgC,CAAC,CACjCyS,QAAS,GACTC,cAAe,GACZC,KAAM,GACNC,SAAU,GACbC,SAAU,EACVhM,WAAY,EACTC,WAAY,EACZgM,WAAY,EACfC,MAAO,KAkCP3S,SAAU,CACT4S,aAAc,CACbzL,QAAS,SAACtI,EAAD,GAAgD,IAAvCqB,EAAsC,EAAtCA,QACjBrB,EAAMuI,KAAKlH,IAEZmH,QAAS,kBAA+G,CACvHnH,QAAS,CACRmS,QAFO,EAAEA,QAGTC,cAHO,EAAWA,cAIlBC,KAJO,EAA0BA,KAKjCC,SALO,EAAgCA,SAMvCC,SANO,EAA0CA,SAOjDhM,WAPO,EAAoDA,WAQ3DC,WARO,EAAgEA,WASxDgM,WATR,EAA4EA,WAUpEC,MAVR,EAAwFA,UAclGE,gBAAiB,SAAChU,EAAOuB,GACxBvB,EAAM0I,OAAO,EAAE1I,EAAM2I,YAMXsL,GAAoBpT,YAAY,CAC5CC,KAAM,kBACNC,aAAc+R,GACd3R,SAAU,CACT+S,SAAU,CACT5L,QAAS,SAACtI,EAAD,GAAgD,IAAvCqB,EAAsC,EAAtCA,QACjBrB,EAAMuI,KAAKlH,IAEZmH,QAAS,kBAAwD,CAChEnH,QAAS,CACRkG,QAFO,EAAEA,QAGTwL,SAHO,EAAWA,SAIlBC,YAJO,EAAqBA,YAK5BC,MALO,EAAkCA,UAS5CkB,gBAAiB,SAACnU,EAAOuB,GACxBvB,EAAM0I,OAAO,EAAE1I,EAAM2I,YAMXyL,GAAuBvT,YAAY,CAChDC,KAAM,kBACNC,aAAc+R,GACd3R,SAAU,CACRkT,YAAa,CACZ/L,QAAS,SAACtI,EAAD,GAAgD,IAAvCqB,EAAsC,EAAtCA,QACjBoB,QAAQC,IAAIrB,GACZrB,EAAMuI,KAAKlH,IAEZmH,QAAS,kBAAwD,CAChEnH,QAAS,CACRkG,QAFO,EAAEA,QAGTwL,SAHO,EAAWA,SAIlBC,YAJO,EAAqBA,YAK5BC,MALO,EAAkCA,UAS5CqB,mBAAoB,SAACtU,EAAOuB,GAC3BvB,EAAMuU,MAAM,EAAEvU,EAAM2I,QACpBlG,QAAQC,IAAI1C,OAMR,GAGHkT,GAAa1R,QADIgT,IAFd,GACNnB,gBADM,GAENC,oBAKM,GAGHC,GAAkB/R,QADJiT,IAFX,GACNV,aADM,GAENC,iBAKM,GAGHC,GAAkBzS,QAFXkT,GADJ,GACNR,SACiBS,GAFX,GAENR,gBAKM,GAGHC,GAAqB5S,QAFXoT,GADP,GACNP,YACoBQ,GAFd,GAENP,mBC7GcQ,GApCQ,SAACrK,GAEvB,IAAKP,EAAiBO,EAAjBP,cACEtI,EAAaC,cA6BpB,OACC,wBAAQ1B,UAAU,cAAc2D,QA5Bd,WAGlBnB,IAAMwH,IAAN,UAAoBtH,wBAApB,gBAAiEqH,GAC/DnH,MAAK,SAAAyC,GACL/C,QAAQC,IAAI8C,EAAItC,MAChB,IAAI6R,EAAuBvP,EAAItC,KAEnBtB,EAAW+S,GAA4B,KACvC/S,EAAW6S,GAA4B,KACvC7S,EAAW4S,GAA2B,KAEtCO,EAAU1K,SAAQ,SAAC2K,GACfpT,EAAW8S,GAAsBM,IAEjCA,EAAG/B,MAAM5I,SAAQ,SAAA4K,aAOjC1K,OAAM,SAAAlH,GACNZ,QAAQC,IAAI,kBAKd,6BCMaoS,GA7CQ,SAACrK,GAEvB,IAAKP,EAAiBO,EAAjBP,cAEL,EAAkCpI,mBAAS,MAA3C,mBAAOuJ,EAAP,KAAkBkD,EAAlB,KACA,EAA4BzM,mBAAS,IAArC,mBAAOoT,EAAP,KAAeC,EAAf,KA8BA,OACC,uBAAM7R,SA7BY,SAAC8H,GAEnBA,EAAM7H,iBACN,IAAIuH,EAAY,IAAIW,SACpBX,EAAUY,OAAO,YAAYL,GAC7BP,EAAUY,OAAO,SAASwJ,GAE1BzS,QAAQC,IAAI,uBAGNC,IAAMC,KAAN,UAAcC,wBAAd,uBAEHiI,EACAZ,GAEInH,MAAK,SAAAyC,GACX/C,QAAQC,IAAI,eACDqC,SAASC,eAAe,mBAC9BkG,UAAY,4BAEXX,OAAM,SAAAlH,GACZZ,QAAQC,IAAI,cACDqC,SAASC,eAAe,mBAC9BkG,UAAY,0BAMU9K,MAAO,CAAC,UAAY,OAAQ,UAAY,QAApE,UACC,uBAAOC,KAAK,OAAOF,UAAU,YAAYW,KAAK,SAASmB,SAAU,SAAAC,GAAC,OAAIiT,EAAUjT,EAAEC,OAAOsM,MAAM,OAC/F,iDACA,uBAAOpO,KAAK,OAAOS,KAAK,YAAYmB,SAAU,SAAAC,GAAC,OAAIqM,EAAarM,EAAEC,OAAOC,UACzE,wBAAQjC,UAAU,cAAcE,KAAK,SAArC,yBACA,qBAAKC,GAAG,kBAAR,mBCiBY8U,I,OApDK,WAEhB,IAAIxT,EAAaC,cAEXmJ,EAAS,CACjBlI,QAAS,CACR,cAAiB,UAHQ/C,aAAY,SAACC,GAAD,OAAgBA,EAAMC,QAGpBiB,YAGzC,EAAkCY,mBAAS,MAA3C,mBAAOuJ,EAAP,KAAkBkD,EAAlB,KACA,EAA4BzM,qBAA5B,mBAAOoT,EAAP,KAAeC,EAAf,KAWG,OACQ,sBAAK7U,GAAG,eAAR,UACI,qBAAKA,GAAG,iBAAR,8CACA,sBAAKA,GAAG,oBAAR,UACI,sBAAKH,UAAU,eAAf,UACI,qBAAKA,UAAU,WAAf,+BAEA,uBAAMmD,SAAU,SAACpB,GAAD,OAAgCmT,GAAcnT,EAAEmJ,EAAW6J,EAAQlK,EAAQ,oBAC/E5K,MAAO,CAAC,UAAY,OAAQ,UAAY,QADpD,UAEI,uBAAOC,KAAK,OAAOF,UAAU,YAAYW,KAAK,SACtCmB,SAAU,SAACC,GAAD,OAfxB,SAACA,GACXA,EAAEC,OAAOsM,OAAO0G,EAAUjT,EAAEC,OAAOsM,MAAM,IAc8BC,CAAUxM,MACjE,iDACA,uBAAO7B,KAAK,OAAOS,KAAK,YAAYmB,SAAU,SAAAC,GAAC,OAAIqM,EAAarM,EAAEC,OAAOC,UACzE,wBAAQjC,UAAU,cAAcE,KAAK,SAArC,yBACA,qBAAKC,GAAG,kBAAR,qBAKR,sBAAKH,UAAU,eAAf,UACI,cAAC,GAAD,CAAesK,MAAOO,IACtB,qDACA,wBAAQlH,QA/BP,WACjBlC,EAAW+S,GAA4B,KACvC/S,EAAW6S,GAA4B,MA6BvB,0CAIR,cAAC,EAAD,SC3BDa,GA1BU,SAAC7K,GACtB,IAAI8K,EAAqB9K,EAAMsK,UAG/B,OAFwBtK,EAAM+K,SAItB,yBAAQvT,SAAUwI,EAAMgC,OAAxB,UACI,qDAAY,KADhB,UAKK8I,EAAOtJ,KAAI,SAAC+I,EAAa7I,GACtB,OACA,wBAAgB/J,MAAO+J,EAAvB,SACK6I,EAAGjC,UADK5G,SASlB,yBCQAsJ,I,OA5BI,WAEf,IAAMC,EAAoB3V,aAAY,SAACC,GAAD,OAAeA,EAAM2V,iBAErD/T,EAAaC,cAOnB,OACI,gCACG,wBAAQiC,QAPC,WACZlC,EAAWiT,GAA+B,KAC1CpS,QAAQC,IAAI,uBAKT,qCACFgT,EAAMA,EAAM/M,OAAO,GAAGsK,MAAMhH,KAAI,SAAC2J,EAAWzJ,GACzC,OACI,sBAAoBhM,UAAU,QAA9B,UACI,sBAAoBA,UAAU,WAA9B,UAA0CyV,EAAElC,KAA5C,MAAUvH,EAAE,QACZ,sBAAsBhM,UAAU,cAAhC,UACI,oCAAmByV,EAAEhC,SAArB,MAAUzH,EAAE,KACZ,gCAAkByJ,EAAEjC,SAApB,MAAUxH,EAAE,OAFNA,EAAE,YAFNA,EAAE,gBCeb0J,GA7BM,WAEjB,IAEIL,EAFEM,EAAwB/V,aAAY,SAACC,GAAD,OAAeA,EAAM8V,aAG3DlU,EAAaC,cAGZ2T,EADDM,EAAUnN,OAAS,EAcvB,OACI,gCACI,cAAC,GAAD,CAAkBoM,UAAWe,EAAWN,SAAUA,EAAU/I,OAAQ,SAACvK,GAAD,OAV3D,SAACA,GACd,IAAI2O,GAAS3O,EAAEC,OAAOyM,gBAAgB,GAAG4D,WAAW,GAAGpQ,MACvDK,QAAQC,IAAImO,GACZpO,QAAQC,IAAIoT,EAAUjF,IAEtBjP,EAAWgT,GAAyBkB,EAAUjF,KAKgEkF,CAAS7T,MACnH,cAAC,GAAD,Q,oBCHG8T,GAzBW,SAACvJ,GAE1B,IAAMC,EAAqB3M,aAAY,SAACC,GAAD,OAAgBA,EAAMiW,cAE7D,OACC,yBAAQ3V,GAAG,kBAAkB2B,SAAUwK,EAAOA,OAA9C,UACC,wBAAgBrK,MAAO,EAAvB,8BAAY,KAGZ,wBAAiBA,MAAO,KAAxB,iBAAY,MAKXsK,EAAOT,KAAI,SAACW,EAAET,GACb,OACC,wBAAqB/J,MAAO+J,EAA5B,SACES,EAAEzE,WADS,IAAIgE,UCqBR+J,I,cAjCU,SAACzL,GAEtB,IAAM0L,EAAqB1L,EAAM0L,SAIjC,OAAIA,EAEI,sBAAK7V,GAAG,gBAAR,UAEA,sBAAKA,GAAG,wBAAR,UACI,sBAAKA,GAAG,oBAAR,2BAA2C6V,EAAShO,aACpD,8BAEIgO,EAASC,QAAQnK,KAAI,SAACW,EAAET,GACpB,OACI,yCACWS,EAAEyJ,UADH,IAAIlK,WAQ9B,cAAC,IAAD,CAAM5L,GAAG,wBAAT,SACI,qBAAKD,GAAG,cAAR,qCAMG,0B,QCqFJgW,GAzHK,SAACpT,EAAMqT,EAAQC,EAAQC,EAAYC,EAAOC,GAE7DC,KAAU,YAAYrR,SAEtB,IAEIsR,EAAQF,EAAK,GACbG,EAASH,EAAK,GAGdI,EAAa,EAChB7T,EAAK+I,KAAI,SAASW,GACjBmK,GAAe1R,KAAK2R,MAAMpK,EAAE4J,OAI9B,IAAIS,EAAS/T,EAAK+I,KAAI,SAASW,EAAET,GAC5B,IAAI+K,EAAO,GAOV,OANAA,EAAK5W,GAAK6L,EACV+K,EAAKC,OAASvK,EAAE2J,GAChBW,EAAKE,SAAW,EAChBF,EAAKG,UAAYzK,EAAE2J,GACnBW,EAAKI,OAAS1K,EAAE4J,GAChBU,EAAKK,OAASlS,KAAK2R,MAAMpK,EAAE4J,IAASnR,KAAK2R,KAAKD,GAAc,IACrDG,KAEZzU,QAAQC,IAAIuU,GAEZ,IAAIO,EAAMZ,KAAUF,GACjBhL,OAAO,OACP+L,KAAK,KAAK,WACVA,KAAK,QAAQZ,GACbY,KAAK,SAASX,GACdW,KAAK,YAAY,mBACjBrX,MAAM,mBAAoB,QAC1BsL,OAAO,KAENgM,EAAWd,OACZe,OAAOf,KAAS1T,EAAKyF,SACrBiP,MAAM,CAAC,IAAId,EAAO,MAGjB/P,EAAQ6P,OACPe,OAAO,CAAC,EAAEzU,EAAKyF,SACfkP,aAAajB,MAEDA,OACXkB,MAAM,SAAUlB,QAChBkB,MAAM,YAAalB,OAAkBW,QAAO,SAAS3K,GAAG,OAAOA,EAAE2K,WACjEO,MAAM,SAAUlB,KAAeC,EAAQ,EAAGC,EAAS,IAGvDG,MAAMA,GACNc,GAAG,QAgCN,WACC,IAAIC,EAAmB,GAAfC,KAAKC,QAEbjB,EAAM5M,SAAQ,SAAS8N,EAAGhM,GACxBgM,EAAElR,IAAMyQ,EAASS,EAAEf,UAAYe,EAAElR,GAAK+Q,EACtCG,EAAEC,IAAM,EAAID,EAAEC,GAAKJ,KAGrBd,EACEO,KAAK,MAAM,SAAS7K,GAAK,OAAOA,EAAEwL,KAClCX,KAAK,MAAM,SAAS7K,GAAK,OAAOA,EAAE3F,KACpCoR,EACEZ,KAAK,KAAK,SAAS7K,GAAK,OAAOA,EAAEwL,KACjCX,KAAK,KAAK,SAAS7K,GAAK,OAAOA,EAAE3F,QA1CnC,IAAIiQ,EAAOM,EAAI9L,OAAO,KACpB+L,KAAK,QAAS,SACda,UAAU,UACVpV,KAAK+T,GACLsB,QACA7M,OAAO,UACP+L,KAAK,KAAK,SAAS7K,GAAG,OAAOA,EAAE2K,UAC/BE,KAAK,QAAQ,SAASlW,EAAE4K,GAAK,OAAOpF,EAAMoF,MAQ5C+K,EAAKxL,OAAO,SACT8M,MAAK,SAAS5L,GAAI,OAAOA,EAAEyK,aAE9B,IAAIgB,EAAQb,EAAI9L,OAAO,KAClB+L,KAAK,QAAS,cACda,UAAU,SACVpV,KAAK+T,GACLsB,QACA7M,OAAO,QACP+L,KAAK,OAAO,SACZA,KAAK,IAAI,GACTA,KAAK,IAAI,GACTe,MAAK,SAAS5L,GAAI,OAAOA,EAAE2K,QA/EjB,GA+EuC3K,EAAEyK,UAAY,OCjFhEoB,GAAyB,CAAC,CAC5BtQ,UAAU,GACbuQ,QAAS,IAAIpR,KACVqR,SAAS,GACTlL,MAAM,IAGJmL,GAAyB,CAAC,CAC/BzQ,UAAW,GACX0Q,UAAU,GACV/Q,OAAO,GACPgR,WAAW,GACXC,WAAW,GACXC,WAAYP,KAKAQ,GAAkBpY,YAAY,CAC1CC,KAAM,kBACNC,aAAc0X,GACdtX,SAAU,CACT+X,YAAa,CACZ5Q,QAAS,SAACtI,EAAD,GAAkD,IAAzCqB,EAAwC,EAAxCA,QACjBrB,EAAMuI,KAAKlH,IAEZmH,QAAS,kBAAyD,CACjEnH,QAAS,CACR8G,UAFO,EAAGA,UAGVuQ,QAHO,EAAcA,QAIrBC,SAJO,EAAuBA,SAK9BlL,MALO,EAAiCA,UAS3C0L,gBAAiB,SAACnZ,EAAOuB,GACxBvB,EAAM0I,OAAO,EAAE1I,EAAM2I,YAMXyQ,GAAkBvY,YAAY,CAC1CC,KAAM,aACNC,aAAc6X,GACdzX,SAAU,CACTkY,OAAQ,CACP/Q,QAAS,SAACtI,EAAD,GAAkD,IAAzCqB,EAAwC,EAAxCA,QACjBrB,EAAMuI,KAAKlH,IAEZmH,QAAS,kBAAsF,CAC9FnH,QAAS,CACR8G,UAFO,EAAGA,UAGV0Q,UAHO,EAAcA,UAIrB/Q,OAJO,EAAyBA,OAKhCgR,WALO,EAAiCA,WAMxCC,WANO,EAA6CA,WAOpDC,WAPO,EAAyDA,eAWnEM,WAAY,SAACtZ,EAAOuB,GACnBvB,EAAM0I,OAAO,EAAE1I,EAAM2I,YAMjB,GAGHsQ,GAAgBzX,QAFN+X,GADP,GACNL,YACiBM,GAFX,GAENL,gBAIM,GAGHC,GAAgB5X,QAFXiY,GADF,GACNJ,OACYK,GAFN,GAENJ,WCWcK,GAtFY,SAACC,EAAYvO,EAAkBwO,EAAkBC,EAA2BC,EACvEC,EAAoBC,EAAUC,EAC9BlP,EAAYpJ,GAExC,IAAIkJ,EAAY,IAAIW,SAEhB,GAAIqO,EAAS,CACT,IAAIK,EAAkB,GACtBL,EAAS1D,QAAQ/L,SAAQ,SAAC+P,EAAUjO,GAChC,IAAIkO,EAAyB,GACzBC,EAAS,CAACF,EAAKG,OAAOH,EAAKI,QAC/BJ,EAAKK,WAAWpQ,SAAQ,SAAAqQ,GACpBL,EAAY9R,KAAK,CACDoI,OAAOxE,GACPwE,OAAO+J,EAAIC,SACXhK,OAAO2J,EAAOI,EAAIC,QAAQ,IAC1BhK,OAAO+J,EAAIE,cACXR,EAAKS,eAKzB,IAAIC,EAAiBT,EAAYpO,KAAI,SAAC8O,GAClC,MAAO,CACHA,EAAM,GACNA,EAAM,GACNpK,OAAOoK,EAAM,IAAIC,QAAQ,IAAzB,UAAgCnY,QAChC8N,OAAOoK,EAAM,IAAIC,QAAQ,IAAzB,UAAgCnY,QAChCkY,EAAM,OAGdZ,EAAY5R,KAAKuS,MAErBhQ,EAAUY,OAAO,OAAOiF,OAAOwJ,SAE/BrP,EAAUY,OAAO,OAAOiF,OAAO,CAAC,MAGpC,IAAIsK,EAAgB,GACI,gBAApBrB,EAAOsB,aAA4BD,EAAS,eACxB,UAApBrB,EAAOsB,aAAsBD,EAAS,QAClB,iBAApBrB,EAAOsB,aAA6BD,EAAS,QACzB,cAApBrB,EAAOsB,aAA0BD,EAAS,YACtB,eAApBrB,EAAOsB,aAA2BD,EAAS,SAE/C,IAAIE,EAAS,CAAC,IAAOlB,EAAGmB,UAAW,MAASnB,EAAGoB,WAAW,EAAG,KAAOpB,EAAGqB,eACnEC,EAAS,CAAC,IAAOrB,EAAGkB,UAAW,MAASlB,EAAGmB,WAAW,EAAG,KAAOnB,EAAGoB,eAEvExQ,EAAUY,OAAO,UAAUiF,OAAOwK,EAAOK,OACzC1Q,EAAUY,OAAO,WAAWiF,OAAOwK,EAAOM,QAC1C3Q,EAAUY,OAAO,SAASiF,OAAOwK,EAAOO,MACxC5Q,EAAUY,OAAO,UAAUiF,OAAO4K,EAAOC,OACzC1Q,EAAUY,OAAO,WAAWiF,OAAO4K,EAAOE,QAC1C3Q,EAAUY,OAAO,SAASiF,OAAO4K,EAAOG,MAExC5Q,EAAUY,OAAO,YAAYL,GAC7BP,EAAUY,OAAO,oBAAoB,SACrCZ,EAAUY,OAAO,OAAOkO,EAAO+B,YAC/B7Q,EAAUY,OAAO,YAAYkO,EAAOgC,WACpC9Q,EAAUY,OAAO,gBAAgBkO,EAAOiC,eACxC/Q,EAAUY,OAAO,SAASkO,EAAOkC,QACjChR,EAAUY,OAAO,YAAYqO,GAC7BjP,EAAUY,OAAO,aAAauP,GAC9BnQ,EAAUY,OAAO,WAAWiF,OAAOkJ,IACnC/O,EAAUY,OAAO,aAAasO,GAG9BrX,IAAMC,KAAN,UAAmBC,wBAAnB,wBAAuEiI,EAAWE,GACjFjI,MAAK,SAAAyC,GAKF,GAJA/C,QAAQC,IAAI8C,EAAItC,MAChBtB,EAAW8X,GAAyB,KACpC9X,EAAW4X,GAA8B,KAExB,YAAbhU,EAAItC,KAAmB,CACvB,IAAIA,EAAkBsC,EAAItC,KAE1BtB,EAAW6X,GAAmBvW,IAE9BA,EAAK8V,WAAW3O,SAAQ,SAACZ,GACrB7H,EAAW2X,GAAwB9P,YChExCsS,GAnBgB,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,aAAaC,EAAiC,EAAjCA,aAAaC,EAAoB,EAApBA,OAAOC,EAAa,EAAbA,QAC9D,OACI,yCAEI,yBAAQla,SAAU,SAACC,GAAD,OAAK8Z,EAAa9Z,IAApC,UACI,mDACA,4CACA,6CACA,+CAGJ,oDAEI,uBAAO7B,KAAK,SAASS,KAAK,YAAYsb,IAAI,IAAIC,IAAI,KAAKja,MAAO8Z,EAAQja,SAAUga,OAEpF,qBAAK3b,GAAI6b,EAAT,mBCJGG,GAVe,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,QAAQC,EAA0B,EAA1BA,aAAaL,EAAa,EAAbA,QACjD,OACI,sBAAK/b,MAAO,CAAC0W,OAAQ,SAArB,UACI,sDACA,sBAAK1W,MAAO,CAACqc,UAAW,OAAQC,aAAc,QAA9C,wBAAmEF,KACnE,cAAC,KAAD,CAAYva,SAAU,SAACC,GAAD,OAAOqa,EAAQra,MACrC,qBAAK5B,GAAI6b,EAAT,mBCgCGQ,GAtCK,SAACzZ,EAAM0Z,EAAWjG,GAElCC,KAAU,cAAcrR,SAExB,IAAI6G,EAAe,GAAfA,EAA0B,GAA1BA,EAAsC,GAAtCA,EAAgD,GACpDyK,EAAQF,EAAK,GAAKvK,EAAcA,EAChC0K,EAASH,EAAK,GAAKvK,EAAaA,EAE5BoL,EAAMZ,KAAUgG,GAAWlR,OAAO,OACzB+L,KAAK,QAASZ,EAAQzK,EAAcA,GACpCqL,KAAK,SAAUX,EAAS1K,EAAaA,GACrCqL,KAAK,KAAK,aACV/L,OAAO,KACP+L,KAAK,YAAY,aAAerL,EAAc,IAAMA,EAAa,KAEtEoL,EAAIc,UAAU,QACTpV,KAAKA,GACLqV,QAAQ7M,OAAO,QACf+L,KAAK,QAAS,OACdA,KAAK,KAAK,SAAS7K,EAAET,GAAK,OAAO,KACjC/L,MAAM,QAAQ,SAASwM,EAAET,GAAK,OAAOS,EAAE,MACvC6K,KAAK,QAAS,IACdA,KAAK,KAAK,SAAS7K,EAAET,GAAK,OAAS,GAAFA,KACjCsL,KAAK,UAAU,SAASlW,GAAK,OAAO,MAEzCiW,EAAI9L,OAAO,KAAK4M,UAAU,QACrBpV,KAAKA,GACLqV,QAAQ7M,OAAO,QAEf+L,KAAK,cAAc,SACnBA,KAAK,eAAe,GACpBrX,MAAM,QAAQ,SACdqX,KAAK,KAAI,SAAS7K,EAAET,GAAK,OAAO,MAChCsL,KAAK,KAAK,SAAS7K,EAAET,GAAK,OAAS,GAAFA,EAAO,MACxCqM,MAAK,SAAS5L,GAAK,OAAOA,EAAE,OCjB9BiQ,GAjBM,SAACvC,EAAmBwC,GAA0C,IAAxBC,EAAuB,uDAAf,WAC3DtT,EAAc,GAclB,OAZA6Q,EAAOjQ,SAAQ,SAAA6B,GACO,aAAV6Q,GACI7Q,EAAIe,WAAW6P,IACfrT,EAAMyC,EAAIgB,WAGJ,QAAV6P,GACI7Q,EAAIc,MAAM8P,IACVrT,EAAMyC,EAAIgB,cAInBzD,GCSIuT,OAzBf,SAA2BC,EAAO5L,GAG9B,IAAI6L,EAAa,GAoBjB,OAnBAD,EAAM5S,SAAQ,SAAA8S,IAC4B,IAAlCD,EAAWrQ,QAAQsQ,EAAE9L,KACrB6L,EAAW3U,KAAK4U,EAAE9L,OAK1B6L,EAAWtT,MAAM,SAASC,EAAGC,GACzB,OAAID,EAAElB,OAAS,GAGRkB,EAAE,KAAKC,EAAE,GAFJD,EAAE,GAAKC,EAAE,GAKLD,EAAE,GAAKC,EAAE,MAKtBoT,GCEME,OAxBjB,SAAkB5E,EAAM3B,EAAMwG,GAC1B7E,EAAK8E,MAAK,WAWR,IAVA,IAEIC,EAFA/E,EAAO5B,KAAUqB,MACjBuF,EAAQhF,EAAKA,OAAOiF,MAAM,OAAOC,UAEjCC,EAAO,GACPC,EAAa,EAEbxF,EAAII,EAAKf,KAAK,KACdxQ,EAAIuR,EAAKf,KAAK,KACdoG,EAAKC,WAAWtF,EAAKf,KAAK,OAC1BsG,EAAQvF,EAAKA,KAAK,MAAM9M,OAAO,SAAS+L,KAAK,IAAKW,GAAGX,KAAK,IAAKxQ,GAAGwQ,KAAK,KAAMoG,EAAK,MAC/EN,EAAOC,EAAMQ,OAClBL,EAAKpV,KAAKgV,GACVQ,EAAMvF,KAAKmF,EAAKM,KAAK,MACjBF,EAAM7G,OAAOgH,wBAA0BrH,IACzC8G,EAAKK,MACLD,EAAMvF,KAAKmF,EAAKM,KAAK,MACrBN,EAAO,CAACJ,GACRQ,EAAQvF,EAAK9M,OAAO,SAAS+L,KAAK,IAAKW,GAAGX,KAAK,IAAKxQ,GAAGwQ,KAAK,KAZ/C,MAYuDmG,EAA0BC,EAAK,MAAMrF,KAAK+E,QC2DzGY,GA9EU,SAAC3G,EAAKtU,EAAMkb,EAAMC,EAAMC,EAASC,EAAUC,EAAQC,EAAYrG,EAAGsG,EAAI5H,EAAQ6H,EAAOC,EAAYC,EAAahI,GAGnI,IAAIiI,EAAQR,EAAQrS,KAAI,SAAA1K,GAAK,MAAO,MAChCwd,EAAWT,EAAQrS,KAAI,SAAA1K,GAAK,MAAO,MACnCyd,EAAQV,EAAQrS,KAAI,SAAA1K,GAAK,MAAO,MAChC0d,EAAQX,EAAQrS,KAAI,SAAA1K,GAAK,OAAO,KAepC,SAAS2d,EAAUtS,GACf,IAAIuS,EAAMb,EAAQzR,QAAQD,EAAEwR,IACxBgB,EAAOJ,EAAMG,GAAKtS,QAAQD,EAAE2R,IAEhC,OADSQ,EAASI,GAAKC,GAjB3Blc,EAAKmH,SAAQ,SAAAuC,GACT,IAAIT,EAAImS,EAAQzR,QAAQD,EAAEwR,IAC1Ba,EAAM9S,KAAOS,EAAEyR,GACfU,EAAS5S,GAAG5D,KAAK0W,EAAM9S,IACvB2S,EAAM3S,GAAG5D,MAAMqE,EAAEyR,IACjBW,EAAM7S,GAAG5D,KAAKqE,EAAE2R,OAgBpB/G,EAAIc,UAAU,QACTpV,KAAKA,GACLqV,QAAQ7M,OAAO,QACf+L,KAAK,QAAS,OACdA,KAAK,KAAK,SAAS7K,GAAK,OAAOwL,EAAExL,EAAEwR,OACnChe,MAAM,QAAQ,SAASwM,GAAK,OACE6R,EADEF,EACSC,EAAO3R,QAAQD,EAAE2R,IAEjB3R,EAAEyR,OAG3C5G,KAAK,QAASW,EAAEiH,aAChB5H,KAAK,KAAK,SAASlW,GAAK,OAAOmd,EAAGC,MAClClH,KAAK,UAAU,SAASlW,GAAK,OAAOuV,EAAS4H,EAAGC,MAEjDnH,EAAIc,UAAU,QACbgH,aACIC,SAAS,KACT9H,KAAK,KAAI,SAAS7K,GACf,IAAI4S,EAAON,EAAUtS,GACrB,OAAO8R,EAAGc,MAEb/H,KAAK,UAAS,SAAS7K,GAChB,IAAI6S,EApCpB,SAAgB7S,GACZ,IAAIuS,EAAMb,EAAQzR,QAAQD,EAAEwR,IACxBgB,EAAOJ,EAAMG,GAAKtS,QAAQD,EAAE2R,IAEhC,OADSO,EAAMK,GAAKC,GAiCGM,CAAO9S,GAClB,OAAOkK,EAAS4H,EAAGe,MAG/BjI,EAAI9L,OAAO,KAAK4M,UAAU,QAC9BpV,KAAKA,GACLqV,QAAQ7M,OAAO,QACf+L,KAAK,KAAK,SACVA,KAAK,cAAc,SACnBA,KAAK,eAAe,GACpBA,KAAK,KAAI,SAAS7K,GAAK,OAAOwL,EAAExL,EAAEwR,IAAShG,EAAEiH,YAAc,KAC3D5H,KAAK,KAAK,SAAS7K,GAAK,OAAO8R,EAAGQ,EAAUtS,OAC5C4L,MAAK,SAAS5L,GAAK,OAAI2R,EAAkB3R,EAAE2R,GAAY,MAAQ3R,EAAEyR,GAAoBzR,EAAEyR,MAC9EsB,KAAKvC,GAASvG,EAAMyH,EAAQ3V,OAAO,EAAE,IAGhD6O,EAAIc,UAAU,QACZgH,aACAC,SAAS,KACT9H,KAAK,eAAemH,GACXnH,KAAK,QAAQ,SACtBA,KAAK,cAAc,UACVA,KAAK,QAAQ,cACbA,KAAK,iBAAiB,cAE/BmI,OAAM,SAASre,EAAE4K,GAAK,OAAQA,EAAE0S,EAAY,QCrBjCgB,OAvDf,SAAoB3c,EAAM4c,EAAUC,EAAUC,GAC5C,IAAIC,EAAM,GACNC,EAAW,GACXC,EAAU,GAEC,KAAXJ,EACH7c,EAAKmH,SAAQ,SAAA+N,IAC6B,IAArC6H,EAAIpT,QAAQ8D,OAAOyH,EAAE0H,MACxBG,EAAI1X,KAAKoI,OAAOyH,EAAE0H,KAClBI,EAAS3X,KAAK,GACd4X,EAAO5X,MAAM6P,EAAE4H,MAEfE,EAASD,EAAIpT,QAAQ8D,OAAOyH,EAAE0H,MAAeI,EAASD,EAAIpT,QAAQ8D,OAAOyH,EAAE0H,MAAe,EAC1FK,EAAOF,EAAIpT,QAAQ8D,OAAOyH,EAAE0H,MAAeK,EAAOF,EAAIpT,QAAQ8D,OAAOyH,EAAE0H,QAAgB1H,EAAE4H,OAI3F9c,EAAKmH,SAAQ,SAAA+N,IACmC,IAA3C6H,EAAIpT,QAAQ,CAACuL,EAAE0H,GAAU1H,EAAE2H,MAC9BE,EAAI1X,KAAK,CAAC6P,EAAE0H,GAAU1H,EAAE2H,KACxBG,EAAS3X,KAAK,GACd4X,EAAO5X,MAAM6P,EAAE4H,MAEfE,EAASD,EAAIpT,QAAQ,CAACuL,EAAE0H,GAAU1H,EAAE2H,MAAeG,EAASD,EAAIpT,QAAQ,CAACuL,EAAE0H,GAAU1H,EAAE2H,MAAe,EACtGI,EAAOF,EAAIpT,QAAQ,CAACuL,EAAE0H,GAAU1H,EAAE2H,MAAeI,EAAOF,EAAIpT,QAAQ,CAACuL,EAAE0H,GAAU1H,EAAE2H,UAKtF,IAAIK,EAAS,GAuBb,OAtBAH,EAAI5V,SAAQ,SAAC9I,EAAE4K,GACdiU,EAAO7X,KAAK,CACXkF,MAAOwS,EAAI9T,GACXkU,MAAOH,EAAS/T,GAChBmU,IAAKH,EAAOhU,GACZoU,KAAMlb,KAAKmb,MAAML,EAAOhU,GAAG+T,EAAS/T,GAAG,KAAK,SAK9CiU,EAAOxW,MAAM,SAASC,EAAGC,GACxB,OAAID,EAAE4D,MAAM9E,OAAS,GAGjBkB,EAAE4D,MAAM,KAAK3D,EAAE2D,MAAM,GAFhB5D,EAAE4D,MAAM,GAAK3D,EAAE2D,MAAM,GAKpB5D,EAAE4D,MAAM,GAAK3D,EAAE2D,MAAM,MAKzB2S,GC9BMK,GAvBW,SAACjJ,EAAKtU,EAAMya,EAAMY,EAAUC,EAAQC,GAa1DD,EAAOnU,SAAQ,SAAC8U,EAAIhT,GAChBqL,EAAI9L,OAAO,QACN+L,KAAK,QAAQ,QACbA,KAAK,OAAO,QACZA,KAAK,eAAe,KACpBA,KAAK,SAASgH,EAAWtS,IACzBsL,KAAK,IAAIkG,EAhBJ,SAASza,EAAKic,GACxB,IAAIuB,EAAQ,GAMZ,OALAxd,EAAKmH,SAAQ,SAAAuC,GACLA,EAAE2R,IAAWY,GACbuB,EAAMnY,KAAKqE,MAGZ8T,EASYC,CAAQzd,EAAKic,SCVzByB,GAVI,SAACpJ,EAAKtU,EAAMya,GAE3BnG,EAAI9L,OAAO,QACN+L,KAAK,QAAQ,QACbA,KAAK,OAAO,QACZA,KAAK,eAAe,KACpBA,KAAK,SAAS,SACdA,KAAK,IAAIkG,EAAKza,KCwIR2d,OAtIf,SAAsBC,EAAW5d,EAAjC,EAA+DuT,EAAYsK,EAAWC,EAAQC,EAAUtK,EAAMuK,GAAa,IAAD,mBAAlF9C,EAAkF,KAA5EC,EAA4E,KAAtEE,EAAsE,KAEzH3H,KAAU,YAAYrR,SACtB9C,QAAQC,IAAIQ,GAEZ,IAAIkJ,EAAe,GAAfA,EAA0B,GAA1BA,EAAsC,GAAtCA,EAAgD,GACnDyK,EAAQF,EAAK,GAAKvK,EAAcA,EAChC0K,EAASH,EAAK,GAAKvK,EAAaA,EAG7ByS,EAAc,IADN3b,EAAKyF,OAGV2V,EAAUtB,GAAkB9Z,EAAKkb,GACjCI,EAASxB,GAAkB9Z,EAAKqb,GAChC0B,EAAMJ,GAAW3c,EAAKkb,EAAK,GAAGC,GAEjCO,EAAa,EACA,OAAbsC,IAAoBtC,EAAa,GAGrC,IAAIxG,EAAIxB,OACHgB,MAAM,CAAC,EAAGf,IACVsK,QAAQ,IACTla,EAAI2P,OACHgB,MAAM,CAACd,EAAQ,IAChB4H,EAAK9H,OACJgB,MAAM,CAACd,EAAQ,IAEpB,GAAgB,aAAZiK,EAAuB,CAC1Bte,QAAQC,IAAI,mBACT,IAAI+b,EAAa7H,OACLe,OAAO,CAAC,EAAE6G,EAAO7V,SACjBkP,aAAajB,UACtB,CACNnU,QAAQC,IAAI,qBACR+b,EAAa7H,KAAmBA,KAAeoK,EAAO,GAAGA,EAAO,KACjErJ,OAAOf,KAAU1T,GAAK,SAAS0J,GAAK,OAAe,EAARA,EAAEyR,OAGjD,IAAI7G,EAAMZ,KAAUqK,GAAUvV,OAAO,OACnC+L,KAAK,QAASZ,EAAQzK,EAAcA,GACpCqL,KAAK,SAAUX,EAAS1K,EAAaA,GACrCqL,KAAK,KAAK,WACV/L,OAAO,KACP+L,KAAK,YAAY,aAAerL,EAAc,IAAMA,EAAa,KAIjEgM,EAAET,OAAOzU,EAAK+I,KAAI,SAASW,GAAK,OAAOA,EAAEwR,OACzC,IAAIgD,EAAOxK,KAAO,CAAC,EAAEA,KAAO1T,GAAK,SAAS0J,GAAK,OAAQA,EAAEyR,MAAYzH,KAAa1T,GAAK,SAAS0J,GAAK,OAAQA,EAAEyR,QAC/GpX,EAAE0Q,OAAO,CAACyJ,EAAMxK,KAAO1T,GAAM,SAAS0J,GAAK,OAAQA,EAAEyR,QAClD5b,QAAQC,IAAIuE,GAEf,IAAI0X,EAAQ/H,KAAO,CAAC,EAAEA,KAAOqJ,GAAI,SAASrT,GAAK,OAAQA,EAAC,OAAcgK,KAAa1T,GAAK,SAAS0J,GAAK,OAAQA,EAAC,SAC/G8R,EAAG/G,OAAO,CAACgH,EAAO/H,KAAOqJ,GAAK,SAASrT,GAAK,OAAQA,EAAC,SAGhD,IAAI+Q,EAAO/G,OACNwB,GAAE,SAASxL,GAAG,OAAOwL,EAAExL,EAAEwR,IAAShG,EAAEiH,YAAY,KAChDpY,GAAE,SAAS2F,GAAG,OAAO3F,EAAE2F,EAAEyR,OAIpB,oBAAZyC,GACH3C,GAAiB3G,EAAKtU,EAAMkb,EAAMC,EAAMC,EAASC,EAAUC,EAAQC,EAAYrG,EAAGsG,EAAI5H,EAAQ6H,EAAMC,EAAYC,EAAahI,GAE9G,qBAAZiK,GACHL,GAAkBjJ,EAAKtU,EAAMya,EAAMY,EAAUC,EAAQC,GAEtC,cAAZqC,GACHF,GAAWpJ,EAAKtU,EAAMya,GAIP,oBAAZmD,IACHtJ,EAAI9L,OAAO,KAAK4M,UAAU,QACxBpV,KAAKA,GACLqV,QAAQ7M,OAAO,QACf+L,KAAK,KAAK,SACVA,KAAK,cAAc,SACnBA,KAAK,eAAe,GACpBA,KAAK,KAAI,SAAS7K,GAAK,OAAOwL,EAAExL,EAAEwR,IAAShG,EAAEiH,YAAc,KAC3D5H,KAAK,KAAK,SAAS7K,GAAK,OAAO3F,EAAE2F,EAAEyR,IAASjG,EAAEiH,YAAY,KAC1D7G,MAAK,SAAS5L,GAAK,OAAOA,EAAEyR,MAI9B7G,EAAIc,UAAU,QACZgH,aACAC,SAAS,KACT9H,KAAK,eAAe,GACpBA,KAAK,cAAc,UACnBrX,MAAM,UAAUwe,GAChBnH,KAAK,KAAK,SAAS7K,GAAK,OAAO3F,EAAE2F,EAAEyR,IAAS,MAC5CuB,OAAM,SAASre,EAAE4K,GAAK,OAAQA,EAAE0S,EAAY,QAI7CrH,EAAI9L,OAAO,KACV+L,KAAK,YAAa,eAAiBX,EAAS,KAC5C6I,KAAK/I,KAAcwB,IAGtBZ,EAAI9L,OAAO,QACT+L,KAAK,KAAK,cACVA,KAAK,YAAY,aAAeZ,EAAM,EAAK,KAAOC,EAAO1K,EAAa,IAAM,KAC5EhM,MAAM,cAAc,UACpBoY,KAAK/B,EAAW,IAGlBe,EAAI9L,OAAO,QACT+L,KAAK,KAAM,cACXA,KAAK,YAAY,eACjBA,KAAK,IAAI,EAAErL,EAAc,GACzBqL,KAAK,IAAI,EAAGX,EAAO,GACnBW,KAAK,KAAM,OACXrX,MAAM,cAAc,UACpBoY,KAAK/B,EAAW,IAGhBe,EAAI9L,OAAO,KACX+L,KAAK,QAAQ,UACXkI,KAAK/I,KAAY3P,IAGf,IAAIoa,EAAY,GAIhB,OAHA7C,EAAOnU,SAAQ,SAAC8U,EAAIhT,GAChBkV,EAAU9Y,KAAK,CAAC4W,EAAIV,EAAWtS,QAE5BkV,G,UC9GAC,GAzBY,SAAC7U,GAE3B,IAAMC,EAAqB3M,aAAY,SAACC,GAAD,OAAgBA,EAAMuhB,eAE7D,OACC,yBAAQjhB,GAAG,qBAAqB2B,SAAUwK,EAAOA,OAAjD,UACC,wBAAgBrK,MAAO,EAAvB,8BAAY,KAGZ,wBAAiBA,MAAO,KAAxB,qCAAY,MAKXsK,EAAOT,KAAI,SAACW,EAAET,GACb,OACC,wBAAqB/J,MAAO+J,EAA5B,SACES,EAAEzE,WADS,IAAIgE,UCqcRqV,GAlcG,WAEd,IAAMlH,EAAqBva,aAAY,SAACC,GAAD,OAAgBA,EAAM6L,gBACvD4V,EAAuB1hB,aAAY,SAACC,GAAD,OAAgBA,EAAMiW,cACzDyL,EAAsB3hB,aAAY,SAACC,GAAD,OAAgBA,EAAMuhB,eAE9D,EAA8Bzf,mBAAe,IAAIwF,MAAjD,mBAAOqa,EAAP,KAAgBC,EAAhB,KACA,EAAkC9f,mBAAe,IAAIwF,MAArD,mBAAOua,EAAP,KAAkBC,EAAlB,KACA,EAA4BhgB,mBAAiB,IAA7C,mBAAOoa,EAAP,KAAe6F,EAAf,KACA,EAAgCjgB,mBAAiB,IAAjD,mBAAOkgB,EAAP,KAAiBC,EAAjB,KACA,EAAmCngB,mBAAiB,IAApD,mBAAOkY,EAAP,KAAkBkI,EAAlB,KACA,EAA+CpgB,mBAAiB,IAAhE,mBAAOqgB,EAAP,KAAwBC,EAAxB,KACA,EAAkCtgB,mBAAiB,KAAnD,mBAAOiY,EAAP,KACA,GADA,KACgCjY,mBAAS,IAAIwF,OAA7C,mBAAO+a,EAAP,KACA,GADA,KACoCvgB,mBAAS,KAA7C,mBAAOwgB,EAAP,KAAmBC,EAAnB,KACA,EAAkCzgB,mBAAyB,MAA3D,mBAAO0gB,EAAP,KAAkBC,EAAlB,KACA,EAA4B3gB,mBAAS,CAAC6Z,WAAW,GACbC,UAAU,MAAOC,cAAc,GAC/BX,WAAW,GAAIwH,WAAW,GAC1BC,WAAW,GAAInG,aAAa,GAC5BV,OAAO,OAAQ8G,cAAc,KAJjE,mBAAOhJ,EAAP,KAAeiJ,EAAf,KAMA,EAAwC/gB,mBAAS,CAACghB,YAAY,KAAMC,kBAAkB,eAAtF,oBAAOC,GAAP,MAAqBC,GAArB,MACA,GAA4DnhB,mBAAS,YAArE,qBAAOohB,GAAP,MAA+BC,GAA/B,MACA,GAA4BrhB,mBAAc,CAAC,EAAG,UAAW,EAAG,UAAW,EAAG,KAA1E,qBAAOkf,GAAP,MAAeoC,GAAf,MACA,GAA+BthB,mBAAiB,GAAhD,qBAAOuhB,GAAP,MAAgBC,GAAhB,MACA,GAAkCxhB,mBAAiB,IAAnD,qBAAOuJ,GAAP,MAAkBkD,GAAlB,MAEA,GAAyCzM,mBAAS,CAAC,GAAG,EAAO,GAAG,EAAO,GAAG,EAAO,GAAG,EAC5D,GAAG,EAAO,GAAG,EAAO,GAAG,EAAO,GAAG,EAAO,GAAE,EAAQ,GAAE,EAAO,IAAG,EAAO,IAAG,IADhG,qBAAKgK,GAAL,MAAoBC,GAApB,MAEMwX,GAAc,SAAC9Z,GAAiBsC,GAAkB,2BAAKD,IAAN,kBAAuBrC,GAAK,MAC7E+Z,GAAe,SAAC/Z,GAAiBsC,GAAkB,2BAAKD,IAAN,kBAAuBrC,GAAK,MAE9E7H,GAAaC,cACbmJ,GAASuB,KAETkX,GAAkB,SAACC,EAAYC,GACjCd,EAAU,2BAAKjJ,GAAN,kBAAe8J,EAAKC,KAC7B,IAAIC,EAA2B7e,SAASC,eAAe0e,GAMvD,GALS,KAANC,EACKC,IAAMA,EAAKxjB,MAAMmS,gBAAkB,WAEnCqR,IAAMA,EAAKxjB,MAAMmS,gBAAkB,WAEhC,eAANmR,GAA4C,SAApB9J,EAAO8I,WAAqB,CACrD,IAAImB,EAAiC9e,SAASC,eAAe,cACzD6e,IAAYA,EAAWzjB,MAAMmS,gBAAkB,aAGrDuR,GAAwB,SAACJ,EAAYC,GACvCV,GAAgB,2BAAKD,IAAN,kBAAqBU,EAAKC,MAGvCpH,GAAU,SAACwH,EAAmBC,GAChC,IAAI/J,EAAU,IAAI3S,KAAKqJ,OAAOqT,IACd,eAAZD,EAA0BnC,EAAW3H,GAAW6H,EAAa7H,GACjE,IAAIgK,EAAgBhK,EAAGmB,UAAnB6I,EAAuChK,EAAGoB,WAAW,EAArD4I,EAA+DhK,EAAGqB,cACtEmI,GAAgBM,EAAUE,EAAiB,IAAMA,EAAe,IAAMA,IAG1Enf,qBAAU,WACNyX,GAAQ,aAAc8F,KACxB,CAACA,IAEH,IAUM6B,GAAgB,SAACC,GAEnB,IAAIC,EAAiCrf,SAASsf,uBAAuB,cACrEC,MAAMC,KAAKH,GAAM/Z,SAAQ,SAACnI,EAAUiK,GAChC,IAAIqY,EAA8Bzf,SAASC,eAAe9C,EAAE5B,IACxDmkB,EAA6B1f,SAASC,eAAe,YAAcmH,EAAE,IACtEqY,GAAWC,IACNviB,EAAE5B,KAAK,cAAc6jB,GACrBM,EAAMrkB,MAAMskB,QAAQ,QACpBF,EAAQpkB,MAAMmS,gBAAgB,YAE9BkS,EAAMrkB,MAAMskB,QAAQ,OACpBF,EAAQpkB,MAAMmS,gBAAgB,gBAOxCoS,GAAc,WAEhB,GADApC,EAAc,yBAAqCP,EAAW,YAAcpI,EAAO+I,YAC/EjB,EAAM/Y,OAAO,EAAE,CACf,IAAIic,EAAaha,EAAS8W,EAAM,GAAG1I,WAAW,WAC1C6L,EAAahI,GAAavC,EAAQoH,EAAM,GAAG5I,YAE/C,GAAuB,WAAnBc,EAAOgC,UACPtF,GAAYsO,EAAW,WAAW,QAAQ,CAACC,EAAW,SAAS,QAAQ,CAAC,IAAI,UACzE,CACH,IAGIC,EAHAhE,EAAmB,GACA,QAAnBlH,EAAOgC,YAAmBkF,EAAY,mBACnB,SAAnBlH,EAAOgC,YAAoBkF,EAAY,oBAEnBgE,EAAX,WAAb9K,EAAoC,CAAC,UAAU,QAAQ,YAA0B,CAAC,WAAW,QAAQ,IAGrGvX,QAAQC,IAAIoiB,GACZ,IAAIC,EAAYlE,GAAaC,EAAU8D,EAAWE,EACd,CAACD,EAAW,SACZ7B,GAAaD,kBAAmB/B,GAAO,QAAQ,CAAC,IAAI,KAAKgC,GAAaF,aACzF,WAAb9I,GAA6C,SAApBJ,EAAO+B,YAAqBgB,GAAYoI,EAAU,WAAW,CAAC,IAAI,SAMrGC,GAAa,SAAC9iB,EAA6B+iB,GAC7C,IAAIC,EAAehjB,EAAE4O,cAAc0B,WAAW,GAAGpQ,MACxC,MAAL6iB,IACAxB,GAAgB,aAAayB,GAC7BjD,EAAYpF,GAAavC,EAAO4K,EAAM,SAE1ChjB,EAAE4O,cAAc1Q,MAAMkS,WAAa,sBAyGvC,OACI,sBAAKhS,GAAG,kBAAR,UACI,sBAAKA,GAAG,eAAeH,UAAU,UAAjC,UACI,qBAAKG,GAAG,qBAAR,oCACA,qBAAKA,GAAG,eAAeH,UAAU,aAAa2D,QAAS,SAAAvC,GAAC,OAAE2iB,GAAc,IAAxE,2BACA,qBAAK5jB,GAAG,eAAeH,UAAU,aAAa2D,QAAS,SAAAvC,GAAC,OAAE2iB,GAAc,IAAxE,6BACA,qBAAK5jB,GAAG,eAAeH,UAAU,aAAa2D,QAAS,SAAAvC,GAAC,OAAE2iB,GAAc,IAAxE,2BACA,qBAAK5jB,GAAG,YAAYF,MAAO,CAACskB,QAAQ,QAApC,SACI,qBAAIvkB,UAAU,gBAAd,UACI,qBAAIA,UAAU,qBAAqBG,GAAG,YAAYwD,QAAS,SAAAvC,GAAC,OAAEgiB,GAAY,IAA1E,yBAA2F3J,EAAOgC,aAClG,qBAAIzb,UAAU,qBAAqBG,GAAG,aAAawD,QAAS,SAAAvC,GAAC,OAAEgiB,GAAY,IAA3E,8BAAiG3J,EAAOsB,cACxG,qBAAI/a,UAAU,qBAAqBG,GAAG,aAAawD,QAAS,SAAAvC,GAAC,OAAEgiB,GAAY,IAA3E,gCAAmG3J,EAAO+I,cAC1G,qBAAIxiB,UAAU,qBAAqBG,GAAG,SAASwD,QAAS,SAAAvC,GAAC,OAAEgiB,GAAY,IAAvE,4BAA2FpB,KAC3F,qBAAIhiB,UAAU,qBAAqBG,GAAG,aAAawD,QAAS,SAAAvC,GAAC,OAAEgiB,GAAY,IAA3E,mCAAsGvB,KACtG,qBAAI7hB,UAAU,qBAAqBG,GAAG,gBAAgBwD,QAAS,SAAAvC,GAAC,OAAEgiB,GAAY,IAA9E,6BAAmGxJ,KACnG,qBAAI5Z,UAAU,qBAAqBG,GAAG,gBAAgBwD,QAAS,SAAAvC,GAAC,OAAEgiB,GAAY,IAA9E,+BAAqG3J,EAAOiC,iBAC5G,oBAAI1b,UAAU,qBAAqBG,GAAG,aAAawD,QAtGpD,WACf6V,GAAmBC,EAAQ,aAAcsC,EAAQsG,EAAWzI,EAAWC,EAAY2H,EAASE,EAAW7W,GAAQpJ,IAC/G6hB,GAAgB,aAAa,SAoGb,kCACA,oBAAItjB,UAAU,qBAAqBG,GAAG,gBAAgBwD,QAAS6gB,GAA/D,+BAGR,qBAAKrkB,GAAG,YAAYF,MAAO,CAACskB,QAAQ,QAApC,SACI,qBAAIvkB,UAAU,gBAAd,UACI,oBAAIA,UAAU,qBAAqB2D,QAAS,SAAAvC,GAAC,OAAEgiB,GAAY,KAA3D,iCACA,oBAAIpjB,UAAU,qBAAqB2D,QAAS,SAAAvC,GAAC,OAAEgiB,GAAY,IAA3D,yBACA,oBAAIpjB,UAAU,qBAAqB2D,QAAS,SAAAvC,GAAC,OAAEgiB,GAAY,IAA3D,2BACA,oBAAIpjB,UAAU,qBAAqBG,GAAG,gBAAgBwD,QAAS6gB,GAA/D,+BAGR,qBAAKrkB,GAAG,YAAYF,MAAO,CAACskB,QAAQ,QAApC,SACI,qBAAIvkB,UAAU,gBAAd,UACI,oBAAIA,UAAU,qBAAqBG,GAAG,YAAYwD,QAAS,SAAAvC,GAAC,OAAEgiB,GAAY,KAA1E,iCACA,oBAAIpjB,UAAU,qBAAqBG,GAAG,YAAYwD,QAAS,SAAAvC,GAAC,OAAEgiB,GAAY,IAA1E,gCAKZ,sBAAKjjB,GAAG,SAAR,UACI,sBAAKA,GAAG,aAAR,cAAuBgiB,EAAvB,OACA,qBAAKhiB,GAAG,OAAOF,MAAO,CAACgM,OAAO,OAAQ+Y,SAAU,aAEpD,qBAAK7kB,GAAK,YAGV,eAAC+L,EAAA,EAAD,CAAOC,KAAMR,GAAe,GAA5B,UACI,qBAAK3L,UAAU,aAAa2D,QAAS,SAAAvC,GAAC,OAAEkiB,GAAgB,YAAY,QAApE,yBACA,qBAAKtjB,UAAU,aAAa2D,QAAS,SAAAvC,GAAC,OAAEkiB,GAAgB,YAAY,SAApE,0BACA,qBAAKtjB,UAAU,aAAa2D,QAAS,SAAAvC,GAAC,OAAEkiB,GAAgB,YAAY,WAApE,4BACA,wBAAQtjB,UAAU,gBAAgB2D,QAAS,SAAAvC,GAAC,OAAEiiB,GAAa,IAA3D,sBAIJ,eAACnX,EAAA,EAAD,CAAOC,KAAMR,GAAe,GAA5B,UACI,sBAAKxL,GAAG,aAAR,UACG,qBAAKH,UAAU,kBAAf,2BACC,yBAAQA,UAAU,iBAAiB8B,SAAU,SAACC,GAAD,OA5JnC,SAACA,GACF,yBAAjBA,EAAEC,OAAOC,MACTqhB,GAAgB,aAAa,KAE7BA,GAAgB,aAAavhB,EAAEC,OAAOC,OAChB,gBAAjBF,EAAEC,OAAOC,OAAwC,UAAb4X,GACrCkI,EAAc,SAEG,gBAAjBhgB,EAAEC,OAAOC,OAAwC,UAAb4X,GACpCkI,EAAc,UAGtB,IAAIkD,EAAkCrgB,SAASC,eAAe,kBAC1DogB,IAAcA,EAAala,UAAY,IA+IoDma,CAAkBnjB,IAArG,UACI,wBAAQ5B,GAAG,QAAX,oCACA,wBAAQA,GAAG,QAAX,yBACA,wBAAQA,GAAG,OAAX,mBACA,wBAAQA,GAAG,OAAX,0BACA,wBAAQA,GAAG,WAAX,uBACA,wBAAQA,GAAG,QAAX,2BAEJ,+CACA,qBAAKA,GAAG,uBAGZ,wBAAQH,UAAU,gBAAgB2D,QAAS,SAAAvC,GAAC,OAAEiiB,GAAa,IAA3D,sBAIJ,eAACnX,EAAA,EAAD,CAAOC,KAAMR,GAAe,GAA5B,UACI,sBAAK1L,MAAO,CAAC0W,OAAQ,SAArB,UACI,yDACA,sBAAK1W,MAAO,CAACqc,UAAW,OAAQC,aAAc,QAA9C,wBAAmE9C,EAAO+I,cAC1E,cAAC,KAAD,CAAY1gB,SAAU,SAACC,GAAD,OAAWqa,GAAQ,aAAara,SAE1D,wBAAQ/B,UAAU,gBAAgB2D,QAAS,SAAAvC,GAAC,OAAEiiB,GAAa,IAA3D,sBAIJ,eAACnX,EAAA,EAAD,CAAOC,KAAMR,GAAe,GAA5B,UACI,sBAAKxL,GAAG,iBAAR,UACI,qBAAKH,UAAU,kBAAf,+BACA,yBAAQ8B,SAAU,SAACC,GAAD,OApKf,SAACA,GACK,oBAAjBA,EAAEC,OAAOC,QACT8f,EAAc,UACdE,EAAoB,KAEH,kBAAjBlgB,EAAEC,OAAOC,QACT2f,EAAU,GACc,gBAApBnI,EAAOsB,YACPgH,EAAc,SACdE,EAAoB,QAEpBF,EAAc,SACdE,EAAoBxI,EAAO4C,gBAwJ+B8I,CAAWpjB,IAAjE,UACI,6DACA,qDACA,sDAEF,WACE,OAAQ8X,GACR,IAAK,SAAW,OAAO,cAAC,GAAD,CAAwBgC,aAAc,SAAC9Z,GAAD,OA3J5D,SAACA,GACG,kBAAjBA,EAAEC,OAAOC,MACTqhB,GAAgB,SAAS,SAEzBA,GAAgB,SAASvhB,EAAEC,OAAOC,OAClCggB,EAAoBlgB,EAAEC,OAAOC,QAEjC,IAAI6I,EAAOlG,SAASC,eAAe,YAC/BiG,IAAMA,EAAKsa,UAAY,QAmJwFvJ,CAAa9Z,IAChF+Z,aAAc,SAAC/Z,GAAqC6f,GAAW7f,EAAEC,OAAOC,QACxE8Z,OAAQA,EACRC,QAAS,aACzC,IAAK,QAAS,OAAO,cAAC,GAAD,CAAuBI,QAAS,SAACra,GAAD,OAAWqa,GAAQ,eAAera,IACvDsa,aAAc5C,EAAO4C,aACrBL,QAAS,YACzC,IAAK,QAAU,OAAO,wCACtB,QAAc,OAAO,yBAVvB,MAcN,wBAAQhc,UAAU,gBAAgB2D,QAAS,SAAAvC,GAAC,OAAEiiB,GAAa,IAA3D,sBAIJ,eAACnX,EAAA,EAAD,CAAOC,KAAMR,GAAe,GAA5B,UACI,sBAAKxL,GAAG,WAAR,UACI,8DACI,cAAC,GAAD,CAAmBmM,OAAQ,SAACvK,GAAD,OAnRvB,SAACA,GACrB,IAAIuH,GAAcvH,EAAEC,OAAOyM,gBAAgB,GAAGxM,MAC1CqH,GAAK,GACLgZ,EAAahB,EAAQhY,IACrBga,GAAgB,gBAAgBhC,EAAQhY,GAAKtB,YAE7Csb,GAAgB,gBAAgB,QA6Q6C+B,CAAgBtjB,SAEzF,cAAC,GAAD,CAAkBiU,SAAUqM,IAC5B,wBAAQriB,UAAU,gBAAgB2D,QAAS,SAAAvC,GAAC,OAAEiiB,GAAa,IAA3D,sBAKJ,cAACnX,EAAA,EAAD,CAAOC,KAAMR,GAAe,GAA5B,SACI,sBAAK1L,MAAO,CAACmS,gBAAiB,QAASsE,MAAO,QAASzK,OAAQ,QAA/D,UACI,sBAAKhM,MAAO,CAACskB,QAAS,QAAtB,UACI,qBAAKvkB,UAAU,YAAf,0BACA,qBAAKA,UAAU,YAAf,sBACA,qBAAKA,UAAU,YAAf,gCAEJ,sBAAcA,UAAU,YAAxB,UACI,qBAAKA,UAAU,aAAf,oBACA,qBAAKA,UAAU,aAAf,eACA,qBAAkBG,GAAI,YAAyB,YAAW,OAAQH,UAAU,gBAAgB2D,QAAS,SAAA5B,GAAC,OAAG8iB,GAAW9iB,EAAE,MAAtH,kCAAU,UAHH,GAQPoY,EAAOrO,KAAI,SAACC,EAAaC,GACrB,OACI,sBAAahM,UAAU,YAAvB,UACI,sBAAKA,UAAU,aAAf,cAA8B+L,EAAG,aACjC,sBAAK/L,UAAU,aAAf,cAA8B+L,EAAG,UAAjC,OACA,qBAAiB5L,GAAI,KAAM6L,EAAI,IAAMD,EAAG,UAAe,YAAWA,EAAG,IAAS/L,UAAU,gBAAgB2D,QAAS,SAAA5B,GAAC,OAAG8iB,GAAW9iB,EAAE,MAAlI,kCAAUiK,EAAE,OAHNA,MAUtB,wBAAQhM,UAAU,gBAAgB2D,QAAS,SAAAvC,GAAC,OAAEiiB,GAAa,IAA3D,wBAKR,cAACnX,EAAA,EAAD,CAAOC,KAAMR,GAAe,GAA5B,SACI,gCACI,qBAAK3L,UAAU,kBAAf,4CACA,4EACA,qDACA,yBAAQ8B,SAAU,SAACC,GAAD,OA/LZ,SAACA,GACqB,YAApCA,EAAEC,OAAOyM,gBAAgB,GAAGxM,QAC5BqhB,GAAgB,gBAAgBvhB,EAAEC,OAAOyM,gBAAgB,GAAGxM,OACpB,OAApCF,EAAEC,OAAOyM,gBAAgB,GAAGxM,OAC5BqhB,GAAgB,YAAY,MA2L8BgC,CAAcvjB,IAApE,UACI,6CACA,wCACA,4CAEoB,QAAvB0X,EAAOgJ,eACJ,uBAAOviB,KAAK,SAASC,GAAG,mBAAmBkD,YAAa,IAAKvB,SAAU,SAAAC,GAAC,OAAEuhB,GAAgB,YAAY9S,OAAOzO,EAAEC,OAAOC,WAE1H,wBAAQjC,UAAU,gBAAgB2D,QAAS,SAAAvC,GAAC,OAAEiiB,GAAa,IAA3D,wBAMR,eAACnX,EAAA,EAAD,CAAOC,KAAMR,GAAe,GAA5B,0BAEI,sBAAKxL,GAAG,cAAR,UACI,8BAEI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG2L,KAAI,SAACW,GACf,OACA,sBAAaxM,MAAO,CAACskB,QAAQ,QAA7B,UACI,qBAAKvkB,UAAU,WAAWG,GAAI,WAAWsM,EAAzC,SAA6C,OAC7C,sBAAKzM,UAAU,cAAcG,GAAI,cAAcsM,EAAGxM,MAAO,CAACmS,gBAAgByO,GAAOpU,IAAK9I,QAAS,SAAAvC,GAAC,OAxMnG,SAACqL,GACtB0W,GAAY1W,GACZ,IAAI8Y,EAAY3gB,SAASC,eAAe,WAAW4H,GAC/C8Y,IAAWA,EAAUtlB,MAAM2G,MAAM,OACrC,IAAI4e,EAAoC5gB,SAASsf,uBAAuB,YACxEC,MAAMC,KAAKoB,GAAStb,SAAQ,SAACnI,GACzB,IAAI0hB,EAA2B7e,SAASC,eAAe9C,EAAE5B,IACtDsjB,GAAU1hB,EAAE5B,KAAK,WAAWsM,IAAGgX,EAAKxjB,MAAM2G,MAAQ,YAiMiE6e,CAAiBhZ,IAAnH,mBACWA,OAHLA,QAUlB,cAAC,KAAD,CAAgBiZ,iBAAkB,SAAC3jB,GAAD,OArN9B,SAACA,GACjBkhB,GAAU,2BAAIpC,IAAL,kBAAcqC,GAAUnhB,EAAE4jB,OACnC,IAAIJ,EAAY3gB,SAASC,eAAe,cAAcqe,IAClDqC,IAAWA,EAAUtlB,MAAMmS,gBAAgBrQ,EAAE4jB,KAkNOC,CAAY7jB,SAE5D,wBAAQ/B,UAAU,gBAAgB2D,QAAS,SAAAvC,GAAC,OAAEiiB,GAAa,IAA3D,sBAGJ,eAACnX,EAAA,EAAD,CAAOC,KAAMR,GAAe,IAA5B,UACI,sBAAKhI,QA9OW,WACI,aAAzBof,IACCY,GAAsB,oBAAoB,YAC1CX,GAA0B,gBAE1BW,GAAsB,oBAAoB,cAC1CX,GAA0B,cAwOtB,0BAAiDD,MACjD,wBAAQ/iB,UAAU,gBAAgB2D,QAAS,SAAAvC,GAAC,OAAEiiB,GAAa,KAA3D,sBAIJ,eAACnX,EAAA,EAAD,CAAOC,KAAMR,GAAe,GAA5B,UACI,sBAAKhI,QA3PS,WACQ,OAA3Bkf,GAAaF,YACZgB,GAAsB,cAAc,OAEpCA,GAAsB,cAAc,OAuPhC,yBAA8Cd,GAAaF,eAC3D,wBAAQ3iB,UAAU,gBAAgB2D,QAAS,SAAAvC,GAAC,OAAEiiB,GAAa,IAA3D,sBAIJ,eAACnX,EAAA,EAAD,CAAOC,KAAMR,GAAe,GAA5B,UACI,uBAAMxI,SAAU,SAACpB,GAAD,OAvNV,SAACA,GACfA,EAAEqB,iBACFoW,GAAmBC,EAAQvO,GAAW6Q,EAAQsG,EAAWzI,EAAWC,EAAY2H,EAASE,EAAW7W,GAAQpJ,IAqNnDokB,CAAU9jB,IAA3D,UACI,qDACA,uBAAO7B,KAAK,OAAOS,KAAK,YAAYmB,SAAU,SAAAC,GAAC,OAAIqM,GAAarM,EAAEC,OAAOC,UACzE,wBAAQ/B,KAAK,SAAb,uBAEJ,wBAAQF,UAAU,gBAAgB2D,QAAS,SAAAvC,GAAC,OAAEiiB,GAAa,IAA3D,sBAIJ,eAACnX,EAAA,EAAD,CAAOC,KAAMR,GAAe,IAA5B,UACI,cAAC,GAAD,CAAoBW,OAAQ,SAACvK,GAAD,OA5NV,SAACA,GACPA,EAAEC,OAAOyM,gBAAgB,GAAGxM,MA2N2B6jB,CAAsB/jB,MACzF,wBAAQ/B,UAAU,gBAAgB2D,QAAS,SAAAvC,GAAC,OAAEiiB,GAAa,KAA3D,0BCpbD0C,GA1BQ,SAAC9a,EAAkC+a,EAClC9a,EAAkB+a,EAAkBC,EACpCC,EAAcC,EAAiBvb,EAAYQ,GAC/DJ,EAAM7H,iBACN,IAAIuH,EAAY,IAAIW,SAEhB0O,EAAcgM,EAAcla,KAAI,SAAC8O,GAAmB,MAAO,CACvCpK,OAAOoK,EAAM,IAAIC,QAAQ,IAAzB,UAAgCnY,QAChC8N,OAAOoK,EAAM,IAAIC,QAAQ,IAAzB,UAAgCnY,YAGxDiI,EAAUY,OAAO,WAAW6a,GAC5Bzb,EAAUY,OAAO,iBAAiByO,GAClCrP,EAAUY,OAAO,YAAYL,GAC7BP,EAAUY,OAAO,QAAQ4a,GACzBxb,EAAUY,OAAO,YAAY0a,GAC7Btb,EAAUY,OAAO,YAAY2a,GAE7B,IAAIpb,EAA0BlG,SAASC,eAAewG,GAClDP,IAAMA,EAAKC,UAAY,gBAG3BL,EAAYC,EAAU,wBAAwBE,EAAOC,IChBnDub,GAAoB,CAAC,CAC1BC,MAAO,GACPpQ,QAAS,GACTwE,UAAU,GACVN,OAAQ,GACRC,OAAQ,GACRC,WAZkC,CAAC,CACnCiM,KAAM,GACN9L,aAAc,GACdD,QAAS,MAYJgM,GAA0B,CAAC,CAChCxe,UAAW,GACXH,WAAY,GACZoO,QAASoQ,KAIGI,GAAqB/lB,YAAY,CAC7CC,KAAM,mBACNC,aAAc4lB,GACdxlB,SAAU,CACT0lB,WAAY,CACXve,QAAS,SAACtI,EAAD,GAAiD,IAAxCqB,EAAuC,EAAvCA,QACjBrB,EAAMuI,KAAKlH,IAEZmH,QAAS,kBAAoD,CAC5DnH,QAAS,CACR8G,UAFO,EAAGA,UAGVH,WAHO,EAAcA,WAIrBoO,QAJO,EAA0BA,YAQpC0Q,kBAAmB,SAAC9mB,EAAOuB,GAC1BvB,EAAM0I,OAAO,EAAE1I,EAAM2I,YAQXoe,GAAmBlmB,YAAY,CAC3CC,KAAM,iBACNC,aAAcylB,GACdrlB,SAAU,CACT6lB,SAAU,CACT1e,QAAS,SAACtI,EAAD,GAA4C,IAAnCqB,EAAkC,EAAlCA,QACjBrB,EAAMuI,KAAKlH,GACXoB,QAAQC,IAAIrB,EAAQwZ,YAErBrS,QAAS,kBAAsE,CAE9EnH,QAAS,CACRolB,MAHO,EAAGA,MAIVpQ,QAJO,EAAUA,QAKjBwE,UALO,EAAmBA,UAM1BN,OANO,EAA8BA,OAOrCC,OAPO,EAAsCA,OAQ7CC,WARO,EAA8CA,eAYxDwM,gBAAiB,SAACjnB,EAAOuB,GACxBvB,EAAM0I,OAAO,EAAE1I,EAAM2I,YAMXue,GAAyBrmB,YAAY,CACjDC,KAAM,sBACNC,aAAc4lB,GAAY,GAC1BxlB,SAAU,CACTgmB,YAAY,SAACnnB,EAAD,GAAiD,IAAxCqB,EAAuC,EAAvCA,QACnB,MAAO,CACN8G,UAAW9G,EAAQ8G,UACnBH,WAAY3G,EAAQ2G,WACpBoO,QAAS/U,EAAQ+U,UAGpBgR,mBAAoB,SAACpnB,EAAOuB,GACnBolB,GAAY,OAMhB,GAGHI,GAAiBvlB,QAId,IAPA,GACNwlB,SADM,GAENC,gBAQGC,GAAuB1lB,SAGpB,IANA,GACN2lB,YADM,GAENC,mBAOGR,GAAmBplB,SAFV6lB,GADN,GACNR,WACmBS,GAFb,GAENR,kBCpFcS,GArBQ,SAAC9c,GAEpB,IAAKP,EAA6BO,EAA7BP,cAAetI,EAAc6I,EAAd7I,WAGpBe,IAAMwH,IAAN,UAAoBtH,wBAApB,0BAA2EqH,GACtEnH,MAAK,SAAAyC,GACF/C,QAAQC,IAAI8C,EAAItC,MAChB,IAAIskB,EAA6BhiB,EAAItC,KACrCtB,EAAW0lB,GAA6B,KAExCE,EAAcnd,SAAQ,SAAAod,GAClB7lB,EAAWylB,GAAuBI,UAGzCld,OAAM,SAAAhJ,GACHkB,QAAQC,IAAI,kBCATglB,GArBU,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,OAAQlB,EAAW,EAAXA,MAIlC,OADAhkB,QAAQC,IAAI+jB,GAEX,yBAAQnmB,GAAG,iBAAiB2B,SAAU,SAACC,GAAD,OAAOylB,EAAOzlB,IAApD,UACC,wBAAiBE,MAAO,KAAxB,8BAAY,KAIXqkB,EAAMrQ,QAAQnK,KAAI,SAACW,EAAET,GACpB,OACC,wBAAqB/J,MAAO+J,EAA5B,SACES,EAAEyJ,SADS,IAAIlK,UCIRyb,GAdS,SAACxc,EAAkCC,EAAkBL,EAAYQ,GACrFJ,EAAM7H,iBACN,IAAIuH,EAAY,IAAIW,SACpBX,EAAUY,OAAO,YAAYL,GAG7B,IAAIJ,EAAOlG,SAASC,eAAewG,GAC/BP,IAAMA,EAAKC,UAAY,gBAG3BL,EAAYC,EAAU,yBAAyBE,EAAOC,ICM3C4c,I,OAfe,SAACC,EAAmBC,EAAe/c,EAAYpJ,GACzE,IAAIuM,EAAgB,GAYpB,OAVAxL,IAAMC,KAAN,UAAqBC,wBAArB,2BAA4E,CAACilB,aAAY9c,GACpFjI,MAAK,SAAAyC,GACF2I,EAAU3I,EAAItC,KACdtB,EAAWoM,GAA4B,KACvCG,EAAQ9D,SAAQ,SAAAuC,GACZ,IAAIob,EAAmB,CAACxa,UAAUsa,EAAWra,MAAMkD,OAAO/D,GAAGc,SAAUqa,GACvEnmB,EAAWmM,GAAsBia,UAItC7Z,IC4II8Z,GArJa,SAACxd,GAEzB,IAAI2P,EAAY3P,EAAM2P,KAClBpP,EAAaP,EAAMO,OACnBpJ,EAAiB6I,EAAM7I,WAG3B,EAAkCE,mBAAS,CAAC,EAAE,GAAG,EAAE,KAAnD,mBAAKomB,EAAL,KAAiBC,EAAjB,KACA,EAAgCrmB,mBAAS,CAAC,EAAE,GAAG,EAAE,KAAjD,mBAAKsmB,EAAL,KAAgBC,EAAhB,KAEA,EAA2BvmB,mBAAS,CAAC,EAAE,GAAG,EAAE,KAA5C,mBAAKwmB,EAAL,KAAaC,EAAb,KAGMjO,GADsBva,aAAY,SAACC,GAAD,OAAeA,EAAMwoB,iBAClCzoB,aAAY,SAACC,GAAD,OAAgBA,EAAM6L,iBACvD4c,EAAoB1oB,aAAY,SAACC,GAAD,OAAgBA,EAAM0oB,eAE5D,EAA8B5mB,oBAAkB,GAAhD,mBAAK6mB,EAAL,KAAeC,EAAf,KAYMC,EAAc,SAACzd,GACjB,IACI0d,EADAC,EAAwB3d,EAAM0F,cAGjBgY,EAAR,QADIC,EAAI7d,UACSnG,SAASC,eAAe,UAAqBD,SAASC,eAAe,WAE/F+jB,EAAI3oB,MAAMkS,WAAa,aACnBwW,IAAUA,EAAS1oB,MAAMkS,WAAa,UAIxC0W,EAAW,SAAC5d,GACd,IAAI2d,EAAqB3d,EAAM0F,cACJ,eAAvBiY,EAAI3oB,MAAMkS,WAA4ByW,EAAI3oB,MAAMkS,WAAa,QAAeyW,EAAI3oB,MAAMkS,WAAa,cAQrG2W,EAAoB,SAAC/lB,EAAgBgmB,GACvC,IAAIhM,EAAmB,GAMvB,OALAha,EAAKmH,SAAQ,SAACuC,GACNA,EAAEc,WAAWwb,GACbhM,EAAW3U,KAAKqE,EAAC,UAGlBsQ,GAGLiM,EAAW,SAAC1e,GACd,IAAI2e,EAAU3e,EAAM2e,QAChBF,EAASze,EAAMye,OACfpB,EAAUrd,EAAMqd,UAChBuB,EAAS5e,EAAM4e,SAEnB,OACI,sBAAK/oB,GAAI,YAAY4oB,EAAQ/oB,UAAU,gBAAvC,UACI,sBAAKG,GAAI8oB,EAASjpB,UAAU,cAA5B,6BAA2D2nB,EAA3D,OACA,qBAAKxnB,GAAI8oB,EAAQ,MAAOjpB,UAAU,cAAlC,SAAiDkpB,IAEjD,yBAAQlpB,UAAU,aAAaG,GAAI8oB,EAASnnB,SAAU,SAACC,GAAD,OAlDjD,SAACA,EAAkConB,GAChD,IAAIpd,EAAahK,EAAEC,OAAOyM,gBAAgB,GAAGxM,MAC7C+lB,EAAc,2BAAID,GAAL,kBAAkBoB,EAAKpd,KACpCmc,EAAa,2BAAID,GAAL,kBAAiBkB,EAAMpnB,EAAEC,OAAOyM,gBAAgB,GAAGtO,MAC/DunB,GAAsB3b,EAAKod,EAAKte,EAAQpJ,GA8C4D2nB,CAASrnB,EAAEgnB,IAAvG,UACA,iDAAY,KAIJ5O,EAAOrO,KAAI,SAACC,EAAaC,GACrB,OACI,wBAA8B7L,GAAI4L,EAAG,IAArC,SACKA,EAAG,WADKC,EAAE,IAAMid,SAOrC,wBAAQtlB,QAAS,SAAAvC,GAAC,OAvCd,SAAC2nB,GACTX,EAAW,2BAAID,GAAL,kBAAeY,EAASD,EAAkBR,EAAMS,MAsClCM,CAAQN,IAA5B,0BAKNO,EAAmB,SAAChgB,EAAa0C,GACnC,IAAIud,EAAgB,QACpB,GAAItP,EAMA,OALAA,EAAKK,WAAWpQ,SAAQ,SAAAqQ,GAChBA,EAAIC,UAAUxO,GAAKuO,EAAIE,eAAenR,IACtCigB,EAAgB,iBAGjBA,GAIf,OACQ,sBAAKppB,GAAG,UAAR,UACI,sBAAKA,GAAG,iBAAiBF,MAAO,CAAC0W,OAAO,SAAxC,UACQ,qBAAKxW,GAAG,kBAAR,iCACA,sBAAKA,GAAG,WAAR,UACI,wBAAQwD,QAzFf,WAAO8kB,GAAaD,IAyFiBroB,GAAG,aAAjC,wBACCqoB,GACG,gCACI,wBAAQroB,GAAG,UAAUH,UAAU,YAAY2D,QAAS,SAAC5B,GAAD,OAAqC2mB,EAAY3mB,IAArG,iBACA,wBAAQ5B,GAAG,SAASH,UAAU,YAAY2D,QAAS,SAAC5B,GAAD,OAAqC2mB,EAAY3mB,IAApG,yBAKpB,sBAAK5B,GAAG,YAAR,UAEQ,cAAC6oB,EAAD,CAAUC,QAAQ,cAAcF,OAAQ,EAAGpB,UAAWI,EAAW,GAAKmB,SAAUjB,EAAU,KAE1F,qBAAKjoB,UAAU,eAAeG,GAAG,WAAjC,SAEIgoB,EAAQ,GAAGrc,KAAI,SAAAxC,GACX,IAAIkgB,EAAQF,EAAiBhgB,EAAI,GACjC,OAAO,qBAAqBnJ,GAAKmJ,EAAM,KAAMrJ,MAAO,CAAC,gBAAmBupB,GAAQxpB,UAAU,WAC9E2D,QAAS,SAAC5B,GAAD,OAAkC8mB,EAAS9mB,IADzD,SAC8DuH,GADpDA,EAAM,UAM9Bkf,GACG,8BACI,cAACQ,EAAD,CAAUC,QAAQ,cAAcF,OAAQ,EAAGpB,UAAWI,EAAW,GAAImB,SAAUjB,EAAU,OAGhGO,GACD,qBAAKxoB,UAAU,eAAeG,GAAG,WAAjC,SAEYgoB,EAAQ,GAAGrc,KAAI,SAAAxC,GACX,IAAIkgB,EAAQF,EAAiBhgB,EAAI,GACjC,OAAO,qBAAqBnJ,GAAKmJ,EAAI,KAAMrJ,MAAO,CAAC,gBAAmBupB,GAAQxpB,UAAU,WAChF2D,QAAS,SAAC5B,GAAD,OAAkC8mB,EAAS9mB,IADrD,SAC0DuH,GADhDA,EAAM,iBCrIhDmgB,GAZC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAEd,EAA8B/nB,mBAAS,IAAvC,mBAAKgoB,EAAL,KAAeC,EAAf,KAEA,OAAQ,8BACA,uBAAMzmB,SAAU,SAACpB,GAAD,OAAO2nB,EAAW3nB,EAAG4nB,IAAW1pB,MAAO,CAAC,aAAe,OAAQ,UAAY,QAA3F,sBAEI,uBAAOC,KAAK,OAAOS,KAAK,YAAYR,GAAG,YAAY2B,SAAU,SAAAC,GAAC,OAAI6nB,EAAY7nB,EAAEC,OAAOC,UACvF,wBAAQ/B,KAAK,SAAb,kCC0BD2pB,GA/BS,SAAC3e,EAAkBnB,EAAoBsB,GAG3D,IAAIV,EAAY,IAAIW,SACpBX,EAAUY,OAAO,YAAYL,GAE7B5I,QAAQC,IAAI,SAAW2I,GACvB1I,IAAMC,KAAN,UAAcC,wBAAd,iCACIiI,EACAZ,GAEHnH,MAAK,SAAAyC,GACF/C,QAAQC,IAAI,WACZ8I,EAAcN,UAAY,WAAaG,EAAY,oBAEtDd,OAAM,SAAAlH,GACPZ,QAAQC,IAAI,uBACR8I,EAAcN,UAAY,yBAU9BzF,OAAOwkB,SAASC,UCDLC,GA7BQ,SAAC5D,EAAkBlb,EAAkBnB,EAAoBsB,GAG5E,IAAIV,EAAY,IAAIW,SACpBX,EAAUY,OAAO,YAAYL,GAC7BP,EAAUY,OAAO,WAAW6a,GAE5B9jB,QAAQC,IAAI,SAAW2I,GACvB1I,IAAMC,KAAN,UAAcC,wBAAd,4BACIiI,EACAZ,GAEHnH,MAAK,SAAAyC,GACF/C,QAAQC,IAAI,WACZ8I,EAAcN,UAAY,WAAaG,EAAY,oBAEtDd,OAAM,SAAAlH,GACPZ,QAAQC,IAAI,uBACR8I,EAAcN,UAAY,0BCkLnBkf,I,OAxLS,WAGpB,IAAM3I,EAAsB1hB,aAAY,SAACC,GAAD,OAAgBA,EAAMiW,cAG9D,GAF2BlW,aAAY,SAACC,GAAD,OAAeA,EAAM6L,gBAEpB/J,mBAAiB,QAAzD,mBAAKuoB,EAAL,KAAoBC,EAApB,KACA,EAA8BxoB,mBAAiB,IAA/C,mBAAKgoB,EAAL,KAAeC,EAAf,KACA,EAAgCjoB,mBAAiB,QAAjD,mBAAKyoB,EAAL,KAAgBC,EAAhB,KACA,EAAwC1oB,mBAAiB,IAAzD,mBAAK2oB,EAAL,KAAoBC,EAApB,KACA,EAA4B5oB,qBAA5B,mBAAK6oB,EAAL,KAAcC,EAAd,KACA,EAA8B9oB,qBAA9B,mBAAKqU,EAAL,KAAe0U,EAAf,KACIjpB,EAAaC,cAEbqI,EAAgBqC,KAkDdue,EAAsB,SAAC5oB,GACzB,IAAI2O,GAAgB3O,EAAEC,OAAOyM,gBAAgB,GAAGxM,MAC5CyO,GAAO,GACP4Q,EAAQpX,SAAQ,SAAAod,GACRA,EAAMtf,YAAYoiB,IAClBK,EAAWnD,EAAMrR,QAAQvF,IACzBkZ,EAAYtC,EAAMrR,QAAQvF,GAAOwF,cAyB3C0U,EAAa,WACf,IAAIC,EAAQjmB,SAASC,eAAe,mBAChCgmB,GAAOb,GAAeL,EAAUS,EAAUrgB,EAAc8gB,IAI1DC,EAAkB,WACpB,MAAgB,SAAZV,EAEQ,sBAAKjqB,GAAG,gBAAR,UACA,sBAAKA,GAAG,eAAR,iCAA4CiqB,EAA5C,OACA,sBAAKjqB,GAAG,kBAAR,UACI,qBAAKF,MAAO,CAAC8qB,YAAa,MAAOzO,UAAU,OAA3C,iCACA,yBAAQnc,GAAG,YAAY2B,SAAU,SAACC,GAAD,OA5D9B,SAACA,GACpBooB,EAAiBpoB,EAAEC,OAAOyM,gBAAgB,GAAGxM,OA2D0C+oB,CAAejpB,IAAtF,UACY,yCACA,4CACA,+CAEZ,qBAAK9B,MAAO,CAACgrB,WAAY,QAAzB,SACE,WACE,OAAOf,GACH,IAAK,SAAU,OAAO,sBAAK/pB,GAAG,gBAAgBF,MAAO,CAACyW,MAAO,SAAvC,UACE,cAACwU,GAAD,CACI5E,MAAOtQ,EACPwR,OAAQ,SAACzlB,GAAD,OAAsC4oB,EAAoB5oB,MAEtE,qBAAK9B,MAAO,CAAC8qB,YAAY,OAAQxG,QAAQ,QAAzC,SACA,kDAAciG,QAAd,IAAcA,OAAd,EAAcA,EAASpQ,OAAvB,YAAiCoQ,QAAjC,IAAiCA,OAAjC,EAAiCA,EAASnQ,YAE1C,qBAAKla,GAAG,uBAEhC,IAAK,MAAO,OAAO,cAAC,GAAD,CACCupB,WAAY,SAAC3nB,EAA2BopB,GAA5B,OAnD1C,SAACppB,EAA2ByhB,GAC1CzhB,EAAEqB,iBACFwmB,EAAYpG,GAEZlC,EAAQpX,SAAQ,SAAAkhB,GACRA,EAAIpjB,YAAYoiB,GAChBgB,EAAInV,QAAQ/L,SAAQ,SAAA+P,GACZA,EAAK/D,UAAUyT,GACfc,EAAWxQ,SA2CuEoR,CAAUtpB,EAAGopB,MAEvF,IAAK,SAAU,OAAO,gCACM,cAACD,GAAD,CAAe5E,MAAOtQ,EAAUwR,OAAQ,SAACzlB,GAAD,OAAsC4oB,EAAoB5oB,MAClG,wBAAQ4B,QAASinB,EAAjB,+BAjBlC,QA0BN,cAAC,GAAD,CAAqB3Q,KAAMuQ,EAAS3f,OAAQd,EAAetI,WAAYA,IACvE,sBAAMtB,GAAG,iBAAiBgD,SAAU,SAACpB,GAAD,OAzHjC,SAACA,GAAkC,IAAD,IACjDA,EAAEqB,iBAEF,IAAIoiB,EAAoC5gB,SAASsf,uBAAuB,YAEpEoH,EAAsB,GAC1BnH,MAAMC,KAAKoB,GAAStb,SAAQ,SAACnI,GACrB,IAAI0hB,EAA2B7e,SAASC,eAAe9C,EAAE5B,IAC3B,gBAAtB,OAAJsjB,QAAI,IAAJA,OAAA,EAAAA,EAAMxjB,MAAMkS,aACZmZ,EAAcljB,KAAK,CAACrG,EAAE5B,GAAGorB,UAAU,EAAExpB,EAAE5B,GAAGqI,OAAO,GAC7BzG,EAAE5B,GAAGorB,UAAUxpB,EAAE5B,GAAGqI,OAAO,EAAEzG,EAAE5B,GAAGqI,aAMlE,IAAIyd,EAA4B,UAAGrhB,SAASC,eAAe,yBAA3B,aAAG,EAA2CugB,UAC1Ec,EAA4B,UAAGthB,SAASC,eAAe,yBAA3B,aAAG,EAA2CugB,UAC1Ea,IAAWA,EAAY,IACvBC,IAAWA,EAAY,IAG3B,IAAIsF,EAAkB,MAClBC,EAAc7mB,SAASC,eAAe,UACK2mB,EAAf,gBAArB,OAAXC,QAAW,IAAXA,OAAA,EAAAA,EAAaxrB,MAAMkS,YAAqC,KAAgB,MACxE4T,GAAehkB,EAAGupB,EAAelB,EAAWnE,EAAWC,EAAWsF,EAAU7B,EAAU5f,EAAe,oBAgGlB2hB,CAAW3pB,IAAI9B,MAAO,CAAC,aAAe,OAAQ,UAAY,QAAjI,SACI,wBAAQD,UAAU,gBAAgBE,KAAK,SAAvC,wCAML,yBAIf,OACI,sBAAKC,GAAG,gBAAR,UACI,sBAAKA,GAAG,cAAR,UACI,sBAAKA,GAAG,gBAAR,UACI,qBAAKA,GAAG,kBAAR,kCACA,wBAAQH,UAAU,sBAAsB2D,QAAS,SAAAvC,GAAC,OAAEgmB,GAAe,CAACrd,gBAActI,gBAAlF,yCAGJ,sBAAKtB,GAAG,oBAAR,UACI,qBAAKA,GAAG,mBAAR,SACI,uBAAOgD,SAAU,SAACpB,GAAD,OAlJjB,SAACA,GACjB0lB,GAAgB1lB,EAAGuoB,EAAevgB,EAAe,sBAiJmB4hB,CAAY5pB,IAAI9B,MAAO,CAAC,aAAe,OAAQ,UAAY,QAA/G,+BACsB,uBAAOC,KAAK,OAAOS,KAAK,YAAYmB,SAAU,SAAAC,GAAC,OAAIwoB,EAAiBxoB,EAAEC,OAAOC,UAC/F,wBAAQjC,UAAU,eAAeE,KAAK,SAAtC,6BAGR,sBAAKC,GAAG,iBAAR,UACI,qBAAKA,GAAG,gBAAR,8CACA,cAAC,GAAD,CAAmBmM,OAAQ,SAACvK,GAAD,OApH1B,SAACA,GAClB,IAAIuH,GAAcvH,EAAEC,OAAOyM,gBAAgB,GAAGxM,MAC1CqH,GAAK,GAELohB,EAAYpJ,EAAQhY,IACpB+gB,EAAa/I,EAAQhY,GAAKtB,YAE1BqiB,EAAa,QA6GgEuB,CAAa7pB,MAC9E,wBAAQ5B,GAAG,iBAAiBwD,QA/E5B,WAChB,IAAIknB,EAAQjmB,SAASC,eAAe,sBAChCgmB,GAAQhB,GAAgBO,EAAUrgB,EAAc8gB,IA6EpC,kCAGR,qBAAK1qB,GAAG,0BAIZ,qBAAKA,GAAG,qBAER,cAAC2qB,EAAD,SC9LNe,GAAwB,CAAC,CAC3BC,QAAQ,GACXC,KAAK,GACFC,eAAe,GACfC,SAAU,IAAI9kB,KACd+kB,SAAU,IAAI/kB,KACdglB,cAAc,EACdC,WAAW,GACXC,WAAW,GACdC,WAAY,GACTC,WAAW,KAIFC,GAAgB9rB,YAAY,CACxCC,KAAM,cACNC,aAAcirB,GACd7qB,SAAU,CACTyrB,QAAS,CACRtkB,QAAS,SAACtI,EAAD,GAAkD,IAAzCqB,EAAwC,EAAxCA,QACjBrB,EAAMuI,KAAKlH,IAEZmH,QAAS,kBAAqI,CAC7InH,QAAS,CACR4qB,QAFO,EAAGA,QAGVC,KAHO,EAAYA,KAInBC,eAJO,EAAkBA,eAKzBC,SALO,EAAkCA,SAM1BC,SANR,EAA4CA,SAOnDC,aAPO,EAAsDA,aAQ9CC,WARR,EAAoEA,WAS5DC,WATR,EAAgFA,WAUvFC,WAVO,EAA4FA,WAWnGC,WAXO,EAAwGA,eAelHG,YAAa,SAAC7sB,EAAOuB,GACpBvB,EAAM0I,OAAO,EAAE1I,EAAM2I,YAMjB,GAGHgkB,GAAcnrB,QAFRsrB,GADH,GACNF,QACaG,GAFP,GAENF,YCxBcG,GApBU,SAACviB,GAEtB,IAAIP,EAAgBO,EAAMO,OACtBpJ,EAAaC,cAejB,OAAO,wBAAQiC,QAdK,WAChBnB,IAAMwH,IAAN,UAAoBtH,wBAApB,8BAA+EqH,GAC1EnH,MAAK,SAAAyC,GACF,IAAMynB,EAAyBznB,EAAItC,KACnCT,QAAQC,IAAIuqB,GACZrrB,EAAWmrB,GAAwB,KACnCE,EAAS5iB,SAAQ,SAAA6iB,GACbtrB,EAAWkrB,GAAwBI,UAG1C3iB,OAAM,SAAAlH,GACHZ,QAAQC,IAAI,kBAGjB,iCCDIyqB,GAnBU,SAAC/hB,EAAkC6hB,EAChCG,EAAgBpiB,EAAYQ,GACpDJ,EAAM7H,iBAEN,IAAI0H,EAA0BlG,SAASC,eAAewG,GAClDP,IAAMA,EAAKC,UAAY,gBAE3B,IAAI+Y,EAAQ,CAAC,IAAOmJ,EAAShS,UAAW,MAASgS,EAAS/R,WAAW,EAAG,KAAO+R,EAAS9R,eAEpFxQ,EAAY,IAAIW,SACpBX,EAAUY,OAAO,OAAOuhB,GACxBniB,EAAUY,OAAO,OAAOiF,OAAOsT,EAAMzI,OACrC1Q,EAAUY,OAAO,QAAQiF,OAAOsT,EAAMxI,QACtC3Q,EAAUY,OAAO,MAAMiF,OAAOsT,EAAMvI,MAGpC7Q,EAAYC,EAAW,wBAAyBE,EAAQC,I,OCC7CoiB,OAnBf,SAAoBC,EAAI7jB,GAEvB,IAAI2O,EAAG,EAeP,OAXAkV,EAAIjjB,SAAQ,SAACkjB,GAEXnV,GADEmV,IAAQ9jB,EACF,EAEA,KAKV2O,EAAE,GCOYoV,GArBW,SAACpiB,EAAkClI,EAAU5C,EAAWmtB,EAC9DL,EAAgBpiB,EAAYQ,GAC5CJ,EAAM7H,iBAEN,IAAI0H,EAA0BlG,SAASC,eAAewG,GAClDP,IAAMA,EAAKC,UAAY,gBAE3B,IAAI+Y,EAAQ,CAAC,IAAOmJ,EAAShS,UAAW,MAASgS,EAAS/R,WAAW,EAAG,KAAO+R,EAAS9R,eAEpFxQ,EAAY,IAAIW,SACpBhJ,QAAQC,IAAIQ,GACZ4H,EAAUY,OAAO,OAAOxI,GACxB4H,EAAUY,OAAO,OAAOiF,OAAOsT,EAAMzI,OACrC1Q,EAAUY,OAAO,QAAQiF,OAAOsT,EAAMxI,QACtC3Q,EAAUY,OAAO,MAAMiF,OAAOsT,EAAMvI,MACpC5Q,EAAUY,OAAO,KAAKiF,OAAOrQ,IAC7BwK,EAAUY,OAAO,WAAW+hB,GAG5B5iB,EAAYC,EAAW,uBAAwBE,EAAQC,ICV3CyiB,I,OAXI,SAACxqB,EAAMyqB,EAAQC,GAEjC,IAAIC,EAAa,GAMjB,OALA3qB,EAAKmH,SAAQ,SAAAuC,GACRA,EAAE+gB,KAAWC,GAChBC,EAAWtlB,KAAKqE,MAGXihB,IC8EMC,GA9Ec,SAACrjB,GAE1B,IAAIsjB,EAActjB,EAAMvH,KACpB8H,EAASP,EAAMO,OACfgjB,EAASvjB,EAAMujB,OACfC,EAAWxjB,EAAMwjB,SACjBR,EAAgBhjB,EAAMgjB,cACtBS,EAAwBzjB,EAAMyjB,gBAE5BC,EAAqBpuB,aAAY,SAACC,GAAD,OAAgBA,EAAM6L,gBAC7D,EAAgC/J,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KA0BA,OACI,qBAAK1B,GAAG,WAAR,SACI,uBAAMA,GAAG,aAAagD,SAAU,SAACpB,GAAD,OA3Bf,SAACA,GACtBA,EAAEqB,iBAEF,IAAI6qB,EAAmB,GACvB/e,OAAOgf,KAAKtsB,GAAUsI,SAAQ,SAAC2N,GAC3BoW,EAAQ7lB,KAAKyP,GACboW,EAAQ7lB,KAAKxG,EAASiW,OAG1BwV,GAAkBtrB,EAAEksB,EAAQL,EAAYC,GAC5BP,EACA,IAAInmB,KAAKymB,EAAW,UACpB/iB,EAAO,iBAeoDsjB,CAAiBpsB,IAApF,UACCmN,OAAOgf,KAAKN,GAAa9hB,KAAI,SAAC+L,GAC3B,IAA6B,IAAzBqV,GAAWY,EAASjW,GAAW,CAC/B,IAAIuW,EAAU1R,GAAasR,EAAOnW,GACrB,KAAVuW,IAAcA,EAAQvW,GACzB,IAAIwW,EAAmB,GAIvB,OAHIN,EAAgBvlB,OAAO,IACvB6lB,EAAUd,GAAWQ,EAAgB,EAAElW,IAEtB,IAAjBwW,EAAQ7lB,OACD,sBAAKxI,UAAU,gBAAf,UACC,sBAAKA,UAAU,eAAf,UAA+BouB,EAA/B,QACA,uBAAOluB,KAAK,OAAQF,UAAU,oBACtBG,GAAI,SAAS0X,EACblX,KAAMkX,EACN/V,SAAU,SAAAC,GAAC,OA3BzB,SAACA,GACnBF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOrB,KAAOoB,EAAEC,OAAOC,SA0BRqsB,CAAcvsB,IAC3BsB,YAAamN,OAAOod,EAAY/V,QANL,IAAIA,GASxC,sBAAK7X,UAAU,gBAAf,UACK,sBAAKA,UAAU,eAAf,UAA+BouB,EAA/B,QACA,+CAAkBR,EAAY/V,GAA9B,OACA,yBAAQlX,KAAMkX,EAAG/V,SAAU,SAACC,GAAD,OA9BrC,SAACA,GACoB,mBAApCA,EAAEC,OAAOyM,gBAAgB,GAAGxM,OAC3BJ,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOrB,KAAOoB,EAAEC,OAAOyM,gBAAgB,GAAGxM,SA4BessB,CAAcxsB,IAA7E,UACI,oDACCssB,EAAQviB,KAAI,SAAA0iB,GACT,OAAO,iCACMA,EAAI,IADGA,EAAI,YAND,IAAI3W,OAe3D,wBAAQ7X,UAAU,gBAAgBE,KAAK,SAAvC,0BACA,qBAAKC,GAAG,wBCuCLsuB,GA7GK,SAACnkB,GAEjB,IAAIokB,EAAiBpkB,EAAMvH,KACvB8qB,EAAgBvjB,EAAMujB,OACtBP,EAAuBhjB,EAAMgjB,cAC7BS,EAAwBzjB,EAAMyjB,gBAE5BC,EAAqBpuB,aAAY,SAACC,GAAD,OAAgBA,EAAM6L,gBAIzDoiB,EAAW,CAAC,UAAU,WAAW,WAAW,gBAC5CjjB,EAASuB,KAGb,EAA4BzK,mBAAiB,GAA7C,mBAAOgtB,EAAP,KAAeC,EAAf,KACA,EAA0BjtB,mBAAiB,GAA3C,mBAAOktB,EAAP,KAAcC,EAAd,KACIC,EAAsB,GACtBL,EAASlmB,OAAO,IAAGumB,EAAa7f,OAAOgf,KAAKQ,EAAS,KAEzD,MAAyC/sB,oBAAS,GAAlD,mBAAKgK,EAAL,KAAoBC,EAApB,KAGA,EAAsCjK,mBAAc,IAApD,mBAAOisB,EAAP,KAAoBoB,EAApB,KAEArqB,qBAAU,WACN,IAAIsqB,EAAgB/pB,KAAKmb,MAAMqO,EAASlmB,OAjB7B,GAiB+C,IAC3DsmB,EAASG,MAGZ,IAAMC,EAAa,SAACC,GAChB,IAAIC,EAAWT,EAA0B,IAAdQ,EAAU,IAAO,EACxCC,GAAUP,GAASO,GAAU,GAC7BR,EAAUQ,IAKZC,EAAa,SAACttB,GAChB,IAAIutB,EAAOvtB,EAAE4O,cAAc0B,WAAW,GAAGpQ,MACzC+sB,EAAeN,GAAUY,IAnBD1jB,GAAkB,IAuBxC2jB,EAAc,SAACvjB,GACjB,OAAIA,GApCO,GAoCO2iB,GAAY3iB,EApCnB,IAoCmC2iB,EAAO,GAC3C,YAEC,QAIf,OAAO,sBAAK3uB,UAAU,YAAf,UAEK,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,cAAc2D,QAAS,SAAAvC,GAAC,OAAE8tB,GAAW,IAApD,cAA8D,IAA9D,aADJ,iBAEmBP,EAAO,EAF1B,MAEgCE,EAAQ,EACpC,sBAAK7uB,UAAU,cAAc2D,QAAS,SAAAvC,GAAC,OAAE8tB,GAAW,IAApD,oBAAmE,UAGvE,sBAAK/uB,GAAG,YAAR,UACI,wBAAOH,UAAU,YAAjB,UACI,uBAAOG,GAAG,OAAV,SACI,+BACY,sCACX4uB,EAAWjjB,KAAI,SAACsD,EAAYpD,GACzB,IAA+B,IAA3BkhB,GAAWY,EAAS1e,GAAa,CACjC,IAAIgf,EAAU1R,GAAasR,EAAO5e,GAElC,MADa,KAAVgf,IAAcA,EAAQhf,GAEzB,oBAAYpP,UAAU,qBAAtB,SACKouB,GADIpiB,YAQrB,gCACK0iB,EAAS5iB,KAAI,SAACihB,EAAU/gB,GACrB,OAAO,qBAAiB7L,GAAI,IAAI6L,EAAG/L,MAAO,CAACskB,QAAQgL,EAAYvjB,GAAG2K,OAAO,QAAlE,UACK,oBAAI3W,UAAU,wBAAwBG,GAAIqQ,OAAOxE,GAAIrI,QAAS,SAAC5B,GAAD,OAAgCstB,EAAWttB,IAAzG,kBACXmN,OAAOgf,KAAKnB,GAAMjhB,KAAI,SAAC+L,GACpB,IAA6B,IAAzBqV,GAAWY,EAASjW,GAAc,OAClC,oBAAkB7X,UAAU,eAA5B,SACK+sB,EAAKlV,IADD7L,EAAE,IAAI6L,QAJP,IAAI7L,WAchC,eAACE,EAAA,EAAD,CAAOC,KAAMR,EAAb,UACI,qBAAKxL,GAAG,iBAAR,uBACA,cAAC,GAAD,CAAsB4C,KAAM6qB,EAAaN,cAAeA,EAC5BziB,OAAQA,EACRijB,SAAUA,EACVD,OAAQA,EACRE,gBAAmBA,IAE/C,wBAAQpqB,QAhFP,WAAQiI,GAAkB,IAgF3B,6BC7CT4jB,I,OA1DS,WAEpB,IAAI3kB,EAASuB,KAEb,EAA8BzK,mBAAe,IAAIwF,MAAjD,mBAAOqa,EAAP,KAAgBC,EAAhB,KACA,EAAgC9f,qBAAhC,mBAAO8tB,EAAP,KAAiBC,EAAjB,KACMhB,EAA0B9uB,aAAY,SAACC,GAAD,OAAgBA,EAAM8vB,eAC5D3B,EAAqBpuB,aAAY,SAACC,GAAD,OAAgBA,EAAM6L,gBAC7D,EAAkC/J,oBAAkB,GAApD,mBAAOiuB,EAAP,KAAkBC,EAAlB,KAaMC,EAAU,WACZ,IAAgB,IAAZF,GAAqBlB,EAASlmB,OAAO,EAAE,CACnC,IAAI7F,EAAmB,GAIvB,OAHAuM,OAAOgf,KAAKQ,EAAS,IAAIxkB,SAAQ,SAAAkF,GAC7BzM,EAAQyF,KAAKsU,GAAasR,EAAO5e,OAE9B,8BACH,cAAC,GAAD,CAAarM,KAAM2rB,EAAUpB,cAAc,aAAaO,OAAO,UAAUE,gBAAiB,OAGlG,OAAO,yBAIf,OACQ,sBAAK5tB,GAAG,mBAAR,UACI,sBAAKA,GAAG,oBAAR,UACI,qBAAKA,GAAG,YAAR,yBACA,uBAAMA,GAAG,iBAAiBgD,SAAU,SAACpB,GAAD,OA7BlC,SAACA,GACfirB,GAAiBjrB,EAAE0tB,EAASjO,EAAQ3W,EAAO,eA4BwCklB,CAAUhuB,IACrE9B,MAAO,CAAC,aAAe,OAAQ,UAAY,QADvD,UAEJ,uBAAOC,KAAK,OAAOF,UAAU,cAAcW,KAAK,aAAamB,SAAU,SAAAC,GAAC,OA3BrE,SAACA,GACZ2tB,EAAY3tB,EAAEC,OAAOsM,MAAM,IA0ByD0hB,CAAQjuB,MAC5E,cAAC,KAAD,CAAYD,SAAU,SAACC,GAAD,OAAS0f,EAAW,IAAIta,KAAKqJ,OAAOzO,QAC1D,wBAAQ/B,UAAU,gBAAgBE,KAAK,SAAvC,+CAEJ,qBAAKC,GAAG,gBACR,cAAC,GAAD,CAAkBmK,MAAOO,IACzB,wBAAQlH,QA9BP,WACbksB,GAAa,IA6BD,sBAIJ,qBAAK1vB,GAAG,aAAR,SACI,cAAC2vB,EAAD,WC1CDG,GAlBS,SAAChlB,EAAkCilB,EAAeC,EAAoB9kB,EAAsBR,GACtHI,EAAM7H,iBAEA,IAAIuH,EAAY,IAAIW,SACpBX,EAAUY,OAAO,WAAW2kB,EAAS5C,eACrC3iB,EAAUY,OAAO,aAAaiF,OAAO2f,IACrCxlB,EAAUY,OAAO,WAAW2kB,EAASE,UACrCzlB,EAAUY,OAAO,YAAY2kB,EAASpf,WACtCnG,EAAUY,OAAO,aAAa2kB,EAASG,YAGvC,IAAIvlB,EAA0BlG,SAASC,eAAewG,GACxDP,IAAMA,EAAKC,UAAY,gBAErBL,EAAYC,EAAW,uBAAwBE,EAAQC,ICoDhDwlB,GA5DM,WAGjB,IAAIzlB,EAASuB,KACT3K,EAAaC,cACjB,EAAkCC,mBAAS,CACvC2rB,cAAe,gBACf8C,SAAS,GACTtf,UAAW,GACXuf,WAAW,KAJf,mBAAKE,EAAL,KAAiBC,EAAjB,KAMQlD,EAAkDiD,EAAlDjD,cAAe8C,EAAmCG,EAAnCH,SAAUtf,EAAyByf,EAAzBzf,UAAWuf,EAAcE,EAAdF,WACtClW,EAAoBva,aAAY,SAACC,GAAD,OAAeA,EAAM6L,gBAErD+kB,EAAe,SAAC1uB,GACxByuB,EAAe,2BAAKD,GAAN,kBAAoBxuB,EAAEC,OAAOrB,KAAOoB,EAAEC,OAAOC,UAiBzD,OACQ,gCACI,wBAAQ0B,QAAS,SAACvC,GAT1B0M,GAAa,IAAIjD,EAAOpJ,IAShB,4BACA,yBAAQd,KAAK,gBAAgBmB,SAAU,SAAAC,GAAC,OAjB3B,SAACA,GAEtByuB,EAAe,2BAAKD,GAAN,IAAmBjD,cAAevrB,EAAEC,OAAOC,SAeLyuB,CAAiB3uB,IAA7D,UACI,wBAAQE,MAAM,gBAAd,6BACA,wBAAQA,MAAM,aAAd,0BACA,wBAAQA,MAAM,WAAd,4BAGJ,qBAAKhC,MAAO,CAAC0W,OAAO,SAApB,SACI,cAAC,GAAD,CAAa5T,KAAMwqB,GAAWpT,EAAO,YAAYmT,GACjCA,cAAc,eACdO,OAAO,MACPE,gBAAiB,CAAC,CAAC,WAAW,QAAQ,CAAC,WAAW,eAZ1E,MAgBI,uBAAM5qB,SAAU,SAACpB,GAAD,OArBR,SAACA,GACjBkuB,GAAgBluB,EAAEwuB,GAAa,EAAO,aAAc1lB,GAoBO8lB,CAAY5uB,IAA/D,kBACS,uBAAO7B,KAAK,OAAOS,KAAK,WAAWsB,MAAOmuB,EAAUtuB,SAAU,SAAAC,GAAC,OAAI0uB,EAAa1uB,MADzF,SAEU,uBAAO7B,KAAK,OAAOS,KAAK,YAAYsB,MAAO6O,EAAWhP,SAAU,SAAAC,GAAC,OAAI0uB,EAAa1uB,MAF5F,UAGW,uBAAO7B,KAAK,OAAOS,KAAK,aAAasB,MAAOouB,EAAYvuB,SAAU,SAAAC,GAAC,OAAI0uB,EAAa1uB,MAC3F,wBAAQ7B,KAAK,SAAb,+BAEJ,qBAAKC,GAAG,mBC1BTywB,GAjCG,WACjB,MAAoCjvB,qBAApC,mBAAOkvB,EAAP,KAAmBC,EAAnB,KACOjmB,EAASuB,KAoBb,OACI,yDAEI,uBAAMjJ,SAAU,SAAApB,GAAC,OAjBD,SAACkJ,EAAkCklB,EAAoB9kB,EAAsBR,GACvGI,EAAM7H,iBAEA,IAAIuH,EAAY,IAAIW,SACpBX,EAAUY,OAAO,OAAOslB,GACxBlmB,EAAUY,OAAO,aAAaiF,OAAO2f,IAErC,IAAIrlB,EAA0BlG,SAASC,eAAewG,GACxDP,IAAMA,EAAKC,UAAY,gBAErBL,EAAYC,EAAW,0BAA2BE,EAAQC,GAOnCimB,CAAgBhvB,GAAG,EAAM,mBAAoB8I,IAAS5K,MAAO,CAAC,UAAY,OAAQ,UAAY,QAAjH,UACQ,uBAAOC,KAAK,OAAOF,UAAU,aAAaW,KAAK,aAAamB,SAAU,SAACC,GAAD,OAtBpE,SAACA,GACXA,EAAEC,OAAOsM,OAAOwiB,EAAc/uB,EAAEC,OAAOsM,MAAM,IAqBsEC,CAAUxM,MACrH,+CAER,qBAAK5B,GAAG,kBAAR,mBCzBG6wB,GANA,SAACnmB,EAAapJ,GAEzBa,QAAQC,IAAI,QACZuL,GAAa,IAAIjD,EAAOpJ,ICsDbwvB,OApCf,WAEC,IAAIxvB,EAAaC,cACbmJ,EAASuB,KAKZ,OAJDzH,qBAAU,WACTqsB,GAAOnmB,EAAQpJ,MAIb,qBAAKzB,UAAU,MAAf,SAEF,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkxB,OAAK,EAACtmB,KAAK,IAAIumB,UAAW3wB,IACjC,cAAC,IAAD,CAAO0wB,OAAK,EAACtmB,KAAK,SAASumB,UAAW3vB,IACtC,cAAC,IAAD,CAAO0vB,OAAK,EAACtmB,KAAK,UAAUumB,UAAW3tB,IACvC,cAAC,IAAD,CAAO0tB,OAAK,EAACtmB,KAAK,UAAUumB,UAAWvtB,IACvC,cAAC,IAAD,CAAOstB,OAAK,EAACtmB,KAAK,kBAAkBumB,UAAWljB,KAC/C,cAAC,IAAD,CAAOijB,OAAK,EAACtmB,KAAK,mBAAmBumB,UAAW3f,KAChD,cAAC,IAAD,CAAO0f,OAAK,EAACtmB,KAAK,mBAAmBumB,UAAW9P,KAChD,cAAC,IAAD,CAAO6P,OAAK,EAACtmB,KAAK,iBAAiBumB,UAAWlc,KAC9C,cAAC,IAAD,CAAOic,OAAK,EAACtmB,KAAK,kBAAkBumB,UAAWzb,KAC/C,cAAC,IAAD,CAAOwb,OAAK,EAACtmB,KAAK,SAASumB,UAAWC,IACtC,cAAC,IAAD,CAAOF,OAAK,EAACtmB,KAAK,mBAAmBumB,UAAWE,IAChD,cAAC,IAAD,CAAOH,OAAK,EAACtmB,KAAK,wBAAwBumB,UAAWlH,KACrD,cAAC,IAAD,CAAOiH,OAAK,EAACtmB,KAAK,eAAeumB,UAAW3B,KAC5C,cAAC,IAAD,CAAO0B,OAAK,EAACtmB,KAAK,iBAAiBumB,UAAWb,KAC9C,cAAC,IAAD,CAAOY,OAAK,EAACtmB,KAAK,cAAcumB,UAAWP,c,uCClC3CzoB,GAAUmpB,aAAgB,CAC/BxxB,KAAMW,EAAU0H,QAChB0G,SAAUjG,EAAkBT,QAC5BkgB,cAAe5f,EAAuBN,QACtCwN,UAAW7B,GAAkB3L,QAC7BqN,cAAevB,GAAqB9L,QACpCopB,UAAWne,GAAkBjL,QAC7BqpB,aAAcze,GAAa5K,QAC3BuD,aAAckB,GAAczE,QAC5BogB,YAAanb,GAAcjF,QAC3B2N,WAAY2Q,GAAmBte,QAE/BwnB,YAAanD,GAAcrkB,QAC3BD,SAAUD,EAAcE,QAExBiZ,YAAanI,GAAgB9Q,UAGxBspB,GAAgB,CACrBriB,IAAK,OACLsiB,cAGKC,GAAmBC,aAAeH,GAAetpB,IAKxC0pB,eAAe,CAC7B1pB,QAASwpB,GACTG,WAAW,YAAKC,YAAqB,CAACC,mBAAmB,O,UCxCtDC,GAAYC,aAAaC,IAE7BC,IAAS9rB,OACP,cAAC,IAAD,CAAU6rB,MAAOA,GAAjB,SACC,cAAC,IAAME,WAAP,UACG,cAAC,KAAD,CAAaC,QAAS,KAAML,UAAWA,GAAvC,SACG,cAAC,GAAD,UAIPrtB,SAASC,eAAe,W","file":"static/js/main.37b29fd1.chunk.js","sourcesContent":["import { Fragment } from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {User} from '../type';\r\nimport { NavDropdown} from 'react-bootstrap';\r\nimport \"./css/navbar.css\";\r\n\r\nconst Navbar = () => {\r\n\r\n\tconst userstate: User = useSelector((state: any) => state.user);\r\n\r\n\tlet navbarstyle = {'backgroundColor': '#444444','ZIndex':'1'}\r\n\tlet linkstyle = {'backgroundColor': '#444444','color': '#aaffff'}\r\n\r\n\tconst guestLinks = () => {\r\n\t\treturn(\r\n\t\t\t<Fragment>\r\n\t\t\t\t<li className=\"nav-item\" >\r\n\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/login\" style={linkstyle} >Log In</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className=\"nav-item\" >\r\n\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/signup\" style={linkstyle} >Sign Up</Link>\r\n\t\t\t\t</li>\t\r\n\t\t\t</Fragment>\r\n\t\t)\t\t\r\n\t};\r\n\t\r\n\tconst authLinks = () => {\r\n\t\treturn(\r\n\t\t\t<li className=\"nav-item\" >\r\n\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/logout\" style={linkstyle}>Logout</Link>\r\n\t\t\t</li>\t\r\n\t\t)\r\n\t};\r\n\t\r\n\r\n\treturn(\t\t\r\n\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light0\" style={navbarstyle}>\r\n\t\t  <div className=\"container-fluid\">\r\n\t\t\t<button\r\n\t\t\t  className=\"navbar-toggler\"\r\n\t\t\t  type=\"button\"\r\n\t\t\t  data-mdb-toggle=\"collapse\"\r\n\t\t\t  data-mdb-target=\"#navbarNav\"\r\n\t\t\t  aria-controls=\"navbarNav\"\r\n\t\t\t  aria-expanded=\"false\"\r\n\t\t\t  aria-label=\"Toggle navigation\"\r\n\t\t\t>\r\n\t\t\t\t<i className=\"fas fa-bars\"></i>\r\n\t\t\t</button>\r\n\t\t\t\r\n\r\n\r\n\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n\t\t\t\t  <ul className=\"navbar-nav\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\" style={linkstyle}>Home</Link>\r\n\t\t\t\t\t</li>\t\t\r\n\r\n\t\t\t\t\t<NavDropdown title=\"Employee\" id=\"basic-nav-dropdown1\" >\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/employee/setup\" style={linkstyle}>Setup</Link>\r\n\t\t\t\t\t\t\t</li>\t\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/employee/viewer\" style={linkstyle}>Viewer</Link>\r\n\t\t\t\t\t\t\t</li>\t\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/employee/graphs\" style={linkstyle}>Graphs</Link>\r\n\t\t\t\t\t\t\t</li>\t\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/employee/rulemanager\" style={linkstyle}>Manage Exceptions</Link>\r\n\t\t\t\t\t\t\t</li>\t\r\n\t\t\t\t\t</NavDropdown>\r\n\r\n\t\t\t\t\t<NavDropdown title=\"Threejs\" id=\"basic-nav-dropdown2\" >\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link active\" aria-current=\"page\" to=\"/three\" style={linkstyle}>ThreeTest</Link>\r\n\t\t\t\t\t\t</li>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link active\" aria-current=\"page\" to=\"/three/particles\" style={linkstyle}>Particles</Link>\r\n\t\t\t\t\t\t</li>\t\r\n\t\t\t\t\t</NavDropdown>\r\n\r\n\t\t\t\t\t<NavDropdown title=\"JobDesc\" id=\"basic-nav-dropdown3\" >\t\t\t\t\t\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link active\" aria-current=\"page\" to=\"/jobdesc/setup\" style={linkstyle}>Setup</Link>\r\n\t\t\t\t\t\t</li>\t\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link active\" aria-current=\"page\" to=\"/jobdesc/viewer\" style={linkstyle}>Viewer</Link>\r\n\t\t\t\t\t\t</li>\t\r\n\t\t\t\t\t</NavDropdown>\r\n\r\n\t\t\t\t\t<NavDropdown title=\"Mappings\" id=\"basic-nav-dropdown3\" >\t\t\t\t\t\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link active\" aria-current=\"page\" to=\"/departments\" style={linkstyle}>Department Mapping</Link>\r\n\t\t\t\t\t\t</li>\t\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link active\" aria-current=\"page\" to=\"/fields/viewer\" style={linkstyle}>Fields Mapping</Link>\r\n\t\t\t\t\t\t</li>\t\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link active\" aria-current=\"page\" to=\"/fields/key\" style={linkstyle}>Fields Key</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t\t{userstate.isAuthenticated ? authLinks(): guestLinks()}\r\n\t\t\t\t\t\r\n\t\t\t\t   </ul>\r\n\t\t\t  </div>\r\n\t\t  </div>\r\n\t\t</nav>\r\n\t)\r\n}\r\nexport default Navbar;","import React from 'react';\r\n//import { Link } from 'react-router-dom';\r\n//import axios from 'axios';\r\nimport \"./css/home.css\"\r\n\r\nconst Home = () => {\r\n\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"home-tile\">\r\n\t\t\t\t\t<div className=\"box-buffer\">\r\n\t\t\t\t\t\t<h1 className='display-4'>Auth System</h1>\r\n\t\t\t\t\t\t<p className='lead'>Base App for Login/Logout with JWT & Djoser email verification</p>\r\n\t\t\t\t\t\t<hr className='my-4'/>\r\n\t\t\t\t\t\t<p>paragraph simple</p>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"reflection\">\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n};\r\n\r\nexport default Home;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {User} from \"../type\";\r\n\r\n\r\n/////////\r\nconst userStateInit: User = {\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tauthtoken:'',\r\n\t\tisAuthenticated: false\r\n};\r\n\r\n\r\nexport const userSlice = createSlice({\r\n\tname: 'user_action',\r\n\tinitialState: userStateInit,\r\n\treducers: {\r\n\t\tlogin: (state, {payload}: PayloadAction<{email: string, password: string, authtoken: string, isAuthenticated:boolean}>) => {\r\n\t\t\t//uses primitive values (null, string, int, etc.), so can't mutate state directly\r\n\t\t\t//just return completely new state\r\n\t\t\treturn {\r\n\t\t\t\temail: payload.email,\r\n\t\t\t\tpassword: payload.password,\r\n\t\t\t\tauthtoken: payload.authtoken,\r\n\t\t\t\tisAuthenticated: payload.isAuthenticated\r\n\t\t\t}\r\n\t\t},\r\n\t\tlogout: (state, _: PayloadAction<{}>) => {\r\n\t\t\t//uses primitive values (null, string, int, etc.), so can't mutate state directly\r\n\t\t\t//just return completely new state\r\n\t\t\treturn {\r\n\t\t\t\temail: '',\r\n\t\t\t\tpassword: '',\r\n\t\t\t\tauthtoken: '',\r\n\t\t\t\tisAuthenticated: false\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\n//manually export action creators\r\nexport const {\r\n\tlogin: loginActionCreator,\r\n\tlogout: logoutActionCreator\r\n} = userSlice.actions;","import React, { FormEvent, ChangeEvent, useState } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { loginActionCreator } from '../../reducers/user_actions';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom'\r\nimport \"./css/login.css\"\r\nimport \"./css/login_cascade.css\"\r\n\r\n\r\nconst Login = () => {\r\n\r\n\t//react-redux functions\r\n\tconst dispatcher = useDispatch();\r\n\t//const user = useSelector((state: State) => state.user );\r\n\t\r\n\t\r\n\tconst [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n\t\tauthtoken: '',\r\n\t\tisAuthenticated: false\r\n    });\r\n\t\r\n    const { email, password, authtoken } = formData;\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\r\n\t};\r\n    \r\n\tconst onSubmit = (e: FormEvent<HTMLFormElement>):void => {\r\n        e.preventDefault();\r\n\t\tloginauth();\r\n\r\n    };\r\n\t\r\n\tconst loginauth = () => {\t\r\n\t//authentication - move to separate file\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t}\r\n\t\t};\r\n\t\tconst body = JSON.stringify({ email, password, authtoken });\r\n\t\tconsole.log(body);\r\n\t\ttry {\r\n\t\t\taxios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create`, body, config)\r\n\t\t\t\t\t.then(response=> {\r\n\t\t\t\t\t\tlet rdata:any = response.data\r\n\t\t\t\t\t\tlet accesstoken:string = rdata.access\r\n\t\t\t\t\t\tconsole.log(rdata);\r\n\t\t\t\t\t\tconsole.log(accesstoken);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdispatcher(loginActionCreator({\r\n\t\t\t\t\t\t\t\temail:email, \r\n\t\t\t\t\t\t\t\tpassword: password, \r\n\t\t\t\t\t\t\t\tauthtoken: accesstoken,\r\n\t\t\t\t\t\t\t\tisAuthenticated: true\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t}); \r\n\t\t\t\r\n\t\t} catch (err){\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className=\"cascadecontainer\">\r\n\t\t\t\t<div className=\"frame\"></div>\r\n\t\t\t\t<div className=\"frame\"></div>\r\n\t\t\t\t<div className=\"frame\"></div>\r\n\t\t\t</div>\t\r\n\t\t<div className=\"loginContainer\" >\r\n\r\n\t\t\t<div id=\"loginbox\" >\t\r\n\t\t\t\t<div id=\"logintitle\"> Log In </div>\r\n\t\t\t\t<div id=\"formbox\" >\r\n\r\n\t\t\t\t\t <form className='auth-form' onSubmit={e => onSubmit(e)}>\r\n\t\t\t<div className='auth__form__group'>\r\n\t\t\t\t<input \r\n\t\t\t\t\tclassName='log-input'\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tplaceholder='Email'\r\n\t\t\t\t\tname='email' \r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='auth-form'>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='log-input'\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\tminLength={6}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div id='signuplinkbox'>\r\n\t\t\t\tForgot your password?\r\n\t\t\t\t\t  <Link aria-current=\"page\" to=\"/signup\" style={{'marginLeft':'3px'}}>Sign Up</Link>\r\n\r\n\t\t\t</div>\r\n\t\t\t<button className='login-button'>Login</button>\r\n\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\t\r\n};\r\n\r\nexport default Login;","import { useState } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { logoutActionCreator } from '../../reducers/user_actions';\r\n\r\nimport \"./css/logout.css\"\r\nimport \"./css/logout_cascade.css\"\r\n\r\n\r\nconst Logout = () => {\r\n\r\n\t//react-redux functions\r\n\tconst dispatcher = useDispatch();\r\n\t//const user = useSelector((state: State) => state.user );\r\n\tconst [msg, setMsg] = useState(\"Click to Log Out\")\r\n\r\n\tconst logoutauth = () => {\t\r\n\t//authentication - move to separate file\r\n\t\tdispatcher(logoutActionCreator({}));\r\n\t\tsetMsg(\"You have been successfully logged out!\");\r\n\t}\r\n\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className=\"lo_cascadecontainer\">\r\n\t\t\t\t<div className=\"lo_frame\"></div>\r\n\t\t\t\t<div className=\"lo_frame\"></div>\r\n\t\t\t\t<div className=\"lo_frame\"></div>\r\n\t\t\t</div>\t\r\n\t\t<div className=\"logoutContainer\" >\r\n\r\n\t\t\t<div id=\"loginbox\" >\t\r\n\t\t\t\t<div id=\"logintitle\"> Log Out </div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t<div id=\"formbox\" >\r\n\t\t\t\t\t<button className=\"logout-button\" onClick={logoutauth}> Log out</button>\r\n\t\t\t\t\t \r\n\t\t\t\t</div>\r\n\t\t\t\t<div>{msg}</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\t\r\n};\r\n\r\nexport default Logout;","import { FormEvent, ChangeEvent, useState } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { loginActionCreator } from '../../reducers/user_actions';\r\nimport axios from 'axios';\r\nimport \"./css/signup.css\"\r\n\r\n\r\nconst SignUp = () => {\r\n\r\n\t//react-redux functions\r\n\tconst dispatcher = useDispatch();\r\n\t//const user = useSelector((state: State) => state.user );\r\n\t\r\n\t\r\n\tconst [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n\t\tname:'',\r\n\t\tre_password: '',\r\n\t\tisAuthenticated: false\r\n    });\r\n\t\r\n    const { email, name, password, re_password } = formData;\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\r\n\t};\r\n    \r\n\tconst onSubmit = (e: FormEvent<HTMLFormElement>):void => {\r\n        e.preventDefault();\r\n\t\tSignupauth();\r\n\r\n    };\r\n\t\r\n\tconst Signupauth = () => {\t\r\n\t//authentication - move to separate file\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t}\r\n\t\t};\r\n\t\tconst body = JSON.stringify({ email, name, password, re_password });\r\n\t\tconsole.log(body);\r\n\r\n\t\ttry {\r\n\t\t\taxios.post(`${process.env.REACT_APP_API_URL}/api/accounts/signup/`, body, config)\r\n\t\t\t\t\t.then(response=> {\r\n\t\t\t\t\t\tlet rdata:any = response.data\r\n\t\t\t\t\t\tlet accesstoken:string = rdata.access\r\n\t\t\t\t\t\tconsole.log(rdata);\r\n\t\t\t\t\t\tconsole.log(accesstoken);\r\n\t\t\t\t\t\tdispatcher(loginActionCreator({\r\n\t\t\t\t\t\t\t\temail:email, \r\n\t\t\t\t\t\t\t\tpassword: password, \r\n\t\t\t\t\t\t\t\tauthtoken: accesstoken,\r\n\t\t\t\t\t\t\t\tisAuthenticated: true\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t}); \r\n\t\t\t\r\n\t\t} catch (err){\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t<div className=\"signupContainer\" >\r\n\r\n\t\t\t<div id=\"signupbox\" >\t\r\n\t\t\t\t<div id=\"signuptitle\"> Sign Up! </div>\r\n\t\t\t\t<div id=\"formbox\" >\r\n\r\n\t\t\t\t\t <form className='auth-form' onSubmit={e => onSubmit(e)}>\r\n\t\t\t<div className='auth__form__group'>\r\n\t\t\t\t<input \r\n\t\t\t\t\tclassName='sign-input'\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tplaceholder='Email'\r\n\t\t\t\t\tname='email' \r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='auth-form'>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='sign-input'\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\tminLength={6}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='sign-input'\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tplaceholder='Retype Password'\r\n\t\t\t\t\tname='re_password'\r\n\t\t\t\t\tvalue={re_password}\r\n\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\tminLength={6}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<button className='signup-button'>Create User</button>\r\n\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\t\r\n};\r\n\r\nexport default SignUp;","function fragmentShaderPlus(){\r\n\treturn `\r\n\tprecision highp float;\r\n    uniform vec2 res;\r\n    uniform float aspect;\r\n\tuniform float testval;\r\n\t\r\n    float mandelbrot(vec2 c){\r\n      float alpha = 1.0;\r\n      vec2 z = vec2(0.0 , 0.0);\r\n      for(int i=0; i < 100; i++){  // i < max iterations\r\n        float x_sq = z.x*z.x;\r\n        float y_sq = z.y*z.y;\r\n        vec2 z_sq = vec2(x_sq - y_sq +.1, testval*z.x*z.y +.5);\r\n\r\n\t\tz = z_sq+ c;\r\n\t\t\r\n        if(x_sq + y_sq > 4.0){\r\n          alpha = float(i)/200.0;\r\n          break;\r\n        }\r\n      }\r\n      return alpha;\r\n    }\r\n  void main(){ // gl_FragCoord in [0,1]\r\n    vec2 uv = 4.0 * vec2(aspect, 1.0) * gl_FragCoord.xy / res - 2.0*vec2(aspect, 1.0);\r\n    float s = 1.0 - mandelbrot(uv);\r\n    vec3 coord = vec3(pow(s,.5), pow(s,.5), s);\r\n    gl_FragColor = vec4(pow(coord,vec3(.07, .2, .2)*(s+.1)*102.5)*.5+.5, 1);\r\n    }\r\n\t`\r\n  }\r\n\r\nexport default fragmentShaderPlus\r\n","import * as THREE from 'three';\r\nimport { useEffect } from 'react';\r\nimport {OrbitControls} from \"three/examples/js/controls/OrbitControls\"\r\n//import {OrbitControls} from \"./js/OrbitControls\"\r\nimport fragmentShaderPlus from './shaders/fragmentShaderPlus';\r\n//import fragshaderSimpleCircle from './shaders/fragshaderSimpleCircle';\r\n//import fragshaderFlagellum from './shaders/fragshaderFlagellum';\r\n//import fragmentKIFS from './shaders/fragmentKIFS';\r\n\r\n\r\nconst Threetest = () => {\r\n\tlet counter = 1;\r\n\tlet testval = 1;\t\r\n\tlet uniforms;\r\n\tlet w = 700;\r\n\tlet h = 700;\r\n\tlet mesh\r\n\tlet scene = new THREE.Scene();\r\n\tlet camera = new THREE.PerspectiveCamera( 75, w/h, 0.1, 1000 );\r\n\tlet renderer = new THREE.WebGLRenderer();\r\n\tlet controls = new THREE.OrbitControls(camera, renderer.domElement);\t\r\n\r\n\trenderer.setSize( w, h);\r\n\r\n\tconst drawfunc = () => {\r\n\r\n\t\tscene.remove(mesh)\r\n\t\tuniforms = {\r\n\t\t\tres: {type: 'vec2', value: new THREE.Vector2(window.innerWidth, window.innerHeight)},\r\n\t\t\taspect: {type: 'float', value: 1},\r\n\t\t\tzoom: {type:'float', value: .12},\r\n\t\t\ttestval: {type:'float',value: testval},\r\n\t\t\tpset1: {type:'vec3', value: new THREE.Vector3(1,-.1,-.7)},\r\n\t\t\tpset2: {type:'vec3', value: new THREE.Vector3(0,-1,-.6)},\r\n\t\t\tiTime: {type:'float',value: testval},\r\n\t\t  };\r\n\t\t  let geometry1 = new THREE.PlaneBufferGeometry(4, 4);\r\n\t\t  let material1 = new THREE.ShaderMaterial({\r\n\t\t\tuniforms: uniforms,\r\n\t\t\tvertexShader: vShader,\r\n\t\t\tfragmentShader: fragmentShaderPlus(),\r\n\t\t  });\r\n\t\t mesh = new THREE.Mesh(geometry1, material1) \r\n\t\t scene.add(mesh);\r\n\t  }\r\n\r\n\r\n\r\n\tconst mouseWheel = (e) => {\r\n\t\tlet delta = e.wheelDelta;\r\n\t\tdelta = delta / 240;\r\n\t\tdelta = -delta;\r\n\t\tif (delta <= 0) {\r\n\t\t\tdelta -= camera.position.z * 0.1;\r\n\t\t} else {\r\n\t\t\tdelta += camera.position.z * 0.1;\r\n\t\t}\r\n\t\tif (camera.position.z + delta > 1 && camera.position.z + delta < 200) {\r\n\t\t\tcamera.translateZ(delta);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tdocument.getElementById(\"canvas1\").appendChild(renderer.domElement);\r\n\t\t\r\n\t\tcamera.position.z = 2.5\r\n\r\n\t\t//iterative\r\n\t\tlet animate = function () {\r\n\t\t\t//counter += .01\r\n\t\t\ttestval = Math.sin(counter) * 1 + 2\r\n\t\t\tdrawfunc()\r\n\r\n\t\t\trequestAnimationFrame( animate );\r\n\t\t\trenderer.render( scene, camera );\r\n\t\t};\r\n\r\n\t\tanimate();\r\n\t  }, []);\r\n\r\n\r\n\t  return (\r\n\t\t<div id=\"canvas1\" style={{'height':'600px','width':'700px'}}>\r\n\t\t</div>\r\n\t  );\r\n\t}\r\n\r\nexport default Threetest\r\n\r\nconst vShader = `\r\n  varying vec2 v_uv;\r\n  void main() {\r\n     v_uv = uv;\r\n     gl_Position = projectionMatrix * modelViewMatrix *    vec4(position, 1.0);\r\n}`\r\n","import * as THREE from 'three';\r\nimport { useEffect } from 'react';\r\nimport {OrbitControls} from \"three/examples/js/controls/OrbitControls\"\r\n//import {OrbitControls} from \"./js/OrbitControls\"\r\n\r\nconst Threetest = () => {\r\n\t\r\n\tlet w = 700;\r\n\tlet h = 700;\r\n\tlet mesh\r\n\tlet scene = new THREE.Scene();\r\n\tlet camera = new THREE.PerspectiveCamera( 75, w/h, 0.1, 1000 );\r\n\r\n\tlet renderer = new THREE.WebGLRenderer();\r\n\t\r\n\tlet controls = new THREE.OrbitControls(camera, renderer.domElement);\t\r\n\r\n\trenderer.setSize( w, h);\r\n\r\n\tconst drawfunc = () => {\r\n\r\n\t\tscene.remove(mesh)\r\n\r\n\t\t\tlet geometry = new THREE.CubeGeometry(4, 4, 4);\r\n\t\t\tlet material = new THREE.MeshLambertMaterial({color: 0x126ea1})\r\n\t\t\tmesh = new THREE.Mesh(geometry, material) \r\n\r\n\t\t scene.add(mesh);\r\n\t  }\r\n\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tdocument.getElementById(\"canvas1\").appendChild(renderer.domElement);\r\n\t\t\r\n\t\tcamera.position.z = 10\r\n\t\tlet pointlight = new THREE.PointLight(0xffffff);\r\n\t\tpointlight.position.set(-4,4,2)\r\n\t\tscene.add(pointlight)\r\n\r\n\t\tlet ambientlight = new THREE.AmbientLight(0xf1f1f1);\r\n\t\tscene.add(ambientlight)\r\n\r\n\t\tdrawfunc();\r\n\t\t\r\n\t\t//iterative\r\n\t\tlet animate = function () {\r\n\t\t\tmesh.rotation.y += .02\r\n\r\n\t\t\trequestAnimationFrame( animate );\r\n\t\t\trenderer.render( scene, camera );\r\n\t\t};\r\n\r\n\t\tanimate();\r\n\t  }, []);\r\n\r\n\r\n\t  return (\r\n\t\t<div id=\"canvas1\" style={{'height':'600px','width':'700px'}}>\r\n\t\t</div>\r\n\t  );\r\n}\r\n\r\nexport default Threetest;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {Employee, Emp_State, EmpModel} from \"../type\";\r\nimport 'dayjs'\r\n\r\n\r\nconst EmpStateInit: Emp_State[] = [{\r\n\tEmpID: '',\r\n\tName: '',\r\n\tModelKey: '',\r\n\tDate: '',\r\n\tJobCode: '',\r\n\tSalary: 0,\r\n\tDeptID: '',\r\n\tLocation: '',\r\n\tServiceLine: '',\r\n\tEmbedding1: 0,\r\n\tEmbedding2: 0,\r\n\tStatus:''\r\n}]\r\n\r\n\r\nconst EmpInit: Employee[] = [{\r\n\tEmpID: '',\r\n\tName: '',\r\n\tCreateDate: '',\r\n\tEmailAddress: '',\r\n\tstate: EmpStateInit,\r\n}]\r\n\r\nconst EmpModelInit: EmpModel[] = [{\r\n\tModelName:'',\r\n\tCreateDate: new Date(),\r\n}]\r\n\r\n//model name list\r\nexport const empModelSlice = createSlice({\r\n\tname: 'empmodel_action',\r\n\tinitialState: EmpModelInit,\r\n\treducers: {\r\n\t\tempmodel: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<EmpModel>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({ModelName, CreateDate}: EmpModel) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tModelName: ModelName,\r\n\t\t\t\t\tCreateDate: CreateDate,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tempmodel_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//employee\r\nexport const employeestateDataSlice = createSlice({\r\n\tname: 'empstatedata_action',\r\n\tinitialState: EmpStateInit,\r\n\treducers: {\r\n\t\tempstatedata: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<Emp_State>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({EmpID, Name, ModelKey, Date, JobCode, Salary, DeptID, Location, ServiceLine, Embedding1, Embedding2, Status }: Emp_State) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tEmpID: EmpID,\r\n\t\t\t\t\tName: Name,\r\n\t\t\t\t\tModelKey: ModelKey,\r\n\t\t\t\t\tDate: Date,\r\n\t\t\t\t\tJobCode: JobCode,\r\n\t\t\t\t\tSalary: Salary,\r\n\t\t\t\t\tDeptID: DeptID,\r\n\t\t\t\t\tLocation: Location,\r\n\t\t\t\t\tServiceLine: ServiceLine,\r\n\t\t\t\t\tEmbedding1: Embedding1,\r\n\t\t\t\t\tEmbedding2: Embedding2,\r\n\t\t\t\t\tStatus: Status\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\temployeestate_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\nexport const employeeDataSlice = createSlice({\r\n\tname: 'empdata_action',\r\n\tinitialState: EmpInit,\r\n\treducers: {\r\n\t\tempdata: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<Employee>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({EmpID, Name, CreateDate, EmailAddress, state}: Employee) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tEmpID: EmpID,\r\n\t\t\t\t\tName: Name,\r\n\t\t\t\t\tCreateDate: CreateDate,\r\n\t\t\t\t\tEmailAddress: EmailAddress,\r\n\t\t\t\t\tstate: state\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\temployee_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n\r\n//emp state\r\nexport const {\r\n\tempstatedata: empstateDataActionCreator,\r\n\temployeestate_delete: empstatedeleteActionCreator,\r\n} = employeestateDataSlice.actions;\r\n\r\n\r\n//emp\r\nexport const {\r\n\tempdata: empDataActionCreator,\r\n\temployee_delete: empdeleteActionCreator,\r\n} = employeeDataSlice.actions;\r\n\r\n\r\n//emp model\r\nexport const {\r\n\tempmodel: empModelActionCreator,\r\n\tempmodel_delete: empModelDeleteActionCreator,\r\n} = empModelSlice.actions;","//sorts descending\r\nfunction EmpSort(Arry,val,asc_desc=\"Ascending\"){\r\n   let aa = [...Arry]\r\n    if (aa.length > 0){\r\n\t\taa.sort((a, b) => {\r\n            let da = new Date(a[val]),\r\n                db = new Date(b[val]);\r\n\r\n            if (asc_desc===\"Descending\"){\r\n                return (db - da);\r\n            } else {\r\n                return(da - db);\r\n            }\r\n            \r\n\t\t});\r\n        return(aa)\r\n    } else{\r\n        return(Arry)\r\n    }\r\n}\r\n\r\nexport default EmpSort;","import axios from 'axios';\r\nimport {empModelActionCreator, empModelDeleteActionCreator} from '../../reducers/employee_actions';\r\nimport {EmpModel} from '../../type'\r\n\r\n\r\nconst EmpModelImport = (configheaders: any, dispatcher: any) => {\r\n\r\n\t\taxios.get<any[]>(`${process.env.REACT_APP_API_URL}/api/employee/empmodel`, configheaders)\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log(res.data)\r\n\r\n\t\t\t\tdispatcher(empModelDeleteActionCreator({}))\r\n\r\n\t\t\t\tconst dataset: EmpModel[] = res.data\r\n\t\t\t\tif (dataset.length>0){\r\n\t\t\t\t\tdataset.forEach(dset => {\r\n\t\t\t\t\t\tdispatcher(empModelActionCreator(dset))\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log('data error')\r\n\t\t\t});\r\n\r\n};\r\n\r\nexport default EmpModelImport;","import axios from 'axios';\r\nimport {useDispatch} from 'react-redux';\r\n//import {User} from \"../../type\"\r\nimport {empDataActionCreator, empdeleteActionCreator, empstatedeleteActionCreator} from '../../reducers/employee_actions';\r\nimport {Employee, Emp_State} from '../../type'\r\nimport DateSort from '../../functions/DateSort.js'\r\nimport EmpModelImport from './EmpModel_Import';\r\n\r\n\r\nconst Employee_Import = (props: any) => {\r\n\r\n\tlet {configheaders} = props;\r\n\tconst dispatcher = useDispatch();\r\n\r\n\tconst importdata = () => {\r\n\t\t\r\n\t\t//1\r\n\t\taxios.get<any[]>(`${process.env.REACT_APP_API_URL}/api/employee/data`, configheaders)\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log(res.data)\r\n\t\t\t\t\r\n\t\t\t\tdispatcher(empstatedeleteActionCreator({}))\r\n\t\t\t\tdispatcher(empdeleteActionCreator({}))\r\n\r\n\t\t\t\tconst dataset: Employee[] = res.data\r\n\t\t\t\tif (dataset.length>0){\r\n\t\t\t\t\tdataset.forEach(dset => {\r\n\r\n\t\t\t\t\t\tconst dsetstate: Emp_State[] = dset.state\r\n\t\t\t\t\t\tlet dsetstate_sorted: any[] = DateSort(dsetstate)\r\n\r\n\t\t\t\t\t\tdset.state = dsetstate_sorted //return sorted set to Employee model\r\n\t\t\t\t\t\tdispatcher(empDataActionCreator(dset))\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log('data error')\r\n\t\t\t});\r\n\r\n\t\t\tEmpModelImport(configheaders,dispatcher)\r\n\r\n\t}\r\n\t\t\t\r\n\treturn(\t   \r\n\t\t<button className=\"empsubmitbtn\" onClick={importdata} >Import</button>\r\n\t   )\r\n};\r\nexport default Employee_Import;","import axios from \"axios\";\r\n\r\nconst AxiosUpload = (dataArray: any, path: string, config: any, elem: HTMLElement|null) => {\r\n\r\n    //post\r\n    axios.post(`${process.env.REACT_APP_API_URL}/${path}`, \r\n                dataArray,\r\n                config\r\n            )\r\n    .then(res => {\r\n        console.log('posted data (or did I)')\r\n        if (elem){elem.innerHTML = \"Uploaded Successfully!\"}\r\n    })\r\n    .catch(err => {\r\n        console.log('data error');\r\n        if (elem){elem.innerHTML = \"There was an error.\"}\r\n    })\t\r\n\r\n};\r\nexport default AxiosUpload;","import { FormEvent } from 'react';\r\nimport AxiosUpload from '../AxiosUpload';\r\n\r\n\r\nconst Employee_Upload = (event:FormEvent<HTMLFormElement>, modelname:string, empFile:any, \r\n                            repType:string, config:any, elementstring:string) => {\r\n\r\n\t\tevent.preventDefault()\r\n\r\n\t\tlet dataArray = new FormData();\r\n\t\tdataArray.append(\"modelname\",modelname);\r\n\t\tdataArray.append(\"empFile\",empFile);\r\n\t\tdataArray.append(\"repType\",repType);\r\n\r\n\t\tlet elem = document.getElementById(elementstring)\r\n\t\tif(elem){elem.innerHTML = \"Uploading...\"}\r\n\r\n\t\tconsole.log('clicked data upload')\r\n\t\t\r\n\t\t//axios call\r\n       AxiosUpload(dataArray,\"api/employee/datapost\",config,elem)\r\n\t\t\r\n};\r\nexport default Employee_Upload;","import { useSelector } from \"react-redux\";\r\nimport \"./css/FieldsDiv.css\"\r\nimport { FieldMap } from \"../../../../type\";\r\nimport {useState } from 'react';\r\nimport {Modal} from 'react-bootstrap';\r\n\r\nconst FieldsDiv = (props:any) => {\r\n\r\n    let fieldData = useSelector((state:any) => state.fieldmapping)\r\n\r\n    let [isModalVisible,setIsModalVisible] = useState(false);\r\n    const clickedopen = () => { isModalVisible ? setIsModalVisible(false) :setIsModalVisible(true) };    \r\n\r\n    const FieldsModal = () => {\r\n     return(\r\n            <div className=\"fieldsdiv\" >\r\n                <div id=\"fieldmodalheader\">Field: Fieldname, Column Name</div>\r\n                {\r\n                    fieldData.map((fld:FieldMap,i:number) => {\r\n                        \r\n                        return(\r\n                            <div key={i} id={fld['Key']}>\r\n                                {fld['FieldName']} = {fld['HeaderName']}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n           )\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <button onClick={clickedopen} style={{margin:'10px'}}> \r\n                Check Column names for Import                 \r\n                <Modal show={isModalVisible} >\r\n                    <FieldsModal />\r\n                </Modal>\r\n                \r\n            </button>\r\n       </div>\r\n\r\n    )\r\n\r\n};\r\nexport default FieldsDiv","import { useSelector } from 'react-redux';\r\nimport {User} from '../type';\r\n\r\nconst GetAuthConfigHeaders = () => {\r\n\r\n    const userstate:User = useSelector((state:any) => state.user);\r\n    const configheaders = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + userstate.authtoken\r\n        }\r\n    };\r\n\r\n    return(configheaders)\r\n};\r\nexport default GetAuthConfigHeaders;","import { useSelector } from \"react-redux\";\r\nimport { EmpModel } from \"../../type\";\r\n\r\n\r\nconst EmpModelDropdown = (change: any) => {\r\n\r\n    const Models:EmpModel[] = useSelector((state: any) => state.empmodel);\r\n    let Items:string[] = [];\r\n\r\n        return(\r\n            <select id=\"dropdown_models\" onChange={change.change} >\t\t\r\n                <option key='1'  >\r\n                    Select Item Name\r\n                </option>\r\n                {\r\n                    Models.map((d,i) => {\r\n                    if (Items.indexOf(d.ModelName)=== -1){\r\n                        Items.push(d.ModelName);\r\n                                \r\n                        return(\r\n                            <option key={\"m\"+i}  value={d.ModelName}>\r\n                                {d.ModelName}\r\n                            </option>\r\n                        )\r\n                    }\r\n                    })\r\n                }\r\n            </select>\t\r\n        )\t\r\n\r\n};\r\nexport default EmpModelDropdown;","import axios from 'axios';\r\n\r\nconst EmpModelDelete = (modelname: string, configheaders: any, elementstring:HTMLElement) => {\r\n\r\n    let dataArray = new FormData();\r\n    dataArray.append('modelname',modelname);\r\n\r\n    axios.post(`${process.env.REACT_APP_API_URL}/api/employee/empmodeldelete`, \r\n        dataArray,\r\n        configheaders\r\n    )\r\n    .then(res => {\r\n        console.log(res)\r\n        console.log('deleted')\r\n        elementstring.innerHTML = \"Deleted \" + modelname + \" Successfully!\"\r\n    })\r\n    .catch(err => {\r\n    console.log('data deletion error');\r\n        elementstring.innerHTML = \"There was an error.\"\r\n    })\r\n\r\n};\r\n\r\nexport default EmpModelDelete;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {FieldMap, FieldVal} from \"../type\";\r\n\r\n\r\nconst FieldInit: FieldMap[] = [{\r\n\tKey:'',\r\n\tModelName: '',\r\n\tAttrName:'',\r\n\tFieldName: '',\r\n\tHeaderName: '',\r\n\tDataType: '',\r\n}]\r\n\r\nconst FieldValues: FieldVal[] = [{\r\n\tFieldAttr:'',\r\n\tValue: '',\r\n\tFieldNum: 0\r\n}]\r\n\r\nexport const fieldmapSlice = createSlice({\r\n\tname: 'fieldnames_action',\r\n\tinitialState: FieldInit,\r\n\treducers: {\r\n\t\tfielddata: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<FieldMap>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({Key, ModelName, AttrName, FieldName, HeaderName, DataType}: FieldMap) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tKey: Key,\r\n\t\t\t\t\tModelName: ModelName,\r\n\t\t\t\t\tAttrName: AttrName,\r\n\t\t\t\t\tFieldName: FieldName,\r\n\t\t\t\t\tHeaderName: HeaderName,\r\n\t\t\t\t\tDataType: DataType,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tfield_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\nexport const fieldvalSlice = createSlice({\r\n\tname: 'fieldvaldata_action',\r\n\tinitialState: FieldValues,\r\n\treducers: {\r\n\t\tfieldvaldata: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<FieldVal>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({FieldAttr, Value, FieldNum }: FieldVal) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tFieldAttr: FieldAttr,\r\n\t\t\t\t\tValue: Value,\r\n\t\t\t\t\tFieldNum: FieldNum\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tfieldval_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\nexport const {\r\n\tfielddata: fieldDataActionCreator,\r\n\tfield_delete: fielddeleteActionCreator,\r\n} = fieldmapSlice.actions;\r\n\r\nexport const {\r\n\tfieldvaldata: fieldValActionCreator,\r\n\tfieldval_delete: fieldValdeleteActionCreator,\r\n} = fieldvalSlice.actions;\r\n","import axios from \"axios\";\r\nimport { fielddeleteActionCreator, fieldDataActionCreator } from \"../../reducers/field_actions\";\r\nimport { FieldMap } from \"../../type\";\r\n\r\n\r\n\r\nconst FieldsImport = (modelcategory:string, config:any, dispatcher:any) => {\r\n    let flddata:any[] =[]\r\n\r\n    axios.post<any[]>(`${process.env.REACT_APP_API_URL}/api/fields/fieldretrieve`,{modelcategory}, config)\r\n        .then(res => {\r\n            flddata = res.data\r\n            dispatcher(fielddeleteActionCreator({}))\r\n            flddata.forEach((fld:FieldMap) => {\r\n                dispatcher(fieldDataActionCreator(fld))\r\n            })\r\n        })  \r\n\r\n    return(flddata)\r\n};\r\nexport default FieldsImport","import {useDispatch} from 'react-redux';\r\nimport EmployeeImport from \"../../../data/Employee/Employee_Import\";\r\nimport EmployeeUpload from \"../../../data/Employee/Employee_Upload\";\r\nimport \"./css/EmployeeDataSetup.css\";\r\nimport FieldsDiv from '../fields/subfunctions/FieldsDiv';\r\nimport { useEffect, useState, ChangeEvent } from 'react';\r\nimport { empdeleteActionCreator, empstatedeleteActionCreator } from '../../../reducers/employee_actions';\r\nimport GetAuthConfigHeaders from '../../../functions/GetAuthConfigHeaders';\r\nimport EmpModelDropdown from '../../../data/Employee/EmpModel_Dropdown';\r\nimport EmpModelDelete from '../../../data/Employee/EmpModel_Delete';\r\nimport FieldsImport from '../../../data/Fields/Fields_Import';\r\n\r\nconst EmployeeDataSetup = () => {\r\n\r\n\tconst [empFile, setEmpFile] = useState<any>();\r\n\tconst [repType, setrepType] = useState('demographic');\r\n\t\r\n    let config = GetAuthConfigHeaders();\r\n\r\n    const [modelname, setModelname] = useState<string>(\"\")\r\n    //const [modelcatgory, setModelCategory] = useState<string>(\"\")\r\n    \r\n    let dispatcher = useDispatch()\r\n\r\n    useEffect(() => {\r\n        FieldsImport(\"EmployeeState\",config,dispatcher)\r\n    })\r\n\r\n    const ChangeModel = (e:ChangeEvent<HTMLSelectElement>) => {\r\n        let val:string = e.target.selectedOptions[0].value\r\n        setModelname(val)\r\n    }\r\n\r\n    const RemoveAction = () => {\r\n        dispatcher(empdeleteActionCreator({}))\r\n        dispatcher(empstatedeleteActionCreator({}))\r\n    }\r\n\r\n    const DeleteModel = () => {\r\n        let elem:HTMLElement|null = document.getElementById(\"empmodeldelete_div\")\r\n        if (elem){EmpModelDelete(modelname, config,elem)}\r\n    }\r\n\r\n    const ReportTypeSel = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        setrepType(e.target.value)\r\n    }\r\n    \r\n    const ApplyFile = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files){\r\n            setEmpFile(e.target.files[0])  \r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n            <div id=\"importfull\">\r\n                <div id=\"empimportHeader\"> Upload or Import Existing Dataset </div>                \r\n                <div id=\"empimportContainer\">\r\n                    <div className=\"empimportelem\">\r\n                    \r\n                        <form onSubmit={e=>EmployeeUpload(e,modelname, empFile, repType, config,\"uploadempsuccess\")} style={{'marginTop':'20px', 'textAlign':'left'}}>\r\n                            <input type=\"file\" className=\"empfilebtn\" name=\"reviewFile\" onChange={(e:ChangeEvent<HTMLInputElement>) => ApplyFile(e)}/>\r\n                            <select id=\"reporttypesel\" onChange={(e:ChangeEvent<HTMLSelectElement>) => ReportTypeSel(e)}>\r\n                                <option key=\"demographic\">Demographic</option>\r\n                                <option key=\"1hire\">Hires</option>\r\n                                <option key=\"2termination\">Terminations</option>\r\n                                <option key=\"3transfer\">Transfer</option>\r\n                            </select>\r\n                            <div > Model name:  </div>\r\n                            <input type=\"text\" name=\"modelname\" onChange={e => setModelname(e.target.value)}/>\r\n                            <button className=\"empsubmitbtn\" type=\"submit\" >Upload Data</button>\r\n                            <div id=\"uploadempsuccess\"> </div>\r\n                        </form>\t\r\n\r\n                        <div className=\"empheader\"> Save Data to DB </div>\r\n                        <FieldsDiv />\r\n                    </div> \r\n\r\n                    <div className=\"empimportelem\">\r\n                        <div className=\"empheader\"> Import Employee Data </div>\r\n\r\n                        <EmployeeImport configheaders={config} />\r\n\r\n                        <div> Current Dataset: </div>\r\n                        <div >\r\n                            <button onClick={RemoveAction}> Remove Imported Data </button>\r\n                            <EmpModelDropdown change={(e:ChangeEvent<HTMLSelectElement>) => ChangeModel(e)}/>\r\n                            <button onClick={DeleteModel}> Delete Model Data </button>\r\n                            <div id=\"empmodeldelete_div\"></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n    )\r\n};\r\nexport default EmployeeDataSetup;","import { useSelector } from 'react-redux';\r\nimport { Employee } from '../../type';\r\nconst Employee_Dropdown = (change: any) => {\r\n\t\r\n\tconst Employees:Employee[] = useSelector((state: any) => state.employee);\r\n\tlet Items:any = [];\r\n\r\n\treturn(\r\n\t\t<select id=\"dropdown_models\" onChange={change.change} >\t\t\r\n\t\t\t<option key='1'  >\r\n\t\t\t\tSelect Item Name\r\n\t\t\t</option>\r\n\t\t\t{\r\n\t\t\t\tEmployees.map((d,i) => {\r\n\t\t\t\tif (Items.indexOf(d.EmpID)=== -1){\r\n\t\t\t\t\tItems.push(d.EmpID);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<option key={\"r\"+i}  value={i}>\r\n\t\t\t\t\t\t\t{d.Name}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</select>\t\r\n\t)\t\t\t\r\n};\r\nexport default Employee_Dropdown;","\r\nfunction CompareObjects(obj1, obj2){\r\n    //key name, value1, value2, difference (numeric only)\r\n    let mismatches = []\r\n    Object.entries(obj1).forEach(([key,value]) => {\r\n        if(key!==\"id\"){\r\n            if (obj1[key] !== obj2[key]){\r\n                if (typeof(obj1[key])===\"number\"){\r\n                    mismatches.push([key, obj1[key], obj2[key],obj1[key] - obj2[key]])\r\n                } else{\r\n                    mismatches.push([key, obj1[key], obj2[key]])\r\n                }\r\n\r\n            }\r\n        }\r\n    })\r\n    return(mismatches)\r\n};\r\n\r\nexport default CompareObjects;\r\n","import { Emp_State } from \"../../../../type\";\r\nimport CompareObjects from \"../../../../functions/CompareObjects\";\r\n\r\n\r\nconst EmpStateDetail = (props:any) => {\r\n\r\n    let prevState:Emp_State = props.prevState;\r\n    let currState:Emp_State = props.currState;\r\n    let entryno: number = props.entryno;\r\n\r\n    const CurrentCard = () => {\r\n\r\n        return(\r\n            <div id=\"cardmain\"> \r\n                <div id=\"cardheader\" > Entry No {entryno}</div>\r\n                    <div className=\"cardtext\">  \r\n                        Date Entered: {currState.Date}\r\n                    </div>\r\n                    <div className=\"cardtext\">  \r\n                        Job Code: {currState.JobCode}\r\n                    </div>\r\n                    <div className=\"cardtext\">  \r\n                        Location: {currState.Location}\r\n                    </div>\r\n                    <div className=\"cardtext\">  \r\n                        Department ID: {currState.DeptID}\r\n                    </div>\r\n                    <div className=\"cardtext\">  \r\n                        Salary: {currState.Salary}\r\n                    </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const PreviousCard = () => {\r\n        if (prevState){\r\n            let differences = CompareObjects(prevState, currState)\r\n            return(\r\n                <div id=\"cardsecondary\">\r\n                    Differences:\r\n                    {differences.map((key:any, i:number) => {\r\n                        return(\r\n                        <div key={i} className=\"3433\">\r\n                            {key[0]}: {key[1]} {\"->\"} {key[2]}\r\n                        </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        } else {\r\n            return(<div></div>)\r\n        }\r\n    };\r\n    return(\r\n        <div >\r\n            <CurrentCard />\r\n            <PreviousCard />\r\n        </div>\r\n    )\r\n};\r\nexport default EmpStateDetail;","import { MouseEvent } from \"react\";\r\nimport { Emp_State } from \"../../../../type\";\r\nimport \"./css/EmployeeCard.css\"\r\nimport { useState } from \"react\";\r\nimport EmployeeStateDetail from \"./EmployeeStateDetail\";\r\n\r\nconst EmployeeCard = (props:any) => {\r\n    \r\n    let empl = props.props;\r\n    let currEmp = props.currID;\r\n    let currState:Emp_State;\r\n    let prevState:Emp_State;\r\n\r\n    const [selID,setselID] = useState(0);\r\n    const [lastEmp, setlastEmp] = useState(0);\r\n\r\n    //const currFormat = new Intl.NumberFormat('en-us',{style:'currency',currency:'USD'})\r\n\r\n    const Overall = () => {\r\n        let entryno = 1;\r\n        if (empl.state.length > 0){\r\n            //force using the first entry for a newly selected employee, so selID doesn't carry over\r\n            if (currEmp!==lastEmp){ \r\n                currState = empl.state[0]\r\n                empl.state.length === 1 ? prevState = empl.state[1] : prevState = empl.state[0]          \r\n            } else {\r\n                entryno = selID+1;\r\n                currState = empl.state[selID]\r\n                selID < empl.state.length - 1 ? prevState = empl.state[selID+1] : prevState = empl.state[selID]\r\n            }\r\n            return(\r\n                <div id=\"cardGrid\"> \r\n                    <EntryList />\r\n                    <EmployeeStateDetail currState={currState} prevState={prevState} entryno={entryno}/>\r\n                </div>\r\n            ) \r\n        } else {\r\n            return(<div></div>)\r\n        }\r\n    };\r\n\r\n    const EntryList = () => {\r\n        return(\r\n        <div className=\"ddownCard\"> \r\n            <div id='ddownHeader'>Timeline:</div>\r\n            <div className=\"ddownMain\">\r\n            {empl.state.map((st:Emp_State,i:number) => {\r\n                return(\r\n                    <div \r\n                            key={i} \r\n                            id={String(i)} \r\n                            className=\"datepoint\" \r\n                            onClick={(e:MouseEvent<HTMLElement>)=>Changecard(e)}\r\n                    >\r\n                        {st.Date}\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n        </div>\r\n        )\r\n    };\r\n\r\n    const Changecard = (e:MouseEvent<HTMLElement>) => {\r\n        let intgr = +e.currentTarget.id\r\n        setselID(intgr)\r\n        setlastEmp(currEmp)\r\n    };\r\n\r\n    return(\r\n        <div id=\"empboxMain\" > \r\n            <div id=\"empboxtitle\" style={{\"color\": \"white\"}}> {selID} Employee: {empl.Name} (id: {empl.EmpID}) </div>    \r\n            <Overall />\r\n            <i className=\"arrow down\"></i>\r\n           \r\n        </div>\r\n    )\r\n};\r\nexport default EmployeeCard","\r\nconst EmployeeFilter = (change: any) => {\r\n\r\n    let Fields = ['Location','Department']\r\n\r\n\treturn(\r\n\t\t<select id=\"dropdown_filter\" onChange={change.change}>\t\t\r\n\t\t\t<option key='1'  >\r\n\t\t\t\tFields\r\n\t\t\t</option>\r\n\t\t\t{\r\n\t\t\t\tFields.map((d,i) => {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<option key={\"r\"+i}  value={d}>\r\n\t\t\t\t\t\t\t{d}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</select>\r\n    )\r\n};\r\n\r\nexport default EmployeeFilter;","function CompareObjects_SingleField(obj1, obj2, fieldName){\r\n\r\n    if (obj1[fieldName]!==obj2[fieldName]){\r\n        return([obj1[fieldName],obj2[fieldName]])\r\n    } else {\r\n        return([])\r\n    }\r\n\r\n};\r\nexport default CompareObjects_SingleField;\r\n","function ReturnValfromType(obj,fieldName){\r\n\r\n    return(obj[fieldName])\r\n};\r\n\r\nexport default ReturnValfromType;","import { Employee, Emp_State } from \"../../../../type\";\r\nimport CompareObjects_SingleField from \"../../../../functions/CompareObjects_SingleField\";\r\nimport ReturnValfromType from \"../../../../functions/ReturnValfromType\";\r\nimport \"./css/EmpFieldTrend.css\"\r\n\r\nconst EmpFieldTrend = (props:any) => {\r\n    \r\n    let empl: Employee = props.empl\r\n    let field: string = props.field;\r\n    let visible: boolean = props.visible;\r\n\r\n    const CheckTrend = () => {\r\n        let series1:any = [];\r\n        let series2:any = [];    \r\n\r\n        if (empl.state.length > 0){\r\n            empl.state.forEach((st:Emp_State,i:number) =>{\r\n\r\n                if (i!==0){\r\n                    let val = CompareObjects_SingleField(st,empl.state[i-1],field)\r\n                    if (val.length > 0){ \r\n                        series1.push([val[1], empl.state[i-1].Date])\r\n                        series2.push([val[0], st.Date])\r\n                    }\r\n                }\r\n            });\r\n            if (series2.length > 0){\r\n                series1.push(series2[series1.length - 1]);\r\n            } else {\r\n                series1.push([ReturnValfromType(empl.state[0],field),empl.state[0].Date])\r\n            }\r\n\r\n            return(\r\n                    <div>\r\n                        Date History: Beginning... \r\n                        <div id=\"empfield_subbox\"> \r\n                            {series1.map((s:any[],i:number) => {\r\n                                return(\r\n                                    <div key={i+'a'} className=\"fieldsub\">\r\n                                        <div> {s[0]} </div> \r\n                                        <div> {s[1]} </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n            )\r\n        } else {\r\n            return(<div></div>)\r\n        }\r\n    };\r\n\r\n\r\n    if (visible && field!==\"Fields\"){\r\n        return(\r\n            <div id=\"empfieldbox\">\r\n               <div style={{'fontSize':'18px'}}> Field:   {field}</div> \r\n               <CheckTrend />\r\n            </div>\r\n        )\r\n    } else {\r\n        return(<div></div>)\r\n    }\r\n};\r\nexport default EmpFieldTrend;","export default __webpack_public_path__ + \"static/media/CityHorizon.90f4c261.jpeg\";","import {useState, ChangeEvent, MouseEvent} from 'react';\nimport {useSelector} from 'react-redux';\nimport EmployeeDropdown from \"../../../data/Employee/Employee_Dropdown\";\nimport { Employee } from \"../../../type\";\nimport \"./css/SingleEmployeePage.css\";\nimport EmployeeCard from './subfunctions/EmployeeCard';\nimport EmployeeFilter from './subfunctions/EmployeeFilter';\nimport EmpFieldTrend from './subfunctions/EmpFieldTrend';\nimport CityHorizon from \"./../../../images/CityHorizon.jpeg\";\n\nconst SingleEmployeePage = () => {\n    const EmpInit: Employee = {\n        EmpID: '',\n        Name: '',\n        CreateDate: '',\n        EmailAddress: '',\n        state: [],\n    }\n    \n    const Empl: Employee[] = useSelector((state:any) => state.employee);\n    const [empSelect, setEmpSelect] = useState(EmpInit)\n    const [fieldFocus, setFieldFocus] = useState(false)\n    const [selectedField, setSelectedField] = useState(\"\")\n\n    const EmpSelect = (e:ChangeEvent<HTMLSelectElement>) => {\n        let intgr = +e.target.selectedOptions[0].attributes[0].value\n        setEmpSelect(Empl[intgr])\n        console.log(Empl[intgr])\n    }; \n\n    const FieldSelect = (e:ChangeEvent<HTMLSelectElement>) => {\n\t\tif (e.target.selectedOptions[0].attributes.length>0){\n\t\t\tlet fld:string = e.target.selectedOptions[0].attributes[0].value\n\t\t\tsetSelectedField(fld)\n\t\t}\n    }; \n\n    const ClickedRadio = (event:MouseEvent<HTMLDivElement>, div_id:string) => {\n        let simuldiv:HTMLElement | null = document.getElementById(div_id)\n        if (event.currentTarget.style.background===\"white\"){ \n            //turn off\n            if (event.currentTarget.id===\"radio_field_sub\"){\n                setFieldFocus(false)\n            }\n            event.currentTarget.style.background = \"black\"\n            if (simuldiv) {simuldiv.style.backgroundColor = \"#999999\" }\n        } else {\n            //turn on\n            if (event.currentTarget.id===\"radio_field_sub\"){\n                setFieldFocus(true)\n            }\n            event.currentTarget.style.background = \"white\"\n            if (simuldiv) {simuldiv.style.backgroundColor = \"white\" }\n        }  \n    }\n\n    return (\n       <div id=\"empdatacontainer1\">\n\t\t<div id=\"empimportbar\">\n               <div id=\"empimportbar_header\">Data Options</div> \n                <div id=\"empimportbar_container\">\n                    \n                    <div id=\"empselector\" className=\"empimportelem\" style={{backgroundColor:\"#f9f9f9\"}}>\n                        <div className=\"empheader\" > \n                        <div style={{'fontSize':'16px','textAlign':'left'}}> Imported Data: </div>\n                            <div style={{'marginTop':\"6px\"}}>Employee Select</div>\n                            <EmployeeDropdown change={(e:ChangeEvent<HTMLSelectElement>) => EmpSelect(e)} />\n                        </div>\t  \n                    </div> \n                    \n                    <div id=\"fieldselector\" className=\"empimportelem\">\n                        <div> Field Focus </div> \n                        <EmployeeFilter change={(e:ChangeEvent<HTMLSelectElement>) => FieldSelect(e)}/>\n                    </div>\n                       \n                            <div className=\"borderplus\" id=\"radio_field\">\n                                <div id=\"radio_field_sub\" className=\"empradiobtn\" \n                                        onClick={(e)=>ClickedRadio(e,\"fieldselector\")}>\n                                </div>\n                            </div>\n                        \n                            <div className=\"borderplus\" id=\"radio_field2\">\n                                <div id=\"radio_field_sub2\" className=\"empradiobtn\" \n                                        onClick={(e)=>ClickedRadio(e,\"\")}>\n                                </div>\n                            </div>\n                </div>\n        </div>\n\n        <div className=\"empSpace\" style={{\n                    backgroundImage: `url(${CityHorizon})`, \n                    'filter':'grayscale(30%)',\n                    backgroundSize: '100%'   \n                }}>\n            <EmployeeCard props={empSelect} currID={empSelect.EmpID} />\n            <EmpFieldTrend empl={empSelect}  field={selectedField} visible={fieldFocus}/>\n        </div>\n           \n\t   </div>\n    );\n};\n\n\nexport default SingleEmployeePage;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {JobTitle, DescGram, RelatedDesc} from \"../type\";\r\nimport 'dayjs'\r\n\r\n\r\nconst JobTitleInit: JobTitle[] = [{\r\n\tJobCode: '',\r\n    JobTitle: '',\r\n    Description: '',\r\n    grams: [],\r\n}]\r\n\r\nconst DescGramInit: DescGram[] = [{\r\n\tGramKey: '',\r\n\tGramIndicator: '',\r\n    Text: '',\r\n    Category: '',\r\n\tTopicNum: 0,\r\n\tEmbedding1: 0,\r\n    Embedding2: 0,\r\n    Embedding3: 0,\r\n\tpairs: [],\r\n}]\r\n\r\nconst RelatedDescInit: RelatedDesc[] = [{\r\n    GramPrimary: '',\r\n    GramRelated: '',\r\n}]\r\n\r\n//related grams\r\nexport const relatedSlice = createSlice({\r\n\tname: 'relatedgram_action',\r\n\tinitialState: RelatedDescInit,\r\n\treducers: {\r\n\t\trelatedgramdata: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<RelatedDesc>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({GramPrimary, GramRelated,  }: RelatedDesc) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tGramPrimary: GramPrimary,\r\n\t\t\t\t\tGramRelated: GramRelated,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\trelatedgram_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//desc gram\r\nexport const descgramDataSlice = createSlice({\r\n\tname: 'descgramdata_action',\r\n\tinitialState: DescGramInit,\r\n\treducers: {\r\n\t\tdescgramdata: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<DescGram>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({GramKey, GramIndicator, Text, Category, TopicNum, Embedding1, Embedding2, Embedding3, pairs }: DescGram) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tGramKey: GramKey,\r\n\t\t\t\t\tGramIndicator: GramIndicator,\r\n\t\t\t\t\tText: Text,\r\n\t\t\t\t\tCategory: Category,\r\n\t\t\t\t\tTopicNum: TopicNum,\r\n\t\t\t\t\tEmbedding1: Embedding1,\r\n\t\t\t\t\tEmbedding2: Embedding2,\r\n                    Embedding3: Embedding3,\r\n                    pairs: pairs\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tdescgram_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//all titles\r\nexport const jobtitleDataSlice = createSlice({\r\n\tname: 'jobtitle_action',\r\n\tinitialState: JobTitleInit,\r\n\treducers: {\r\n\t\tjobtitle: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<JobTitle>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({JobCode, JobTitle, Description, grams}: JobTitle) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tJobCode: JobCode,\r\n\t\t\t\t\tJobTitle: JobTitle,\r\n\t\t\t\t\tDescription: Description,\r\n\t\t\t\t\tgrams: grams,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tjobtitle_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//single title\r\nexport const singletitleDataSlice = createSlice({\r\nname: 'SingleTitleInit',\r\ninitialState: JobTitleInit,\r\nreducers: {\r\n\t\tsingletitle: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<JobTitle>) => {\r\n\t\t\t\tconsole.log(payload)\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({JobCode, JobTitle, Description, grams}: JobTitle) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tJobCode: JobCode,\r\n\t\t\t\t\tJobTitle: JobTitle,\r\n\t\t\t\t\tDescription: Description,\r\n\t\t\t\t\tgrams: grams,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tsingletitle_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate.slice(0,state.length);\r\n\t\t\tconsole.log(state);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//related gram\r\nexport const {\r\n\trelatedgramdata: relatedDataActionCreator,\r\n\trelatedgram_delete: relateddeleteActionCreator,\r\n} = relatedSlice.actions;\r\n\r\n\r\n//desc gram\r\nexport const {\r\n\tdescgramdata: descgramDataActionCreator,\r\n\tdescgram_delete: descgramdeleteActionCreator,\r\n} = descgramDataSlice.actions;\r\n\r\n\r\n//job title\r\nexport const {\r\n\tjobtitle: jobtitleActionCreator,\r\n\tjobtitle_delete: jobtitledeleteActionCreator,\r\n} = jobtitleDataSlice.actions;\r\n\r\n\r\n//single title\r\nexport const {\r\n\tsingletitle: singletitleActionCreator,\r\n\tsingletitle_delete: singletitledeleteActionCreator,\r\n} = singletitleDataSlice.actions;","import axios from 'axios';\r\n\r\nimport {JobTitle} from '../../type';\r\nimport { jobtitleActionCreator, jobtitledeleteActionCreator, \r\n         descgramdeleteActionCreator, \r\n        relateddeleteActionCreator,\r\n    } from '../../reducers/jobdesc_actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst JobDesc_Import = (props: any) => {\r\n\r\n\tlet {configheaders} = props;\r\n    let dispatcher = useDispatch()\r\n\r\n\tconst importdata = () => {\r\n\r\n\t\t//1\r\n\t\taxios.get<any[]>(`${process.env.REACT_APP_API_URL}/api/jd/data`, configheaders)\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log(res.data)\r\n\t\t\t\tlet JobTitles:JobTitle[] = res.data\r\n\r\n                dispatcher(jobtitledeleteActionCreator({}))\r\n                dispatcher(descgramdeleteActionCreator({}))\r\n                dispatcher(relateddeleteActionCreator({}))\r\n\r\n                JobTitles.forEach((jt:JobTitle) => {\r\n                    dispatcher(jobtitleActionCreator(jt))\r\n\r\n                    jt.grams.forEach(gram => {\r\n                        //dispatcher(descgramDataActionCreator(gram))\r\n                    })\r\n\r\n                })\r\n\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log('data error')\r\n\t\t\t});\r\n\t}\r\n\t\t\t\r\n\treturn(\t   \r\n\t\t<button className=\"jdsubmitbtn\" onClick={importdata} >Import JD Data</button>\r\n\t   )\r\n};\r\nexport default JobDesc_Import;","import axios from 'axios';\r\nimport { useState } from 'react';\r\n\r\nconst JobDesc_Import = (props) => {\r\n\r\n\tlet {configheaders} = props;\r\n\r\n\tconst [modelname, setModelname] = useState('xx');\r\n\tconst [jdFile, setjdFile] = useState('');\r\n\t\r\n\tconst uploaddata = (event) => {\r\n\r\n\t\tevent.preventDefault()\r\n\t\tlet dataArray = new FormData();\r\n\t\tdataArray.append(\"modelname\",modelname);\r\n\t\tdataArray.append(\"jdfile\",jdFile);\r\n\t\t\r\n\t\tconsole.log('clicked data upload')\r\n\t\t\r\n\t\t//axios call\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/jd/dataupload/`, \r\n\t\t\t\t\t//{modelname: modelname, reviewFile: reviewFile}, \r\n\t\t\t\t\tdataArray,\r\n\t\t\t\t\tconfigheaders\r\n\t\t\t\t)\r\n        .then(res => {\r\n\t\t\tconsole.log('posted data')\r\n\t\t\tlet elem = document.getElementById(\"uploadjdsuccess\")\r\n\t\t\telem.innerHTML = \"Uploaded Successfully!\"\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error');\r\n\t\t\tlet elem = document.getElementById(\"uploadjdsuccess\")\r\n\t\t\telem.innerHTML = \"There was an error.\"\r\n        })\t\t\r\n\r\n\t}\r\n\t\t\r\n\treturn(\t  \t\t\r\n\t\t<form onSubmit={uploaddata} style={{'marginTop':'20px', 'textAlign':'left'}}>\r\n\t\t\t<input type=\"file\" className=\"jdfilebtn\" name=\"jdfile\" onChange={e => setjdFile(e.target.files[0])}/>\r\n\t\t\t<div > Model name:  </div>\r\n\t\t\t<input type=\"text\" name=\"modelname\" onChange={e => setModelname(e.target.value)}/>\r\n\t\t\t<button className=\"jdsubmitbtn\" type=\"submit\" >Upload Data</button>\r\n\t\t\t<div id=\"uploadjdsuccess\"> </div>\r\n\t\t</form>\t\t\r\n\t   )\r\n};\r\nexport default JobDesc_Import;","import {useSelector, useDispatch} from 'react-redux';\r\nimport JobDescImport from '../../../data/JobDescription/JobDesc_Import';\r\nimport JobDescUpload from \"../../../data/JobDescription/JobDesc_Upload.js\";\r\nimport { User } from \"../../../type\";\r\nimport FieldsDiv from '../fields/subfunctions/FieldsDiv';\r\nimport \"./css/JDDataSetup.css\";\r\nimport { jobtitledeleteActionCreator,descgramdeleteActionCreator } from '../../../reducers/jobdesc_actions';\r\nimport { FormEvent, ChangeEvent, useState } from 'react';\r\n\r\nconst JDDataSetup = () => {\r\n\r\n    let dispatcher = useDispatch();\r\n    const userstate: User = useSelector((state: any) => state.user);\r\n    const config = {\r\n\t\theaders: {\r\n\t\t\t'Authorization': 'Bearer ' + userstate.authtoken\r\n\t\t}\r\n\t};\r\n\tconst [modelname, setModelname] = useState('xx');\r\n\tconst [jdFile, setjdFile] = useState<any>();\r\n\t\r\n    const deleteAction = () => {\r\n        dispatcher(jobtitledeleteActionCreator({}))\r\n        dispatcher(descgramdeleteActionCreator({}))\r\n    }\r\n    const ApplyFile = (e:ChangeEvent<HTMLInputElement>) =>{\r\n        if (e.target.files){setjdFile(e.target.files[0])}\r\n    }\r\n\r\n\r\n    return(\r\n            <div id=\"importfulljd\">\r\n                <div id=\"jdimportHeader\"> Upload JD Dataset for Analysis </div>                \r\n                <div id=\"jdimportContainer\">\r\n                    <div className=\"jdimportelem\">\r\n                        <div className=\"jdheader\"> Save Data to DB </div>\r\n\r\n                        <form onSubmit={(e:FormEvent<HTMLFormElement>)=>JobDescUpload(e,modelname, jdFile, config, \"uploadjdsuccess\")} \r\n                                    style={{'marginTop':'20px', 'textAlign':'left'}}>\r\n                            <input type=\"file\" className=\"jdfilebtn\" name=\"jdfile\" \r\n                                    onChange={(e:ChangeEvent<HTMLInputElement>) => ApplyFile(e)}/>\r\n                            <div > Model name:  </div>\r\n                            <input type=\"text\" name=\"modelname\" onChange={e => setModelname(e.target.value)}/>\r\n                            <button className=\"jdsubmitbtn\" type=\"submit\" >Upload Data</button>\r\n                            <div id=\"uploadjdsuccess\"> </div>\r\n                        </form>\t\t  \r\n                        \r\n                    </div> \r\n\r\n                    <div className=\"jdimportelem\">\r\n                        <JobDescImport props={config} />\r\n                        <div > Current Dataset: </div>\r\n                        <button onClick={deleteAction}> Delete Imported Data </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <FieldsDiv />\r\n\r\n           </div>\r\n    )\r\n};\r\nexport default JDDataSetup;","import { JobTitle } from \"../../type\";\r\n\r\n\r\nconst JobTitleDropdown = (props:any) => {\r\n    let titles: JobTitle[] = props.JobTitles\r\n    let populate: boolean = props.populate\r\n\r\n    if (populate){\r\n        return(\r\n            <select onChange={props.change}>\r\n                <option key='0' >\r\n                    Select Job Title\r\n                </option>\r\n                Titles:\r\n                {titles.map((jt:JobTitle, i:number) => {\r\n                    return(\r\n                    <option key={i} value={i}>\r\n                        {jt.JobTitle}\r\n                    </option>\r\n                    )\r\n                })}\r\n            </select>\r\n        )\r\n\r\n    } else {\r\n        return(<div></div>)\r\n    }\r\n};\r\n\r\nexport default JobTitleDropdown;","import {useSelector, useDispatch} from 'react-redux'\r\nimport { JobTitle, DescGram } from '../../../../type';\r\nimport {singletitledeleteActionCreator} from '../../../../reducers/jobdesc_actions'\r\nimport \"./css/GramViewer.css\"\r\n\r\nconst GramViewer = () => {\r\n\r\n    const Title: JobTitle[] = useSelector((state:any) => state.selectedtitle);\r\n\r\n    const dispatcher = useDispatch();\r\n\r\n    const Clicked = () => {\r\n        dispatcher(singletitledeleteActionCreator({}))\r\n        console.log('clicked for delete')\r\n    }\r\n\r\n    return(\r\n        <div>\r\n           <button onClick={Clicked}> Delete selected state </button>\r\n        {Title[Title.length-1].grams.map((g:DescGram,i:number) => {\r\n            return(\r\n                <div key={i+\"gram\"} className=\"dgram\">\r\n                    <div key={i+\"text\"} className=\"gramText\">{g.Text} </div>\r\n                    <div key={i+'detail'} className=\"gramdetails\">\r\n                        <div key={i+'a'}> {g.TopicNum} </div>\r\n                        <div key={i+'b'}>{g.Category} </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })}\r\n        </div>\r\n    )\r\n};\r\nexport default GramViewer;","import {ChangeEvent} from 'react'\r\nimport { JobTitle } from '../../../type';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport JobTitleDropdown from '../../../data/JobDescription/JobTitleDropdown';\r\nimport { singletitleActionCreator } from \"../../../reducers/jobdesc_actions\";\r\nimport GramViewer from './subfunctions/GramViewer';\r\n\r\nconst JDDataViewer = () => {\r\n\r\n    const jobtitles: JobTitle[] = useSelector((state:any) => state.jobtitles);\r\n\r\n    let populate: boolean\r\n    let dispatcher = useDispatch()\r\n\r\n    if (jobtitles.length > 0){\r\n         populate = true\r\n    } else {\r\n        populate = false\r\n    }\r\n\r\n    const JTSelect = (e:ChangeEvent<HTMLSelectElement>) => {\r\n        let intgr = +e.target.selectedOptions[0].attributes[0].value\r\n        console.log(intgr)\r\n        console.log(jobtitles[intgr])\r\n        //dispatcher(singletitledeleteActionCreator({}))\r\n        dispatcher(singletitleActionCreator(jobtitles[intgr]))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <JobTitleDropdown JobTitles={jobtitles} populate={populate} change={(e:ChangeEvent<HTMLSelectElement>) => JTSelect(e)}/>\r\n            <GramViewer />\r\n        </div>\r\n    )\r\n\r\n};\r\nexport default JDDataViewer;","import { useSelector } from 'react-redux';\r\nimport { RuleModel } from '../../../../type';\r\n\r\nconst RuleModelDropdown = (change: any) => {\r\n\t\r\n\tconst Models:RuleModel[] = useSelector((state: any) => state.rulemodels);\r\n\t\t\r\n\treturn(\r\n\t\t<select id=\"dropdown_models\" onChange={change.change} >\t\t\r\n\t\t\t<option key='1' value={0} >\r\n\t\t\t\tSelect Model Name\r\n\t\t\t</option>\t\r\n\t\t\t<option key='-1' value={'-1'} >\r\n\t\t\t\tNone\r\n\t\t\t</option>\r\n\r\n\t\t\t{\r\n\t\t\t\tModels.map((d,i) => {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<option key={\"r\"+i}  value={i}>\r\n\t\t\t\t\t\t\t{d.ModelName}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</select>\t\r\n\t)\t\t\t\r\n};\r\nexport default RuleModelDropdown;","\r\nimport {Link} from 'react-router-dom';\r\n//import { useDispatch} from \"react-redux\";\r\nimport { RuleModel} from \"../../../../type\";\r\n\r\nimport \"./css/ModalRuleManager.css\";\r\n\r\nconst ModalRuleManager = (props:any) => {\r\n\r\n    const selModel:RuleModel = props.selModel\r\n\r\n    //const dispatcher = useDispatch();\r\n\r\n    if (selModel){\r\n        return(\r\n            <div id=\"modal_RuleSel\" >\r\n\r\n            <div id=\"selectedrulemodel_div\">\r\n                <div id=\"activemodelheader\">Active Model: {selModel.ModelName}</div>\r\n                <div>\r\n                {\r\n                    selModel.ruleset.map((d,i) => {\r\n                        return(\r\n                            <div key={\"r\"+i}>\r\n                                Rule: {d.RuleKey}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n            <Link to=\"/employee/RuleManager\">\r\n                <div id=\"explorelink\">\r\n                    Or Explore Further\r\n                </div>\r\n            </Link>\r\n            </div>\r\n        )\r\n    } else {return(<div></div>)}\r\n};\r\nexport default ModalRuleManager;","import * as d3 from 'd3';\r\n\r\nconst ForceBubble = (data, xfield, yfield, fieldnames, div_ID,size) => {\r\n\r\n\td3.select(\"#svgshow\").remove();\r\n\r\n\tlet minradius = 20\r\n\r\n\tlet width = size[0]\r\n\tlet height = size[1]\r\n\tlet margin = {top: 10, bottom: 10}\r\n\t\r\n\tlet countTotal = 0\r\n\t\tdata.map(function(d) {\r\n\t\t\tcountTotal +=  Math.sqrt(+d[yfield])\r\n\t\t})\r\n\r\n\t\r\n\tlet nodes =  data.map(function(d,i) {\r\n\t\t\t   var node = {};\r\n\t\t\t\t   node.id = i;\r\n\t\t\t\t   node.sleeve = d[xfield];\r\n\t\t\t\t   node.groupNum = 0;\r\n\t\t\t\t   node.groupName = d[xfield];\r\n\t\t\t\t   node.count = +d[yfield];\r\n\t\t\t\t   node.radius = Math.sqrt(+d[yfield])/Math.sqrt(countTotal) * 110;\r\n\t\t\t\t   return node;\r\n\t\t\t\t});\r\n\t\tconsole.log(nodes);\r\n\r\n\t\tvar svg = d3.select(div_ID)\r\n\t\t\t\t.append('svg')\r\n\t\t\t\t.attr(\"id\",\"svgshow\")\r\n\t\t\t\t.attr(\"width\",width)\r\n\t\t\t\t.attr(\"height\",height)\r\n\t\t\t\t.attr(\"transform\",\"translate(0,\"+ margin.top +\")\")\r\n\t\t\t\t.style(\"background-color\", \"#333\")\r\n\t\t\t\t.append(\"g\");\r\n\t\r\n\t\tvar clusters = d3.scalePoint()\r\n\t\t\t\t.domain(d3.range(data.length))\r\n\t\t\t\t.range([100,height-100]);\r\n\t\r\n\t\r\n\t\tvar color = d3.scaleSequential()\r\n\t\t  \t\t.domain([0,data.length])\r\n\t\t  \t\t.interpolator(d3.interpolateRainbow);\r\n\t\r\n\t\tvar simulation = d3.forceSimulation()\r\n\t\t\t    .force(\"charge\", d3.forceManyBody())\r\n\t\t\t    .force('collision', d3.forceCollide().radius(function(d){return d.radius;}))\r\n\t\t\t    .force(\"center\", d3.forceCenter(width / 2, height / 2))\r\n\r\n\t\tsimulation\r\n\t\t\t.nodes(nodes)\r\n\t\t\t.on(\"tick\", ticked);\r\n\r\n\t\t/* draw the circles */\r\n\t\tvar node = svg.append(\"g\")\r\n\t\t\t.attr(\"class\", \"nodes\")\r\n\t\t\t.selectAll(\"circle\")\r\n\t\t\t.data(nodes)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"circle\")\r\n\t\t\t.attr(\"r\", function(d){return d.radius;})\r\n\t\t\t.attr(\"fill\", function(_,i) { return color(i) })\r\n\t/*\t\t.call(d3.drag()\r\n\t\t\t  .on(\"start\", dragstarted)\r\n\t\t\t  .on(\"drag\", dragged)\r\n\t\t\t  .on(\"end\", dragended));\r\n\t\t*/\r\n\t\t\r\n\t\t//tooltip\r\n\t\tnode.append(\"title\")\r\n\t\t\t\t.text(function(d) {return d.groupName;})\r\n\r\n\t\tvar label = svg.append(\"g\")\r\n\t\t\t\t\t\t.attr(\"class\", \"label_text\")\r\n\t\t\t\t\t\t.selectAll(\"nodes\")\r\n\t\t\t\t\t\t.data(nodes)\r\n\t\t\t\t\t\t.enter()\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"fill\",\"white\")\r\n\t\t\t\t\t\t.attr(\"x\",0)\r\n\t\t\t\t\t\t.attr(\"y\",0)\r\n\t\t\t\t\t\t.text(function(d){ return d.radius >= minradius ? d.groupName : \"\"; });\r\n\t\t\t\r\n\tfunction ticked() {\r\n\t\tvar k = this.alpha() * .5;\r\n\t\t//move the nodes to their foci/cluster\r\n\t\tnodes.forEach(function(n, i) {\r\n\t\t\t\tn.y += (clusters(n.groupNum) - n.y) * k;\r\n\t\t\t\tn.x += (0 - n.x) * k;\r\n\t\t  });\r\n\t\t//update coordinates for the circle\r\n\t\tnode\r\n\t\t\t.attr(\"cx\", function(d) { return d.x; })\r\n\t\t\t.attr(\"cy\", function(d) { return d.y; });\r\n\t\tlabel\r\n\t\t\t.attr(\"x\", function(d) { return d.x; })\r\n\t\t\t.attr(\"y\", function(d) { return d.y; });\t\t\r\n\t}\r\n\r\n\t/*\r\n\t\tfunction dragstarted(d) {\r\n\t\tif (!d3.event.active) simulation.alphaTarget(.03).restart();\r\n\t\td.fx = d.x;\r\n\t\td.fy = d.y;\r\n\t\t}\r\n\r\n\t\tfunction dragged(d) {\r\n\t\td.fx = d3.event.x;\r\n\t\td.fy = d3.event.y;\r\n\t\t}\r\n\r\n\t\tfunction dragended(d) {\r\n\t\tif (!d3.event.active) simulation.alphaTarget(.03);\r\n\t\td.fx = null;\r\n\t\td.fy = null;\r\n\t\t}\r\n\t*/\r\n\t\r\n};\r\nexport default ForceBubble;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {BasicQuery, QueryModel} from \"../type\";\r\n\r\n\r\nconst queryInit:BasicQuery[] = [{\r\n    ModelName:'',\r\n\tDateVar: new Date(),\r\n    Variable:'',\r\n    Value:0\r\n}]\r\n\r\nconst QueryInit: QueryModel[] =[{\r\n\tModelName: '',\r\n\tChartType:'',\r\n\tStatus:'',\r\n\tXFieldName:'',\r\n\tYFieldName:'',\r\n\tbasicquery: queryInit\r\n}]\r\n\r\n\r\n//basic query\r\nexport const basicquerySlice = createSlice({\r\n\tname: 'basicqry_action',\r\n\tinitialState: queryInit,\r\n\treducers: {\r\n\t\tqrybasicAdd: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<BasicQuery>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({ ModelName, DateVar, Variable, Value}: BasicQuery) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tModelName: ModelName,\r\n\t\t\t\t\tDateVar: DateVar,\r\n\t\t\t\t\tVariable: Variable,\r\n\t\t\t\t\tValue: Value,           \r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tqrybasic_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//query models\r\nexport const queryModelSlice = createSlice({\r\n\tname: 'qry_action',\r\n\tinitialState: QueryInit,\r\n\treducers: {\r\n\t\tqryAdd: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<QueryModel>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({ ModelName, ChartType, Status, XFieldName, YFieldName, basicquery}: QueryModel) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tModelName: ModelName,\r\n\t\t\t\t\tChartType: ChartType,\r\n\t\t\t\t\tStatus: Status, \r\n\t\t\t\t\tXFieldName:XFieldName,   \r\n\t\t\t\t\tYFieldName:YFieldName,\r\n\t\t\t\t\tbasicquery:basicquery\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tqry_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//basic query\r\nexport const {\r\n\tqrybasicAdd: basicqueryActionCreator,\r\n\tqrybasic_delete: basicquerydeleteActionCreator,\r\n} = basicquerySlice.actions;\r\n\r\n//query model\r\nexport const {\r\n\tqryAdd: queryActionCreator,\r\n\tqry_delete: querydeleteActionCreator,\r\n} = queryModelSlice.actions;","import axios from 'axios';\r\nimport {queryActionCreator, querydeleteActionCreator,basicqueryActionCreator, basicquerydeleteActionCreator} from '../../reducers/basicquery_actions';\r\nimport {QueryModel, BasicQuery, RuleModel, Rule} from '../../type'\r\n\r\n\r\nconst EmployeeImportTest = (params:any, modelname:string, nperiods: number, SelModel:RuleModel | null, fieldBand:string,\r\n                                dateSpread: string, ed: Date, bg: Date, \r\n                                config:any, dispatcher:any) => {\r\n        \r\n    let dataArray = new FormData();\r\n\r\n        if (SelModel){\r\n            let dataencoded:any = [];\r\n            SelModel.ruleset.forEach((rule:Rule,i) =>{\r\n                let modelparams:string[][] = [];\r\n                let fields = [rule.Field1,rule.Field2] //uses key names, backend converts to field name for querying\r\n                rule.exceptions.forEach(exc => {\r\n                    modelparams.push([\r\n                                    String(i), \r\n                                    String(exc.FieldNo), \r\n                                    String(fields[exc.FieldNo-1]), \r\n                                    String(exc.ExceptionVal), \r\n                                    rule.Operation\r\n                                ])\r\n                })\r\n\r\n                //rule no, field no, field name, exception value, and/or\r\n                let rulesetencoded = modelparams.map((tuple:string[])=>{ \r\n                    return [\r\n                        tuple[0],\r\n                        tuple[1],\r\n                        String(tuple[2]).replace(\",\",`${process.env.REACT_APP_DATA_ENCODE_STR}`),\r\n                        String(tuple[3]).replace(\",\",`${process.env.REACT_APP_DATA_ENCODE_STR}`),\r\n                        tuple[4]                            \r\n                    ];\r\n                })\r\n                dataencoded.push(rulesetencoded)\r\n            })\r\n            dataArray.append(\"rule\",String(dataencoded));\r\n        } else {\r\n            dataArray.append(\"rule\",String(['']));\r\n        }\r\n        \r\n        let report:string = \"\"\r\n        if (params.reportType===\"Demographic\"){report = \"demographic\"}\r\n        if (params.reportType===\"Hires\"){report = \"hire\"}\r\n        if (params.reportType===\"Terminations\"){report = \"term\"}\r\n        if (params.reportType===\"Transfers\"){report = \"transfer\"}\r\n        if (params.reportType===\"Promotions\"){report = \"promo\"}\r\n\r\n        let dateEd = {'day': ed.getDate(), 'month': ed.getMonth()+1, 'year':ed.getFullYear()}  \r\n        let dateBg = {'day': bg.getDate(), 'month': bg.getMonth()+1, 'year':bg.getFullYear()}  \r\n\r\n        dataArray.append(\"ed_year\",String(dateEd.year));\r\n        dataArray.append(\"ed_month\",String(dateEd.month));\r\n        dataArray.append(\"ed_day\",String(dateEd.day));\r\n        dataArray.append(\"bg_year\",String(dateBg.year));\r\n        dataArray.append(\"bg_month\",String(dateBg.month));\r\n        dataArray.append(\"bg_day\",String(dateBg.day));\r\n\r\n        dataArray.append(\"ModelName\",modelname);\r\n        dataArray.append(\"MostRecentMapping\",\"False\");\r\n        dataArray.append(\"Xval\",params.groupfield); \r\n        dataArray.append(\"chartType\",params.chartType);\r\n        dataArray.append(\"ruleModelName\",params.ruleModelName);\r\n        dataArray.append(\"period\",params.period);\r\n        dataArray.append(\"fieldBand\",fieldBand);\r\n        dataArray.append(\"reportType\",report);\r\n        dataArray.append(\"nperiods\",String(nperiods));\r\n        dataArray.append(\"dateSpread\",dateSpread);\r\n        \r\n\r\n        axios.post<any>(`${process.env.REACT_APP_API_URL}/api/query/basicpost`,dataArray, config)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            dispatcher(querydeleteActionCreator({}))\r\n            dispatcher(basicquerydeleteActionCreator({}))\r\n\r\n            if (res.data !== \"Nothing\"){ //hardcoded in views.BasicQueryPost\r\n                let data:QueryModel = res.data       \r\n     \r\n                dispatcher(queryActionCreator(data))\r\n                \r\n                data.basicquery.forEach((val:BasicQuery) => {\r\n                    dispatcher(basicqueryActionCreator(val))\r\n                })\r\n            }\r\n        });     \r\n\r\n\r\n};\r\nexport default EmployeeImportTest;","\r\nconst DateSpreadOptionSpread = ({ChangePeriod,NumberChange,numPer,divname}) => {\r\n    return(\r\n        <div>\r\n            Period\r\n            <select onChange={(e)=>ChangePeriod(e)}>\r\n                <option>Select Period</option>\r\n                <option>Weekly</option>\r\n                <option>Monthly</option>\r\n                <option>Yearly</option>\r\n            </select>\r\n\r\n            <div>\r\n                Number of Periods\r\n                <input type=\"number\" name=\"n_periods\" min=\"1\" max=\"50\" value={numPer} onChange={NumberChange} />\r\n            </div>\r\n            <div id={divname}> </div>\r\n        </div>\r\n    )\r\n};\r\nexport default DateSpreadOptionSpread;","import DatePicker from \"react-date-picker\"\r\n\r\nconst DateSpreadOptionRange = ({ChgDate,beginDateStr,divname}) => {    \r\n    return(\r\n        <div style={{height: '150px'}}>\r\n            <div> Select Begin Date </div> \r\n            <div style={{marginTop: '10px', marginBottom: '10px'}}> Selected: {beginDateStr}</div>\r\n            <DatePicker onChange={(e) => ChgDate(e)} />\r\n            <div id={divname}> </div>\r\n        </div>\r\n    )\r\n};\r\nexport default DateSpreadOptionRange;","import * as d3 from 'd3';\r\n\r\nconst ChartLegend = (data, legendDiv, size) => {\r\n\r\n    d3.select(\"#svglegend\").remove();\r\n\r\n    var margin = {top: 10, right: 10, bottom: 10, left: 10},\r\n    width = size[0] - margin.left - margin.right,\r\n    height = size[1] - margin.top - margin.bottom;\r\n\r\n    var svg = d3.select(legendDiv).append(\"svg\")\r\n                .attr(\"width\", width + margin.left + margin.right)\r\n                .attr(\"height\", height + margin.top + margin.bottom)\r\n                .attr(\"id\",\"svglegend\")\r\n                .append(\"g\")\r\n                .attr(\"transform\",\"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n            svg.selectAll(\"rect\")\r\n                .data(data)\r\n                .enter().append(\"rect\")\r\n                .attr(\"class\", \"bar\")\r\n                .attr(\"x\", function(d,i) { return 0; })\r\n                .style(\"fill\", function(d,i) { return d[1] })\r\n                .attr(\"width\", 20)\r\n                .attr(\"y\", function(d,i) { return i*30 })\r\n                .attr(\"height\", function(_) { return 20 })\r\n\r\n            svg.append(\"g\").selectAll(\"text\")\r\n                .data(data)\r\n                .enter().append(\"text\")\r\n                //.attr(\"dy\",\"1.3em\")\r\n                .attr(\"text-anchor\",\"start\")\r\n                .attr(\"fill-opacity\",1) //start blank\r\n                .style(\"color\",\"black\")\r\n                .attr(\"x\",function(d,i) { return 20 })\r\n                .attr(\"y\", function(d,i) { return i*30 + 15 })\r\n                .text(function(d) { return d[0]; });\r\n    \r\n\r\n}\r\nexport default ChartLegend;","import { FieldMap } from \"../type\"\r\n\r\nconst GetFieldName = (fields:FieldMap[], attrname: string, byField=\"AttrName\") => {\r\n    let val: string = \"\"\r\n    \r\n    fields.forEach(fld => {\r\n            if (byField===\"AttrName\"){\r\n                if (fld.AttrName===attrname){\r\n                    val = fld.FieldName\r\n                }\r\n            }\r\n            if (byField===\"Key\"){\r\n                if (fld.Key===attrname){\r\n                    val = fld.FieldName\r\n                }\r\n            }\r\n    })\r\n    return(val)\r\n}\r\nexport default GetFieldName","\r\nfunction UniqueArrayValues(array, field){\r\n\r\n    //get unique values from a named field\r\n    let uniquevals = [];\r\n    array.forEach(c => {\r\n        if (uniquevals.indexOf(c[field]) === -1) {\r\n            uniquevals.push(c[field])\r\n        }\r\n    })\r\n    \r\n    //sort\r\n    uniquevals.sort( function(a, b) {\r\n        if (a.length > 1){\r\n            return (a[0] - b[0]);\r\n        } else {\r\n            if(a[0]===b[0]){\r\n                return(a[0] - b[0])\r\n            } else {\r\n                return (a[1] - b[1]);\r\n            }\t\t\r\n        }\t\t\r\n    });\r\n    \r\n    return(uniquevals)\r\n}\r\nexport default UniqueArrayValues","import * as d3 from 'd3';\r\n\r\nfunction Textwrap(text, width,yfactor) {\r\n    text.each(function() {\r\n      var text = d3.select(this),\r\n          words = text.text().split(/\\s+/).reverse(),\r\n          word,\r\n          line = [],\r\n          lineNumber = 0,\r\n          lineHeight = 1.1, // ems\r\n          x = text.attr('x'),\r\n          y = text.attr(\"y\"),\r\n          dy = parseFloat(text.attr(\"dy\")),\r\n          tspan = text.text(null).append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", dy + \"em\");\r\n      while (word = words.pop()) {\r\n        line.push(word);\r\n        tspan.text(line.join(\" \"));\r\n        if (tspan.node().getComputedTextLength() > width) {\r\n          line.pop();\r\n          tspan.text(line.join(\" \"));\r\n          line = [word];\r\n          tspan = text.append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  export default Textwrap;","import Textwrap from \"../functions/Textwrap\";\r\n\r\nconst BarChartStacked1 = (svg, data, xcol, ycol, xgroups, groupcol, groups, colorScale, x, y2, height, mina2, useopacity, wait_period, width) => {\r\n    \t\r\n    //--stacked bar\r\n    let dvals = xgroups.map(_=> {return []})\r\n    let dheights = xgroups.map(_=> {return []})\r\n    let dvars = xgroups.map(_=> {return []})\r\n    let dsums = xgroups.map(_=> {return 0})\r\n    data.forEach(d => {\r\n        let i = xgroups.indexOf(d[xcol])\r\n        dsums[i] += +d[ycol]\r\n        dheights[i].push(dsums[i])\r\n        dvals[i].push(+d[ycol])\r\n        dvars[i].push(d[groupcol])\r\n    });\r\n\r\n    function GetVal(d){\r\n        let grp = xgroups.indexOf(d[xcol])\r\n        let gvar = dvars[grp].indexOf(d[groupcol])      \r\n        let rt = dvals[grp][gvar]\r\n        return(rt)\r\n    };\r\n    function GetCumVal(d){\r\n        let grp = xgroups.indexOf(d[xcol])\r\n        let gvar = dvars[grp].indexOf(d[groupcol])    \r\n        let rt = dheights[grp][gvar]\r\n        return(rt)\r\n    };\r\n\r\n    svg.selectAll(\"rect\")\r\n        .data(data)\r\n        .enter().append(\"rect\")\r\n        .attr(\"class\", \"bar\")\r\n        .attr(\"x\", function(d) { return x(d[xcol]); })\r\n        .style(\"fill\", function(d) { if (groupcol){ \r\n                                return colorScale(groups.indexOf(d[groupcol])) \r\n                            } else { \r\n                                return colorScale(d[ycol])\r\n                            } \r\n                        })\r\n        .attr(\"width\", x.bandwidth())\r\n        .attr(\"y\", function(_) { return y2(mina2) })\r\n        .attr(\"height\", function(_) { return height - y2(mina2); });\r\n      \r\n        svg.selectAll(\"rect\")\r\n        .transition()\r\n            .duration(400)\r\n            .attr(\"y\",function(d) { \r\n                let cval = GetCumVal(d)\r\n                return y2(cval); \r\n            })\r\n            .attr(\"height\",function(d) { \r\n                    let hval = GetVal(d)\r\n                    return height - y2(hval); \r\n            });    \r\n\r\n        svg.append(\"g\").selectAll(\"text\")\r\n\t\t\t.data(data)\r\n\t\t\t.enter().append(\"text\")\r\n\t\t\t.attr(\"dy\",\"1.3em\")\r\n\t\t\t.attr(\"text-anchor\",\"start\")\r\n\t\t\t.attr(\"fill-opacity\",0) //start blank\r\n\t\t\t.attr(\"x\",function(d) { return x(d[xcol]) + x.bandwidth() / 2 ; })\r\n\t\t\t.attr(\"y\", function(d) { return y2(GetCumVal(d)); })\r\n\t\t\t.text(function(d) { if (groupcol){return  d[groupcol] + \" - \" + d[ycol]} else {return d[ycol]}; })\r\n            .call(Textwrap,width/xgroups.length-5,.2);\r\n\r\n\t\t//transition - text\r\n\t\tsvg.selectAll(\"text\")\r\n\t\t\t.transition()\r\n\t\t\t.duration(500)\r\n\t\t\t.attr(\"fill-opacity\",useopacity)\r\n            .attr(\"color\",\"white\")\r\n\t\t\t.attr(\"text-anchor\",\"middle\")\r\n            .attr('class',\"textclass1\")\r\n            .attr(\"mix-blend-mode\",\"difference\")//testing\r\n\t\t\t//.attr(\"y\", function(d) {return y2(GetVal(d)) - y2(GetCumVal(d))/2; })\r\n\t\t\t.delay(function(_,i) { return (i*wait_period+200)}); \r\n};\r\nexport default BarChartStacked1;","\r\n//filtering function\r\nfunction PivotArray(data, byField1, byField2, aggField){\r\n\t\tlet arr = [];\r\n\t\tlet arrcount = [];\r\n\t\tlet arrsum  = [];\r\n\t\t\r\n\t\tif (byField2===\"\"){\r\n\t\t\tdata.forEach(x => {\r\n\t\t\t\tif (arr.indexOf(String(x[byField1]))=== -1){\r\n\t\t\t\t\tarr.push(String(x[byField1]));\r\n\t\t\t\t\tarrcount.push(1)\r\n\t\t\t\t\tarrsum.push(+x[aggField]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tarrcount[arr.indexOf(String(x[byField1]))] = arrcount[arr.indexOf(String(x[byField1]))] + 1;\r\n\t\t\t\t\tarrsum[arr.indexOf(String(x[byField1]))] = arrsum[arr.indexOf(String(x[byField1]))] + +x[aggField];\r\n\t\t\t\t}\t\t\t\r\n\t\t\t})\r\n\t\t\t} else {\r\n\t\t\tdata.forEach(x => {\r\n\t\t\t\tif (arr.indexOf([x[byField1],x[byField2]])=== -1){\r\n\t\t\t\t\tarr.push([x[byField1],x[byField2]]);\r\n\t\t\t\t\tarrcount.push(1)\r\n\t\t\t\t\tarrsum.push(+x[aggField]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tarrcount[arr.indexOf([x[byField1],x[byField2]])] = arrcount[arr.indexOf([x[byField1],x[byField2]])] + 1;\r\n\t\t\t\t\tarrsum[arr.indexOf([x[byField1],x[byField2]])] = arrsum[arr.indexOf([x[byField1],x[byField2]])] //+ +x[aggField];\r\n\t\t\t\t}\t\t\t\r\n\t\t\t})\t\t\t\r\n\t\t}\r\n\r\n\t\tvar result = [];\r\n\t\tarr.forEach((_,i) => {\r\n\t\t\tresult.push({\r\n\t\t\t\tValue: arr[i],\r\n\t\t\t\tCount: arrcount[i],\r\n\t\t\t\tSum: arrsum[i],\r\n\t\t\t\tMean: Math.round(arrsum[i]/arrcount[i]*100)/100\r\n\t\t\t})\r\n\t\t\t\r\n\t\t})\r\n\r\n\t\tresult.sort( function(a, b) {\r\n\t\t\tif (a.Value.length > 1){\r\n\t\t\t\treturn (a.Value[0] - b.Value[0]);\r\n\t\t\t} else {\r\n\t\t\t\tif(a.Value[0]===b.Value[0]){\r\n\t\t\t\t\treturn(a.Value[0] - b.Value[0])\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn (a.Value[1] - b.Value[1]);\r\n\t\t\t\t}\t\t\r\n\t\t\t}\t\t\r\n\t\t});\r\n\r\n\t\treturn(result)\r\n\t}\r\n\t\r\nexport default PivotArray\t","\r\nconst LineChartStacked1 = (svg, data, line, groupcol, groups, colorScale) => {\r\n       \r\n    //line stacked\r\n    let grpdata = function(data,grp){\r\n        let gdata = [];\r\n        data.forEach(d=>{\r\n            if (d[groupcol]==grp){\r\n                gdata.push(d)\r\n            }\r\n        })\r\n        return(gdata)\r\n    }\r\n\r\n    groups.forEach((grp,i) => {\r\n        svg.append(\"path\")\r\n            .attr(\"class\",\"line\")\r\n            .attr(\"fill\",\"none\")\r\n            .attr(\"stroke-width\",2.5)\r\n            .attr(\"stroke\",colorScale(i))\r\n            .attr(\"d\",line(grpdata(data,grp)))\r\n    })\r\n\r\n};\r\nexport default LineChartStacked1;","const LineChart1 = (svg, data, line) => {\r\n       \r\n    svg.append(\"path\")\r\n        .attr(\"class\",\"line\")\r\n        .attr(\"fill\",\"none\")\r\n        .attr(\"stroke-width\",2.5)\r\n        .attr(\"stroke\",\"black\")\r\n        .attr(\"d\",line(data));\r\n\r\n};\r\nexport default LineChart1;","import * as d3 from 'd3';\r\nimport UniqueArrayValues from '../functions/UniqueArrayValues';\r\nimport BarChartStacked1 from './chartfns/BarChartStacked1';\r\nimport PivotArray from '../functions/PivotArray';\r\n//import Textwrap from './functions/Textwrap';\r\nimport LineChartStacked1 from './chartfns/LineChartStacked1';\r\nimport LineChart1 from './chartfns/LineChart1';\r\n\r\n\r\nfunction ChartPrimary(charttype, data, [xcol, ycol, groupcol], fieldnames, colorauto, colors, chartDiv, size, showLabels) {\r\n\t\r\n\td3.select(\"#svgshow\").remove();\r\n\tconsole.log(data)\r\n\r\n\tvar margin = {top: 20, right: 10, bottom: 50, left: 40},\r\n\t\twidth = size[0] - margin.left - margin.right,\r\n\t\theight = size[1] - margin.top - margin.bottom;\r\n\r\n\tlet nvals = data.length\r\n\tlet wait_period = 500/nvals\r\n\t\r\n    let xgroups = UniqueArrayValues(data,xcol)\r\n    let groups = UniqueArrayValues(data,groupcol)\r\n    let arr = PivotArray(data,xcol,\"\",ycol)\r\n\r\n\tlet useopacity = 0\r\n\tif (showLabels===\"On\"){ useopacity = 1}\r\n\r\n\t// set the ranges\r\n\tvar x = d3.scaleBand()\r\n\t\t\t  .range([0, width])\r\n\t\t\t  .padding(0.1);\r\n\tvar y = d3.scaleLinear()\r\n\t\t\t  .range([height, 0]);\r\n\tvar y2 = d3.scaleLinear()\r\n\t\t\t  .range([height, 0]);\r\n\r\n\tif (colorauto===\"discrete\"){\r\n\t\tconsole.log('discrete colors')\r\n    \tvar colorScale = d3.scaleSequential()\r\n                .domain([0,groups.length])\r\n                .interpolator(d3.interpolateRainbow);\r\n\t} else {\r\n\t\tconsole.log('continuous colors')\r\n\t\tvar colorScale = d3.scaleSequential(d3.interpolate(colors[0],colors[1]))\r\n\t\t\t\t.domain(d3.extent(data,function(d) { return d[ycol]*1 }));\t\r\n\t}\r\n\t\r\n\tvar svg = d3.select(chartDiv).append(\"svg\")\r\n\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\t\t.attr(\"id\",\"svgshow\")\r\n\t\t.append(\"g\")\r\n\t\t.attr(\"transform\",\"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n\t  //Scale the range of the data in the domains\r\n\t  x.domain(data.map(function(d) { return d[xcol]; }));\r\n\t  let mina = d3.max([0,d3.min(data,function(d) { return +d[ycol]; }) - d3.deviation(data,function(d) { return +d[ycol]; }) ]); //causes errors\r\n\t  y.domain([mina, d3.max(data, function(d) { return +d[ycol]; })]);\r\n      console.log(y)\r\n\r\n\t  let mina2 = d3.max([0,d3.min(arr,function(d) { return +d[\"Sum\"]; }) - d3.deviation(data,function(d) { return +d[\"Sum\"]; }) ]); //causes errors\r\n\t  y2.domain([mina2, d3.max(arr, function(d) { return +d[\"Sum\"]; })]);\r\n\r\n\t\t//both line fns\r\n        var line = d3.line()\r\n            .x(function(d){return x(d[xcol]) + x.bandwidth()/2})\r\n            .y(function(d){return y(d[ycol])});\r\n\r\n\r\n\t\t//---subfunctions - particular graph\r\n\t\tif (charttype===\"barchartstacked\"){\r\n\t\t\tBarChartStacked1(svg, data, xcol, ycol, xgroups, groupcol, groups, colorScale, x, y2, height, mina2,useopacity, wait_period, width)\r\n\t\t}\r\n\t\tif (charttype===\"linechartstacked\"){\r\n\t\t\tLineChartStacked1(svg, data, line, groupcol, groups, colorScale)\r\n\t\t}\r\n\t\tif (charttype===\"linechart\"){\r\n\t\t\tLineChart1(svg, data, line)\r\n\t\t}\r\n\r\n\t\t//labels\r\n\t\tif (charttype!==\"barchartstacked\"){\r\n\t\t\tsvg.append(\"g\").selectAll(\"text\")\r\n\t\t\t\t.data(data)\r\n\t\t\t\t.enter().append(\"text\")\r\n\t\t\t\t.attr(\"dy\",\"1.3em\")\r\n\t\t\t\t.attr(\"text-anchor\",\"start\")\r\n\t\t\t\t.attr(\"fill-opacity\",0) //start blank\r\n\t\t\t\t.attr(\"x\",function(d) { return x(d[xcol]) + x.bandwidth() / 2 ; })\r\n\t\t\t\t.attr(\"y\", function(d) { return y(d[ycol]) - x.bandwidth()/2; })\r\n\t\t\t\t.text(function(d) { return d[ycol]; })\r\n\t\t\t\t//.call(Textwrap,width/xgroups.length-5,.2);\r\n\r\n\t\t\t//txt transition\r\n\t\t\tsvg.selectAll(\"text\")\r\n\t\t\t\t.transition()\r\n\t\t\t\t.duration(500)\r\n\t\t\t\t.attr(\"fill-opacity\",1)\r\n\t\t\t\t.attr(\"text-anchor\",\"middle\")\r\n\t\t\t\t.style(\"opacity\",useopacity)\r\n\t\t\t\t.attr(\"y\", function(d) { return y(d[ycol]) - 20; })\r\n\t\t\t\t.delay(function(_,i) { return (i*wait_period+200)});\r\n\t\t}\r\n\t\t\r\n\t \t // add the x Axis\r\n\t  \tsvg.append(\"g\")\r\n\t\t  .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n\t\t  .call(d3.axisBottom(x));\r\n\r\n\r\n\t\tsvg.append('text')\r\n\t\t\t.attr(\"id\",\"xaxislabel\")\r\n\t\t\t.attr('transform','translate('+ (width/2) + \",\" + (height+margin.top + 20) + \")\" )\r\n\t\t\t.style(\"text-anchor\",\"middle\")\r\n\t\t\t.text(fieldnames[0])\r\n\t\t\t//.call(Textwrap,width/xgroups.length-5,.2)\r\n\r\n\t\tsvg.append('text')\r\n\t\t\t.attr(\"id\", 'yaxislabel')\r\n\t\t\t.attr(\"transform\",\"rotate(-90)\")\r\n\t\t\t.attr(\"y\",0-margin.left - 4)\r\n\t\t\t.attr(\"x\",0-(height/2))\r\n\t\t\t.attr(\"dy\", '1em')\r\n\t\t\t.style(\"text-anchor\",\"middle\")\r\n\t\t\t.text(fieldnames[1])\r\n\t\t\t\r\n\t  \t// add the y Axis\r\n\t  \tsvg.append(\"g\")\r\n\t\t\t.attr(\"class\",\"y axis\")\r\n\t\t  \t.call(d3.axisLeft(y));\r\n\r\n  \t\t\r\n        let colordata = []\r\n        groups.forEach((grp,i) => {\r\n            colordata.push([grp,colorScale(i)])\r\n        });\t  \r\n        return(colordata)      \r\n\r\n\r\n} //end function\r\n\r\nexport default ChartPrimary;","import { useSelector } from 'react-redux';\r\nimport { RuleModel } from '../../../../type';\r\n\r\nconst QueryModelDropdown = (change: any) => {\r\n\t\r\n\tconst Models:RuleModel[] = useSelector((state: any) => state.querymodels);\r\n\t\t\r\n\treturn(\r\n\t\t<select id=\"dropdown_qrymodels\" onChange={change.change} >\t\t\r\n\t\t\t<option key='1' value={0} >\r\n\t\t\t\tSelect Model Name\r\n\t\t\t</option>\t\r\n\t\t\t<option key='-1' value={'-1'} >\r\n\t\t\t\tNone - Make a new chart!\r\n\t\t\t</option>\r\n\r\n\t\t\t{\r\n\t\t\t\tModels.map((d,i) => {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<option key={\"r\"+i}  value={i}>\r\n\t\t\t\t\t\t\t{d.ModelName}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</select>\t\r\n\t)\t\t\t\r\n};\r\nexport default QueryModelDropdown;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport { FieldMap, RuleModel, QueryModel } from \"../../../type\";\r\nimport { useEffect, useState, MouseEvent, ChangeEvent, FormEvent} from \"react\";\r\nimport {Modal} from 'react-bootstrap';\r\nimport RuleModelDropdown from \"../rulesets/subfunctions/RuleModelDropdown\";\r\nimport './css/EmpGraphs.css';\r\n\r\nimport ModalRuleManager from \"../rulesets/subfunctions/ModalRuleManager\";\r\nimport ForceBubble from \"../../../charts/ForceBubble\";\r\nimport EmployeeImportTest from \"../../../data/Employee/Employee_ImportTest\";\r\nimport GetAuthConfigHeaders from \"../../../functions/GetAuthConfigHeaders\";\r\nimport DateSpreadOptionSpread from \"./subfunctions/DateSpreadOptionSpread\";\r\nimport DateSpreadOptionRange from \"./subfunctions/DateSpreadOptionRange\";\r\nimport DateSort from \"../../../functions/DateSort\";\r\nimport ChartLegend from \"../../../charts/ChartLegend\";\r\nimport GetFieldName from \"../../../functions/GetFieldName\";\r\nimport ChartPrimary from \"../../../charts/ChartPrimary\";\r\nimport  {SwatchesPicker} from 'react-color';\r\nimport QueryModelDropdown from \"./subfunctions/QueryModelDropdown\";\r\n\r\n\r\nconst EmpGraphs = () => {\r\n\r\n    const fields: FieldMap[] = useSelector((state: any) => state.fieldmapping);\r\n    const RModels: RuleModel[] = useSelector((state: any) => state.rulemodels);\r\n    const Query: QueryModel[] = useSelector((state: any) => state.querymodels);\r\n\r\n    const [selDate, setSelDate] = useState<Date>(new Date())\r\n    const [beginDate, setBeginDate] = useState<Date>(new Date())\r\n    const [numPer, setNumPer] = useState<number>(12)\r\n    const [xFldName, setXFldName] = useState<string>(\"\")\r\n    const [dateSpread,setDateSpread] = useState<string>(\"\")\r\n    const [timeframeDisplay,setTimeframeDisplay] = useState<string>(\"\")\r\n    const [fieldBand, setFieldBand] = useState<string>(\"0\")\r\n    const [initDate, setInitDate] = useState(new Date())\r\n    const [chartTitle, setChartTitle] = useState(\"\")\r\n    const [ruleModel, setRuleModel] = useState<RuleModel|null>(null)\r\n    const [params, setParams] = useState({groupfield:\"\",\r\n                                        chartType:'bar', ruleModelName:'', \r\n                                        reportType:'', isimported:'',\r\n                                        endDateStr:'', beginDateStr:'',\r\n                                        period:'None', showBandInput:\"\"})\r\n\r\n    const [visualParams, setVisualParams] = useState({labelsonoff:\"On\", colorGradientType:\"continuous\" })\r\n    const [anti_colorGradientType, setAnti_colorGradientType] = useState(\"discrete\")\r\n    const [colors, setColors] = useState<any>({0: '#49ab1b', 1: '#5de5de', 2: ''})\r\n    const [coloridx,setColorIdx] = useState<number>(0)\r\n    const [modelname, setModelname] = useState<string>(\"\")\r\n\r\n    let [isModalVisible,setIsModalVisible] = useState({0: false, 1: false, 2: false, 3: false, \r\n                            4: false, 5: false, 6: false, 7: false, 8:false,  9:false, 10:false, 11:false });\r\n    const clickedopen = (val:number) => { setIsModalVisible({ ...isModalVisible, [val]:true })};\r\n    const clickedclose = (val:number) => { setIsModalVisible({ ...isModalVisible, [val]:false })};\r\n\r\n    const dispatcher = useDispatch()\r\n    const config = GetAuthConfigHeaders()\r\n\r\n    const changeParameter = (par:string, str:string) => { \r\n        setParams({ ...params, [par]:str })\r\n        let lmnt: HTMLElement | null = document.getElementById(par)\r\n        if(str!==\"\"){\r\n            if (lmnt){lmnt.style.backgroundColor = '#93ae31'}\r\n        } else {\r\n            if (lmnt){lmnt.style.backgroundColor = '#942631'}\r\n        }\r\n        if ((par!==\"isimported\") && (params.isimported===\"true\")){\r\n            let importlmnt: HTMLElement | null = document.getElementById(\"isimported\")\r\n            if (importlmnt){importlmnt.style.backgroundColor = '#394263'}\r\n        }\r\n    };\r\n    const changeVisualParameter = (par:string, str:string) => { \r\n        setVisualParams({ ...visualParams, [par]:str })\r\n    };\r\n\r\n    const ChgDate = (begin_end: string, date1:any) => {\r\n        let ed:Date = new Date(String(date1))\r\n        if (begin_end===\"endDateStr\"){setSelDate(ed)} else {setBeginDate(ed)}\r\n        let dates = {'day': ed.getDate(), 'month': ed.getMonth()+1, 'year':ed.getFullYear()} \r\n        changeParameter(begin_end,dates['month'] + \"-\" + dates['day'] + \"-\" + dates['year'])\r\n    };    \r\n\r\n    useEffect(() => {\r\n        ChgDate(\"endDateStr\", initDate)\r\n    },[initDate])\r\n\r\n    const ChangeRuleModel = (e:ChangeEvent<HTMLSelectElement>) =>{\r\n        let val:number = +e.target.selectedOptions[0].value\r\n        if (val>-1){\r\n            setRuleModel(RModels[val])\r\n            changeParameter(\"ruleModelName\",RModels[val].ModelName)\r\n        } else {\r\n            changeParameter(\"ruleModelName\",\"null\")\r\n        }\r\n    };\r\n\r\n    const changedisplay = (Index:number) => {\r\n        \r\n        let coll:HTMLCollectionOf<Element> = document.getElementsByClassName(\"TopElement\")\r\n        Array.from(coll).forEach((e:Element,i:number) => {\r\n            let lmntTop: HTMLElement | null = document.getElementById(e.id)\r\n            let lmnt2: HTMLElement | null  = document.getElementById(\"collapse\" + (i+1))\r\n            if(lmntTop && lmnt2){\r\n                if (e.id===\"topcollapse\"+Index){\r\n                    lmnt2.style.display=\"block\";\r\n                    lmntTop.style.backgroundColor=\"#f928a1\";\r\n                } else {\r\n                    lmnt2.style.display=\"none\";\r\n                    lmntTop.style.backgroundColor=\"#394263\";\r\n                }\r\n            }  \r\n        })\r\n    };\r\n\r\n    //table data - for chart\r\n    const CreateChart = () => {\r\n        setChartTitle(\"Count of \" + \"Employees\" + \" by \" + xFldName + \",  as of \" + params.endDateStr)\r\n        if (Query.length>0){ \r\n            let sorteddata = DateSort(Query[0].basicquery,\"DateVar\")\r\n            let xfieldname = GetFieldName(fields, Query[0].XFieldName)\r\n\r\n            if (params.chartType===\"bubble\"){\r\n                ForceBubble(sorteddata,\"Variable\",\"Value\",[xfieldname,\"Count\"],\"#bar1\",[600,500])\r\n            } else {\r\n                let charttype:string = \"\";\r\n                if (params.chartType===\"bar\"){charttype = \"barchartstacked\"}\r\n                if (params.chartType===\"line\"){charttype = \"linechartstacked\"}\r\n                let chartpars:any\r\n                dateSpread===\"spread\" ? chartpars = [\"DateVar\",\"Value\",\"Variable\"] : chartpars = [\"Variable\",\"Value\",\"\"]\r\n                \r\n                //---create bar/line chart---\r\n                console.log(chartpars)\r\n                let chartkeys = ChartPrimary(charttype,sorteddata,chartpars,\r\n                                                    [xfieldname,\"Count\"],\r\n                                                    visualParams.colorGradientType, colors,\"#bar1\",[600,500],visualParams.labelsonoff)\r\n                if (dateSpread===\"spread\" && params.groupfield!==\"none\"){ChartLegend(chartkeys,\"#legend1\",[400,300])}\r\n            }\r\n            \r\n        }\r\n    };\r\n\r\n    const FieldSetup = (e:MouseEvent<HTMLDivElement>,xy:string)=> {   \r\n        let keynm:string = e.currentTarget.attributes[1].value\r\n        if (xy===\"X\"){\r\n            changeParameter(\"groupfield\",keynm)\r\n            setXFldName(GetFieldName(fields,keynm,\"Key\"))\r\n        }\r\n        e.currentTarget.style.background = \"rgb(182, 145, 145)\";\r\n    };\r\n\r\n    const ChangeReportModel = (e:ChangeEvent<HTMLSelectElement>) => {\r\n        if (e.target.value===\"Select Data Category\"){\r\n            changeParameter(\"reportType\",\"\")\r\n        } else{\r\n            changeParameter(\"reportType\",e.target.value)\r\n            if ((e.target.value===\"Demographic\") && (dateSpread===\"range\")){\r\n                setDateSpread(\"point\")\r\n            } \r\n            if((e.target.value!==\"Demographic\") && (dateSpread===\"point\")){\r\n                setDateSpread(\"range\") \r\n            }\r\n        }\r\n        let repinfo_elem:HTMLElement | null = document.getElementById(\"emp1_selreport\")\r\n        if (repinfo_elem){repinfo_elem.innerHTML = \"\"}\r\n    };\r\n\r\n    const ImportPrep = () => {\r\n        EmployeeImportTest(params, \"TestModel1\", numPer, ruleModel, fieldBand, dateSpread, selDate, beginDate, config, dispatcher);\r\n        changeParameter(\"isimported\",\"true\")\r\n    };\r\n\r\n    const SwitchDate = (e:ChangeEvent<HTMLSelectElement>) => {\r\n        if (e.target.value===\"Iterate by Date\"){ //by date\r\n            setDateSpread(\"spread\")\r\n            setTimeframeDisplay(\"\")\r\n        }\r\n        if (e.target.value===\"Point in Time\"){ //single date/date range\r\n            setNumPer(0)\r\n            if (params.reportType===\"Demographic\"){\r\n                setDateSpread(\"point\")\r\n                setTimeframeDisplay(\"ok\")\r\n            } else {\r\n                setDateSpread(\"range\")\r\n                setTimeframeDisplay(params.beginDateStr)\r\n            }\r\n        }\r\n    };\r\n    const ChangePeriod = (e:ChangeEvent<HTMLSelectElement>) => {\r\n        if (e.target.value===\"Select Period\"){\r\n            changeParameter(\"period\",\"None\")\r\n        } else {\r\n            changeParameter(\"period\",e.target.value)\r\n            setTimeframeDisplay(e.target.value)\r\n        }\r\n        let elem = document.getElementById(\"d_spread\")\r\n        if (elem){elem.innerText = \"Good\"}\r\n    };\r\n\r\n    const SwitchLabelsOnOff = () => {\r\n        if(visualParams.labelsonoff===\"On\"){\r\n            changeVisualParameter(\"labelsonoff\",\"Off\")\r\n        } else {\r\n            changeVisualParameter(\"labelsonoff\",\"On\")\r\n        }\r\n    };\r\n    const ChangeColorGradient = () => {\r\n        if(anti_colorGradientType===\"discrete\"){\r\n            changeVisualParameter(\"colorGradientType\",\"discrete\")\r\n            setAnti_colorGradientType(\"continuous\")\r\n        } else {\r\n            changeVisualParameter(\"colorGradientType\",\"continuous\")\r\n            setAnti_colorGradientType(\"discrete\")\r\n        }\r\n    };\r\n\r\n    const SwitchBanding = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        if (e.target.selectedOptions[0].value!==\"Select:\"){\r\n            changeParameter(\"showBandInput\",e.target.selectedOptions[0].value)\r\n            if (e.target.selectedOptions[0].value===\"No\"){\r\n                changeParameter(\"fieldband\",\"0\")\r\n            }\r\n        }\r\n    };\r\n\r\n    const ChangeColor = (e:any) => {\r\n        setColors({...colors, [coloridx]:e.hex})\r\n        let colorelem = document.getElementById(\"colorpicker\"+coloridx)\r\n        if (colorelem){colorelem.style.backgroundColor=e.hex}\r\n    };\r\n    const ChangeColorIndex = (d:number) => {\r\n        setColorIdx(d)\r\n        let colorelem = document.getElementById(\"colorsel\"+d)\r\n        if (colorelem){colorelem.style.color=\"red\"}\r\n        let el_coll:HTMLCollectionOf<Element> = document.getElementsByClassName(\"colorsel\")\r\n        Array.from(el_coll).forEach((e:Element) => {\r\n            let lmnt: HTMLElement | null = document.getElementById(e.id)\r\n            if(lmnt){if (e.id!==\"colorsel\"+d){lmnt.style.color = \"black\"}}\r\n        })\r\n    };\r\n\r\n    const SaveModel = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        EmployeeImportTest(params, modelname, numPer, ruleModel, fieldBand, dateSpread, selDate, beginDate, config, dispatcher);\r\n    };\r\n\r\n    const ChangeQueryChartModel = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        let idval:number = +e.target.selectedOptions[0].value\r\n        if (idval > 0){\r\n\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div id=\"egraphContainer\">\r\n            <div id=\"graphsidebar\" className=\"sidenav\">\t\t\r\n                <div id=\"graphsidebarHeader\" > Create Chart Dataset </div>\r\n                <div id=\"topcollapse1\" className=\"TopElement\" onClick={_=>changedisplay(1)}>Data Elements</div>\r\n                <div id=\"topcollapse2\" className=\"TopElement\" onClick={_=>changedisplay(2)}>Visual Elements</div>\r\n                <div id=\"topcollapse3\" className=\"TopElement\" onClick={_=>changedisplay(3)}>Manage Charts</div>\r\n                <div id=\"collapse1\" style={{display:\"none\"}} >\r\n                    <ul className=\"sidenav__list\">\r\n                        <li className=\"sidenav__list-item\" id=\"chartType\" onClick={_=>clickedopen(0)}>Chart Type: {params.chartType}</li>\r\n                        <li className=\"sidenav__list-item\" id=\"reportType\" onClick={_=>clickedopen(4)}>Set Report Type: {params.reportType}</li>\r\n                        <li className=\"sidenav__list-item\" id=\"endDateStr\" onClick={_=>clickedopen(2)}>Set EndPoint Date: {params.endDateStr}</li>\r\n                        <li className=\"sidenav__list-item\" id=\"period\" onClick={_=>clickedopen(5)}>Set Timeframe: {timeframeDisplay}</li>\r\n                        <li className=\"sidenav__list-item\" id=\"groupfield\" onClick={_=>clickedopen(1)}>Set Field (X/Y-Axis): {xFldName}</li>\r\n                        <li className=\"sidenav__list-item\" id=\"showBandInput\" onClick={_=>clickedopen(6)}> Field Banding: {fieldBand}</li>\r\n                        <li className=\"sidenav__list-item\" id=\"ruleModelName\" onClick={_=>clickedopen(3)}>Field Exceptions: {params.ruleModelName}</li>\r\n                        <li className=\"sidenav__list-item\" id=\"isimported\" onClick={ImportPrep}>Import Filtered Data</li>\r\n                        <li className=\"sidenav__list-item\" id=\"sidebtnCreate\" onClick={CreateChart}>Create Chart</li>\r\n                    </ul>\r\n                </div>\r\n                <div id=\"collapse2\" style={{display:\"none\"}} >\r\n                    <ul className=\"sidenav__list\">\r\n                        <li className=\"sidenav__list-item\" onClick={_=>clickedopen(11)}>Color Gradient Type</li>\r\n                        <li className=\"sidenav__list-item\" onClick={_=>clickedopen(7)}>Edit Colors</li>\r\n                        <li className=\"sidenav__list-item\" onClick={_=>clickedopen(8)}>Toggle Labels</li>\r\n                        <li className=\"sidenav__list-item\" id=\"sidebtnCreate\" onClick={CreateChart}>Update Chart</li>\r\n                    </ul>\r\n                </div>\r\n                <div id=\"collapse3\" style={{display:\"none\"}} >\r\n                    <ul className=\"sidenav__list\">\r\n                        <li className=\"sidenav__list-item\" id=\"openchart\" onClick={_=>clickedopen(10)}>Open Existing Chart</li>\r\n                        <li className=\"sidenav__list-item\" id=\"savechart\" onClick={_=>clickedopen(9)}>Save Chart</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"chart1\">\r\n                <div id=\"charttitle\"> {chartTitle} </div>\r\n                <div id=\"bar1\" style={{margin:'30px', fontSize: '12px'}}></div>\r\n            </div>\r\n            <div id = \"legend1\"></div>\r\n\r\n            {/* chart type modal */}\r\n            <Modal show={isModalVisible[0]}>\r\n                <div className=\"chartclick\" onClick={_=>changeParameter(\"chartType\",\"bar\")}> Bar chart </div>\r\n                <div className=\"chartclick\" onClick={_=>changeParameter(\"chartType\",\"line\")}> Line chart </div>\r\n                <div className=\"chartclick\" onClick={_=>changeParameter(\"chartType\",\"bubble\")}> Bubble chart </div>\r\n                <button className=\"closemodalbtn\" onClick={_=>clickedclose(0)}>Close</button>\r\n            </Modal>\r\n\r\n            {/* Report Type modal */}\r\n            <Modal show={isModalVisible[4]}>\r\n                <div id=\"mdl_report\">\r\n                   <div className=\"modalemp_header\"> Report Type </div>\r\n                    <select className=\"modalemp_ddown\" onChange={(e:ChangeEvent<HTMLSelectElement>) => ChangeReportModel(e)}>\r\n                        <option id=\"entry\">Select Report Category</option>\r\n                        <option id=\"entry\">Demographic</option>\r\n                        <option id=\"hire\">Hires</option>\r\n                        <option id=\"term\">Terminations</option>\r\n                        <option id=\"transfer\">Transfers</option>\r\n                        <option id=\"promo\">Promotions</option>\r\n                    </select>\r\n                    <div>Report Info:</div>\r\n                    <div id=\"emp1_reportinfo\"></div>\r\n                </div>\r\n\r\n                <button className=\"closemodalbtn\" onClick={_=>clickedclose(4)}>Close</button>\r\n            </Modal>\r\n\r\n            {/* end date modal */}\r\n            <Modal show={isModalVisible[2]}>\r\n                <div style={{height: '150px'}}>\r\n                    <div> Select Endpoint Date </div> \r\n                    <div style={{marginTop: '10px', marginBottom: '10px'}}> Selected: {params.endDateStr}</div>\r\n                    <DatePicker onChange={(e:any) => ChgDate(\"endDateStr\",e)} />\r\n                </div>\r\n                <button className=\"closemodalbtn\" onClick={_=>clickedclose(2)}>Close</button>\r\n            </Modal>\r\n\r\n            {/* datespread modal */}\r\n            <Modal show={isModalVisible[5]}>\r\n                <div id=\"mdl_datespread\">\r\n                    <div className=\"modalemp_header\">Timeframe Options</div>\r\n                    <select onChange={(e:ChangeEvent<HTMLSelectElement>)=>SwitchDate(e)}>\r\n                        <option>Select Timeframe Option</option>\r\n                        <option>Iterate by Date</option>\r\n                        <option>Point in Time</option>\r\n                    </select>\r\n                    {(() => {\r\n                        switch (dateSpread) {\r\n                        case \"spread\":  return <DateSpreadOptionSpread ChangePeriod={(e:ChangeEvent<HTMLSelectElement>) => ChangePeriod(e)} \r\n                                                        NumberChange={(e:ChangeEvent<HTMLSelectElement>) =>{setNumPer(+e.target.value)}} \r\n                                                        numPer={numPer}\r\n                                                        divname={\"d_spread\"} />;\r\n                        case \"range\": return <DateSpreadOptionRange ChgDate={(e:any) => ChgDate(\"beginDateStr\",e)} \r\n                                                        beginDateStr={params.beginDateStr}\r\n                                                        divname={\"d_range\"} />;\r\n                        case \"point\":  return <div>Done!</div>;\r\n                        default:      return <div></div>;\r\n                        }\r\n                    })()}\r\n                </div>\r\n                <button className=\"closemodalbtn\" onClick={_=>clickedclose(5)}>Close</button>\r\n            </Modal>\r\n\r\n            {/* Ruleset modal */}\r\n            <Modal show={isModalVisible[3]}>\r\n                <div id=\"mdl_rule\">\r\n                    <div>Use an existing Rule Model?</div>\r\n                        <RuleModelDropdown change={(e:ChangeEvent<HTMLSelectElement>) => ChangeRuleModel(e)}/>\r\n                </div>\r\n                <ModalRuleManager selModel={ruleModel}/>\r\n                <button className=\"closemodalbtn\" onClick={_=>clickedclose(3)}>Close</button>\r\n            </Modal>\r\n\r\n\r\n            {/* XField modal */}\r\n            <Modal show={isModalVisible[1]}>\r\n                <div style={{backgroundColor: 'white', width: '600px', margin: 'auto'}}>\r\n                    <div style={{display: 'flex'}}> \r\n                        <div className=\"fldheader\"> Field Name </div>\r\n                        <div className=\"fldheader\"> Source </div>\r\n                        <div className=\"fldheader\"> Grouped Field </div>\r\n                    </div>\r\n                    <div key={-1} className=\"fieldelem\">\r\n                        <div className=\"fieldclick\"> None </div>\r\n                        <div className=\"fieldclick\"> </div>\r\n                        <div key={-1+'x'} id={'X_'+ -1 + \"_\" + 'none'} data-name={'none'} className=\"fieldclick_xy\" onClick={e=> FieldSetup(e,\"X\")}>\r\n                            Set as Grouping Value\r\n                         </div>\r\n                    </div>\r\n                    {\r\n                        fields.map((fld:FieldMap,i:number) => {\r\n                            return(\r\n                                <div key={i} className=\"fieldelem\">\r\n                                    <div className=\"fieldclick\"> {fld['FieldName']}</div>\r\n                                    <div className=\"fieldclick\"> {fld['ModelName']} </div>\r\n                                    <div key={i+'x'} id={'X_'+ i + \"_\" + fld['FieldName']} data-name={fld['Key']} className=\"fieldclick_xy\" onClick={e=> FieldSetup(e,\"X\")}>\r\n                                        Set as Grouping Value\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    <button className=\"closemodalbtn\" onClick={_=>clickedclose(1)}>Close</button> \r\n                </div>\r\n            </Modal>\r\n\r\n            {/* Banding modal */}\r\n            <Modal show={isModalVisible[6]} >\r\n                <div>\r\n                    <div className=\"modalemp_header\">Set Maximum Number of Elements</div>\r\n                    <div>(all others will be grouped into \"Other\")</div>\r\n                    <div>Use Field Banding?</div>\r\n                    <select onChange={(e:ChangeEvent<HTMLSelectElement>)=>SwitchBanding(e)}>\r\n                        <option>Select:</option>\r\n                        <option>No</option>\r\n                        <option>Yes</option>\r\n                    </select>\r\n                    {params.showBandInput===\"Yes\" &&\r\n                        <input type=\"number\" id=\"input_fldbandmax\" placeholder={\"0\"} onChange={e=>changeParameter(\"fieldBand\",String(e.target.value))}></input>\r\n                    }\r\n                    <button className=\"closemodalbtn\" onClick={_=>clickedclose(6)}>Close</button>\r\n                </div>\r\n            </Modal>\r\n\r\n\r\n            {/* Visuals modal */}\r\n            <Modal show={isModalVisible[7]} >\r\n               Select Colors\r\n                <div id=\"mdl_visuals\">\r\n                    <div>\r\n                    {\r\n                        [0,1,2,3,4,5].map((d:number) => {\r\n                            return(\r\n                            <div key={d} style={{display:'flex'}}>\r\n                                <div className=\"colorsel\" id={\"colorsel\"+d}>{\"->\"}</div>\r\n                                <div className=\"colorpicker\" id={\"colorpicker\"+d} style={{backgroundColor:colors[d]}} onClick={_=>ChangeColorIndex(d)}>\r\n                                    Color {d}\r\n                                </div>\r\n                            </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    </div>\r\n                    <SwatchesPicker onChangeComplete={(e:any)=> ChangeColor(e)}/>\r\n                </div>\r\n                <button className=\"closemodalbtn\" onClick={_=>clickedclose(7)}>Close</button>\r\n            </Modal>\r\n            {/* modal color gradient*/}\r\n            <Modal show={isModalVisible[11]}>\r\n                <div onClick={ChangeColorGradient}> Make Colors {anti_colorGradientType}</div>\r\n                <button className=\"closemodalbtn\" onClick={_=>clickedclose(11)}>Close</button>\r\n            </Modal>\r\n\r\n            {/* modal labels on off */}\r\n            <Modal show={isModalVisible[8]}>\r\n                <div onClick={SwitchLabelsOnOff}>Turn Labels {visualParams.labelsonoff}</div>\r\n                <button className=\"closemodalbtn\" onClick={_=>clickedclose(8)}>Close</button>\r\n            </Modal>\r\n\r\n            {/* modal save */}\r\n            <Modal show={isModalVisible[9]}>\r\n                <form onSubmit={(e: FormEvent<HTMLFormElement>)=>SaveModel(e)}>  \r\n                    <div> Create Model Name</div>    \r\n                    <input type=\"text\" name=\"modelname\" onChange={e => setModelname(e.target.value)}/>\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>            \r\n                <button className=\"closemodalbtn\" onClick={_=>clickedclose(9)}>Close</button>\r\n            </Modal>\r\n\r\n            {/* modal dropdown */}\r\n            <Modal show={isModalVisible[10]}>\r\n                <QueryModelDropdown change={(e: ChangeEvent<HTMLSelectElement>) => ChangeQueryChartModel(e)}/>\r\n                <button className=\"closemodalbtn\" onClick={_=>clickedclose(10)}>Close</button>\r\n            </Modal>\r\n        </div>  \r\n\r\n    )\r\n};\r\nexport default EmpGraphs","import { FormEvent } from 'react';\r\nimport AxiosUpload from '../AxiosUpload';\r\n\r\n\r\nconst RulesetsUpload = (event:FormEvent<HTMLFormElement>, exceptiondata:any, \r\n                        modelname:string, fieldkey1:string, fieldkey2:string, \r\n                        andOr:string, rulename:string, config:any, elementstring:string) => {\r\n    event.preventDefault()\r\n    let dataArray = new FormData();\r\n    \r\n    let dataencoded = exceptiondata.map((tuple:string[])=>{ return [\r\n                            String(tuple[0]).replace(\",\",`${process.env.REACT_APP_DATA_ENCODE_STR}`),\r\n                            String(tuple[1]).replace(\",\",`${process.env.REACT_APP_DATA_ENCODE_STR}`)                                ]\r\n                        })\r\n\r\n    dataArray.append(\"ruleName\",rulename);\r\n    dataArray.append(\"exceptionsFile\",dataencoded);\r\n    dataArray.append(\"modelName\",modelname);\r\n    dataArray.append('andor',andOr);\r\n    dataArray.append('fieldkey1',fieldkey1);\r\n    dataArray.append('fieldkey2',fieldkey2);\r\n\r\n    let elem:HTMLElement | null = document.getElementById(elementstring);\r\n    if (elem){elem.innerHTML = \"Uploading...\";}\r\n\r\n    //post\r\n    AxiosUpload(dataArray,\"api/employee/rulepost\",config,elem);\r\n\r\n};\r\n\r\nexport default RulesetsUpload;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {RuleModel, Rule, Exception} from \"../type\";\r\n\r\n\r\nconst ExceptionInit: Exception[] = [{\r\n\tRule: '',\r\n\tExceptionVal: '',\r\n\tFieldNo: 1,\r\n}]\r\n\r\nconst RulesInit: Rule[] = [{\r\n\tModel: '',\r\n\tRuleKey: '',\r\n\tOperation:'',\r\n\tField1: '',\r\n\tField2: '',\r\n\texceptions: ExceptionInit\r\n}]\r\n\r\nconst RuleModInit: RuleModel[] =[{\r\n\tModelName: '',\r\n\tCreateDate: '',\r\n\truleset: RulesInit\r\n}]\r\n\r\n//rulemodels\r\nexport const ruleModelDataSlice = createSlice({\r\n\tname: 'rulemodel_action',\r\n\tinitialState: RuleModInit,\r\n\treducers: {\r\n\t\truleModels: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<RuleModel>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({ ModelName, CreateDate, ruleset }: RuleModel) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tModelName: ModelName,\r\n\t\t\t\t\tCreateDate: CreateDate,\r\n\t\t\t\t\truleset: ruleset\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\truleModels_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n\r\n\r\n//rulesets\r\nexport const rulesetDataSlice = createSlice({\r\n\tname: 'ruleset_action',\r\n\tinitialState: RulesInit,\r\n\treducers: {\r\n\t\truledata: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<Rule>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t\tconsole.log(payload.Operation);\r\n\t\t\t},\r\n\t\t\tprepare: ({ Model, RuleKey, Operation, Field1, Field2, exceptions }: Rule) => ({ \r\n\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tModel: Model,\r\n\t\t\t\t\tRuleKey: RuleKey,\r\n\t\t\t\t\tOperation: Operation,\r\n\t\t\t\t\tField1: Field1,\r\n\t\t\t\t\tField2: Field2,\r\n\t\t\t\t\texceptions: exceptions\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\truledata_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//single rulemodel\r\nexport const selectedRuleModelSlice = createSlice({\r\n\tname: 'selrulemodel_action',\r\n\tinitialState: RuleModInit[0],\r\n\treducers: {\r\n\t\tselruledata:(state, {payload}: PayloadAction<RuleModel>) => {\r\n\t\t\t\treturn({\r\n\t\t\t\t\tModelName: payload.ModelName,\r\n\t\t\t\t\tCreateDate: payload.CreateDate,\r\n\t\t\t\t\truleset: payload.ruleset\r\n\t\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tselruledata_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate = RuleModInit[0]\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//Ruleset\r\nexport const {\r\n\truledata: rulesetActionCreator,\r\n\truledata_delete: rulesetdeleteActionCreator,\r\n} = rulesetDataSlice.actions;\r\n\r\n\r\n//selected Rule\r\nexport const {\r\n\tselruledata: selRuleModelActionCreator,\r\n\tselruledata_delete: selRuleModelDeleteActionCreator,\r\n} = selectedRuleModelSlice.actions;\r\n\r\n//selected Rule\r\nexport const {\r\n\truleModels: RuleModelActionCreator,\r\n\truleModels_delete: RuleModelDeleteActionCreator,\r\n} = ruleModelDataSlice.actions;\r\n\r\n","import axios from \"axios\";\r\nimport { RuleModelActionCreator, RuleModelDeleteActionCreator } from \"../../reducers/ruleset_actions\";\r\nimport {RuleModel} from '../../type'\r\n\r\n\r\n\r\n\r\nconst RulesetsImport = (props: any) => {\r\n\r\n    let {configheaders, dispatcher} = props;\r\n\r\n\r\n    axios.get<any[]>(`${process.env.REACT_APP_API_URL}/api/employee/rulesets`, configheaders)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            let ImportedModel: RuleModel[] = res.data\r\n            dispatcher(RuleModelDeleteActionCreator({}))\r\n            \r\n            ImportedModel.forEach(model => {\r\n                dispatcher(RuleModelActionCreator(model))\r\n            })\r\n        })\r\n        .catch(_ => {\r\n            console.log('data error')\r\n        });\r\n\r\n};\r\n\r\nexport default RulesetsImport;","//import { useSelector } from 'react-redux';\r\n\r\nconst RulesetsDropdown = ({Change, Model}) => {\r\n\t\r\n\t//const Model = useSelector((state) => state.selectedModel);\r\n\tconsole.log(Model)\r\n\treturn(\r\n\t\t<select id=\"dropdown_rules\" onChange={(e) => Change(e)} >\t\t\r\n\t\t\t<option key='1'  value={'-1'}>\r\n\t\t\t\tSelect Rules Name\r\n\t\t\t</option>\r\n\t\t\t{\r\n\t\t\t\tModel.ruleset.map((d,i) => {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<option key={\"r\"+i}  value={i}>\r\n\t\t\t\t\t\t\t{d.RuleKey}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</select>\t\r\n\t)\t\t\t\r\n};\r\nexport default RulesetsDropdown;","import { FormEvent } from 'react';\r\nimport AxiosUpload from '../AxiosUpload';\r\n\r\n\r\nconst RuleModelUpload = (event:FormEvent<HTMLFormElement>, modelname:string, config:any, elementstring:string) => {\r\n    event.preventDefault()\r\n    let dataArray = new FormData();\r\n    dataArray.append(\"modelname\",modelname);\r\n\r\n    \r\n    let elem = document.getElementById(elementstring);\r\n    if (elem){elem.innerHTML = \"Uploading...\"};\r\n\r\n    //post\r\n    AxiosUpload(dataArray,\"api/employee/rulemodel\",config,elem)\r\n\r\n};\r\n\r\nexport default RuleModelUpload;","import axios from \"axios\";\r\nimport { fieldValActionCreator, fieldValdeleteActionCreator } from \"../../reducers/field_actions\";\r\nimport { FieldVal } from \"../../type\";\r\n\r\n\r\nconst FieldsImportEmpValues = (fieldname: string, fld_no:number, config:any, dispatcher:any) => {\r\n    let flddata:any[] = []\r\n    \r\n    axios.post<any[]>(`${process.env.REACT_APP_API_URL}/api/fields/fieldvalues`,{fieldname}, config)\r\n        .then(res => {\r\n            flddata = res.data\r\n            dispatcher(fieldValdeleteActionCreator({}))\r\n            flddata.forEach(d =>{\r\n                let fldval1:FieldVal = {FieldAttr:fieldname, Value:String(d),FieldNum: fld_no}\r\n                dispatcher(fieldValActionCreator(fldval1))\r\n            })\r\n        })  \r\n\r\n    return(flddata)\r\n};\r\nexport default FieldsImportEmpValues","import { useState, ChangeEvent, MouseEvent} from \"react\";\r\nimport UniqueArrayValues from \"../../../../functions/UniqueArrayValues\";\r\nimport {Emp_State, FieldMap, FieldVal} from '../../../../type';\r\nimport { useSelector } from 'react-redux';\r\nimport \"./css/RuleExceptionPicker.css\"\r\nimport {Rule} from '../../../../type';\r\nimport FieldsImportEmpValues from \"../../../../data/Fields/Fields_ImportEmpValues\";\r\n\r\n\r\nconst RuleExceptionPicker = (props:any) => {\r\n    \r\n    let rule:Rule = props.rule;\r\n    let config:any = props.config;\r\n    let dispatcher:any = props.dispatcher;\r\n\r\n\r\n    let [fieldNames, setFieldNames] = useState({1:\"\",2:''})\r\n    let [fieldKeys, setFieldKeys] = useState({1:\"\",2:''})\r\n\r\n    let [fvalues,setFValues] = useState({1:[],2:[]})\r\n \r\n    let empvalues:Emp_State[] = useSelector((state:any) => state.employee_full);\r\n    const fields: FieldMap[] = useSelector((state: any) => state.fieldmapping);\r\n    const fdata: FieldVal[] = useSelector((state: any) => state.fieldvalues);\r\n\r\n    let [showMult, setShowMult] = useState<boolean>(false)\r\n    let multSwitch = () => {setShowMult(!showMult)}\r\n\r\n\r\n    const SetValue = (e:ChangeEvent<HTMLSelectElement>, num:number) => {\r\n        let fld:string = e.target.selectedOptions[0].value\r\n        setFieldNames({...fieldNames, [num]:fld})\r\n        setFieldKeys({...fieldKeys, [num]: e.target.selectedOptions[0].id})\r\n        FieldsImportEmpValues(fld, num, config, dispatcher)\r\n    };\r\n\r\n\r\n    const ChangeRadio = (event:MouseEvent<HTMLButtonElement>)  => {\r\n        let itm:HTMLButtonElement = event.currentTarget\r\n        let otherItm:HTMLElement | null\r\n        let itmtxt = itm.innerHTML\r\n        itmtxt===\"And\" ? otherItm=document.getElementById(\"btn_Or\") : otherItm=document.getElementById(\"btn_And\")\r\n\r\n        itm.style.background = \"powderblue\";\r\n        if (otherItm){otherItm.style.background = \"white\"};\r\n\r\n    };\r\n\r\n    const ColorChg = (event:MouseEvent<HTMLDivElement>)  => {\r\n        let itm:HTMLDivElement = event.currentTarget;\r\n        if (itm.style.background===\"powderblue\"){ itm.style.background = \"white\"} else {itm.style.background = \"powderblue\"}\r\n    };\r\n\r\n        ////greg - fix these lazy names and shit------------\r\n    const Imports = (fldnum:number) => {\r\n            setFValues({...fvalues, [fldnum]: GetValsFromFields(fdata,fldnum)})\r\n    }\r\n\r\n    const GetValsFromFields = (data:FieldVal[],fldnum:number) => {\r\n        let uniquevals:any[] = []\r\n        data.forEach((d:FieldVal)=>{\r\n            if (d.FieldNum===fldnum){\r\n                uniquevals.push(d['Value'])\r\n            }\r\n        })\r\n        return(uniquevals)\r\n    }\r\n\r\n    const Dropdown = (props:any) => {\r\n        let keyname = props.keyname;\r\n        let fldnum = props.fldnum;\r\n        let fieldname=props.fieldname;\r\n        let fieldkey=props.fieldkey;\r\n        \r\n        return(\r\n            <div id={\"fld_ddown\"+fldnum} className=\"fldlst_scroll\">\r\n                <div id={keyname} className=\"fieldheader\">Selected field: {fieldname} </div>\r\n                <div id={keyname+\"_id\"} className=\"fieldsecret\">{fieldkey}</div>\r\n                \r\n                <select className=\"fieldddown\" id={keyname} onChange={(e:ChangeEvent<HTMLSelectElement>) => SetValue(e,fldnum)}>\r\n                <option key='1' >\r\n                    Change Field\r\n                </option>\r\n                    {\r\n                        fields.map((fld:FieldMap,i:number) => {\r\n                            return(\r\n                                <option key={i+\"_\" + keyname} id={fld['Key']}>\r\n                                    {fld['FieldName']}\r\n                                </option>\r\n                            )\r\n                        })\r\n                    }\r\n                </select>\r\n                <button onClick={_=>Imports(fldnum)}>Populate</button>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const CheckAgainstRule = (val: string, i: number) => {\r\n        let backgroundcolor=\"white\";\r\n        if (rule){\r\n            rule.exceptions.forEach(exc => {\r\n                if (exc.FieldNo===i && exc.ExceptionVal===val){\r\n                    backgroundcolor=\"powderblue\";\r\n                }\r\n            })\r\n            return(backgroundcolor)\r\n        }\r\n    };\r\n\r\n    return( \r\n            <div id=\"rulebox\">       \r\n                <div id=\"rulemultpicker\" style={{height:'100px'}}> \r\n                        <div id=\"exceptionheader\">Rule Fields Manager</div>\r\n                        <div id=\"andordiv\">\r\n                            <button onClick ={multSwitch} id=\"multbutton\"> Multiple </button>\r\n                            {showMult &&\r\n                                <div>\r\n                                    <button id=\"btn_And\" className=\"andor_btn\" onClick={(e:MouseEvent<HTMLButtonElement>) => ChangeRadio(e)}>And</button>\r\n                                    <button id=\"btn_Or\" className=\"andor_btn\" onClick={(e:MouseEvent<HTMLButtonElement>) => ChangeRadio(e)}>Or</button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                </div>          \r\n                <div id=\"FldModal1\">\r\n                        \r\n                        <Dropdown keyname=\"field1ddown\" fldnum={1} fieldname={fieldNames[1]}  fieldkey={fieldKeys[1]}/>\r\n\r\n                        <div className=\"fldlist_itms\" id=\"fldlist1\">\r\n                        {\r\n                            fvalues[1].map(val => {\r\n                                let check = CheckAgainstRule(val,1)\r\n                                return(<div key={val + '1'} id ={val + \"_1\"} style={{'backgroundColor': check}} className='valuediv' \r\n                                            onClick={(e:MouseEvent<HTMLDivElement>) => ColorChg(e)}>{val}</div>\r\n                                    )\r\n                            })\r\n                        }\r\n                        </div>\r\n                        {showMult &&\r\n                            <div>\r\n                                <Dropdown keyname=\"field2ddown\" fldnum={2} fieldname={fieldNames[2]} fieldkey={fieldKeys[2]}/>\r\n                            </div>\r\n                        }\r\n                        {showMult &&                         \r\n                        <div className='fldlist_itms' id=\"fldlist2\">\r\n                                {\r\n                                    fvalues[2].map(val => {\r\n                                        let check = CheckAgainstRule(val,2)\r\n                                        return(<div key={val + '2'} id ={val+\"_2\"} style={{'backgroundColor': check}} className='valuediv' \r\n                                                onClick={(e:MouseEvent<HTMLDivElement>) => ColorChg(e)}>{val}</div>)\r\n                                    })\r\n                                }\r\n                        </div>}\r\n        \r\n                    </div>\r\n                </div>\r\n    )\r\n};\r\nexport default RuleExceptionPicker;","import { useState } from 'react';\r\n\r\n\r\nconst RuleAdd = ({SubmitForm}) => {\r\n\r\n    let [ruleName, setRuleName] = useState(\"\")\r\n\r\n    return( <div>\r\n            <form onSubmit={(e) => SubmitForm(e, ruleName)} style={{'marginBottom':'20px', 'textAlign':'left'}}>\r\n                Rule Name \r\n                <input type=\"text\" name=\"ruleName1\" id=\"rulename1\" onChange={e => setRuleName(e.target.value)}/>\r\n                <button type=\"submit\"> Set New Rule </button>\r\n             </form>\r\n        </div>)\r\n};\r\nexport default RuleAdd","import axios from \"axios\";\r\n//import { RuleModelDeleteActionCreator, selRuleModelDeleteActionCreator } from \"../../reducers/ruleset_actions\";\r\n//import { useDispatch } from \"react-redux\";\r\n\r\n\r\n\r\nconst RuleModelDelete = (modelname:string, configheaders: any, elementstring: HTMLElement) => {\r\n    \r\n\r\n    let dataArray = new FormData();\r\n    dataArray.append('modelName',modelname);\r\n\r\n    console.log(\"delete\" + modelname)\r\n    axios.post(`${process.env.REACT_APP_API_URL}/api/employee/rulemodeldelete`, \r\n        dataArray,\r\n        configheaders\r\n    )\r\n    .then(res => {\r\n        console.log('deleted')\r\n        elementstring.innerHTML = \"Deleted \" + modelname + \" Successfully!\"\r\n    })\r\n    .catch(err => {\r\n    console.log('data deletion error');\r\n        elementstring.innerHTML = \"There was an error.\"\r\n    })\r\n\r\n\r\n    //remove from state - hooks error\r\n    //let dispatcher = useDispatch();\r\n    //dispatcher(RuleModelDeleteActionCreator({}));\r\n    //dispatcher(selRuleModelDeleteActionCreator({}));\r\n\r\n    //refresh page\r\n    window.location.reload();\r\n\r\n};\r\n\r\nexport default RuleModelDelete;","import axios from \"axios\";\r\n//import { useDispatch } from \"react-redux\";\r\n\r\nconst RulesetsDelete = (rulename: string, modelname:string, configheaders: any, elementstring: HTMLElement) => {\r\n    \r\n\r\n    let dataArray = new FormData();\r\n    dataArray.append('modelName',modelname);\r\n    dataArray.append('ruleName',rulename);\r\n    \r\n    console.log(\"delete\" + modelname)\r\n    axios.post(`${process.env.REACT_APP_API_URL}/api/employee/ruledelete`, \r\n        dataArray,\r\n        configheaders\r\n    )\r\n    .then(res => {\r\n        console.log('deleted')\r\n        elementstring.innerHTML = \"Deleted \" + modelname + \" Successfully!\"\r\n    })\r\n    .catch(err => {\r\n    console.log('data deletion error');\r\n        elementstring.innerHTML = \"There was an error.\"\r\n    })\r\n\r\n\r\n    //remove from state\r\n\r\n    //refresh page\r\n    //window.location.reload();\r\n\r\n};\r\n\r\nexport default RulesetsDelete;","import { useState, ChangeEvent, MouseEvent,FormEvent} from \"react\";\r\nimport {RuleModel, Rule, FieldMap} from '../../../type';\r\nimport RulesetsUpload from \"../../../data/Rulesets/Rulesets_Upload\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport RulesetsImport from \"../../../data/Rulesets/Rulesets_Import\";\r\nimport RulesDropdown from \"./subfunctions/RulesDropdown.js\"\r\nimport RuleModelDropdown from \"./subfunctions/RuleModelDropdown\";\r\nimport RuleModelUpload from \"../../../data/Rulesets/RuleModel_Upload\"; \r\nimport RuleExceptionPicker from \"./subfunctions/RuleExceptionPicker\";\r\nimport RuleAdd from \"./subfunctions/RuleAdd.js\";\r\nimport RuleModelDelete from \"../../../data/Rulesets/RuleModel_Delete\";\r\nimport RulesetsDelete from \"../../../data/Rulesets/Rulesets_Delete\";\r\nimport GetAuthConfigHeaders from \"../../../functions/GetAuthConfigHeaders\";\r\nimport './css/RulesetsManager.css';\r\n\r\nconst RulesetsManager = () => {\r\n    \r\n\r\n    const RModels: RuleModel[] =useSelector((state: any) => state.rulemodels);\r\n    const fields: FieldMap[] = useSelector((state:any) => state.fieldmapping);\r\n\r\n    let [addChangeRule, setAddChangeRule] = useState<string>(\"Add\")\r\n    let [ruleName, setRuleName] = useState<string>(\"\")\r\n    let [modelName, setModelName] = useState<string>(\"null\")\r\n    let [postmodelName, setPostModelName] = useState<string>(\"\")\r\n    let [selRule, setSelRule] = useState<Rule>()\r\n    let [selModel, setSelModel] = useState<RuleModel | null>()\r\n    let dispatcher = useDispatch();\r\n\r\n    let configheaders = GetAuthConfigHeaders();\r\n\r\n    const CreateModel = (e:FormEvent<HTMLFormElement>) => {\r\n        RuleModelUpload(e, postmodelName, configheaders, \"model_uploadstatus\")\r\n    };\r\n\r\n    const CreateRule = (e:FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n\r\n        let el_coll:HTMLCollectionOf<Element> = document.getElementsByClassName(\"valuediv\")\r\n        \r\n        let exceptionlist:any[] = [];        \r\n        Array.from(el_coll).forEach((e:Element) => {\r\n                let lmnt: HTMLElement | null = document.getElementById(e.id)\r\n                if (lmnt?.style.background ===\"powderblue\"){\r\n                    exceptionlist.push([e.id.substring(0,e.id.length-2), \r\n                                        e.id.substring(e.id.length-1,e.id.length)\r\n                                    ])\r\n                }\r\n            }\r\n        )\r\n\r\n        let fieldkey1:string | undefined = document.getElementById(\"field1ddown_id\")?.innerText\r\n        let fieldkey2:string | undefined = document.getElementById(\"field2ddown_id\")?.innerText        \r\n        if(!fieldkey1){fieldkey1 = \"\"}\r\n        if(!fieldkey2){fieldkey2 = \"\"}\r\n        \r\n\r\n        let andorVal:string = 'and';\r\n        let andorSwitch = document.getElementById(\"btn_Or\")\r\n        andorSwitch?.style.background===\"powderblue\" ? andorVal='or' : andorVal='and'\r\n        RulesetsUpload(e, exceptionlist, modelName, fieldkey1, fieldkey2, andorVal, ruleName, configheaders, \"exc_uploadstatus\")\r\n    };\r\n\r\n    const AddChangeModel = (e:ChangeEvent<HTMLSelectElement>) => {\r\n        setAddChangeRule(e.target.selectedOptions[0].value)\r\n    }\r\n\r\n\r\n    const ChangedModel = (e:ChangeEvent<HTMLSelectElement>) => {\r\n        let val:number = +e.target.selectedOptions[0].value\r\n        if (val>=0){\r\n            //dispatcher(selRuleModelActionCreator(RModels[val]))\r\n            setSelModel(RModels[val])\r\n            setModelName(RModels[val].ModelName)\r\n        } else {\r\n            setModelName(\"null\")\r\n        }\r\n    };\r\n\r\n    const ExistingModelchange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        let intgr:number = +e.target.selectedOptions[0].value\r\n        if (intgr>=0){\r\n            RModels.forEach(model => {\r\n                if (model.ModelName===modelName){\r\n                    setSelRule(model.ruleset[intgr])\r\n                    setRuleName(model.ruleset[intgr].RuleKey)\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    const RuleAdded = (e: MouseEvent<HTMLElement>,str:string) => {\r\n        e.preventDefault()\r\n        setRuleName(str)\r\n\r\n        RModels.forEach(mdl => {\r\n            if (mdl.ModelName===modelName){\r\n                mdl.ruleset.forEach(rule => {\r\n                    if (rule.RuleKey===ruleName){\r\n                        setSelRule(rule)\r\n                    }\r\n                })\r\n            }\r\n        }) \r\n    }\r\n\r\n    const DeleteModel = () => {\r\n        let elem1 = document.getElementById(\"model_uploadstatus\")\r\n        if (elem1){ RuleModelDelete(modelName,configheaders,elem1) }\r\n    }\r\n    const DeleteRule = () => { \r\n        let elem1 = document.getElementById(\"ruledelete_elem\")\r\n        if (elem1){RulesetsDelete(ruleName, modelName,configheaders,elem1) }\r\n    }\r\n\r\n\r\n    const ModelAssessment = () => {\r\n        if (modelName!==\"null\"){\r\n            return(\r\n                    <div id=\"ruleWorkspace\">\r\n                    <div id=\"Modelnamediv\">Working with Model: {modelName} </div>\r\n                    <div id=\"addchangeselect\">\r\n                        <div style={{marginRight: '8px', marginTop:'4px'}}>Add or Change Rule:</div>\r\n                        <select id=\"btnaddchg\" onChange={(e:ChangeEvent<HTMLSelectElement>) => AddChangeModel(e)}> \r\n                                    <option >Add</option> \r\n                                    <option >Change</option> \r\n                                    <option >Delete</option> \r\n                        </select>        \r\n                        <div style={{marginLeft: '15px'}}>\r\n                        {(() => {\r\n                            switch(addChangeRule){\r\n                                case \"Change\": return <div id=\"changerulediv\" style={{width: '300px'}}>\r\n                                                        <RulesDropdown \r\n                                                            Model={selModel} \r\n                                                            Change={(e:ChangeEvent<HTMLSelectElement>) => ExistingModelchange(e)}\r\n                                                        />\r\n                                                        <div style={{marginRight:'10px', display:'flex'}}>\r\n                                                        <div>Fields: {selRule?.Field1}, {selRule?.Field2}</div>\r\n                                                        </div>\r\n                                                        <div id=\"ruledelete_elem\"></div>\r\n                                                    </div>;\r\n                                case \"Add\": return <RuleAdd \r\n                                                    SubmitForm={(e:MouseEvent<HTMLElement>, rn:string) => RuleAdded(e, rn)}\r\n                                                    />;\r\n                                case \"Delete\": return <div>\r\n                                                            <RulesDropdown Model={selModel} Change={(e:ChangeEvent<HTMLSelectElement>) => ExistingModelchange(e)}/>\r\n                                                            <button onClick={DeleteRule}> Delete Rule </button>\r\n                                                    </div>\r\n            \r\n                            }\r\n                        })()} \r\n                        </div>    \r\n                    \r\n                    </div>\r\n\r\n                    <RuleExceptionPicker rule={selRule} config={configheaders} dispatcher={dispatcher}/>\r\n                    <form id=\"submitruleform\" onSubmit={(e: FormEvent<HTMLFormElement>) => CreateRule(e)} style={{'marginBottom':'20px', 'textAlign':'left'}}>\r\n                        <button className=\"rulesubmitbtn\" type=\"submit\" > Submit Adjusted Rule</button>\r\n                    </form>   \r\n            \r\n                </div>\r\n            )\r\n        } else {\r\n            return(<div></div>)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id=\"Rulemgrcanvas\">\r\n            <div id=\"modelselect\">\r\n                <div id=\"rulemodimport\">\r\n                    <div id=\"modelpageHeader\"> Rule Models Manager</div>\r\n                    <button className=\"rulemodel_importbtn\" onClick={_=>RulesetsImport({configheaders,dispatcher})} >Import Exceptions Models</button>\r\n                </div>\r\n\r\n                <div id=\"RuleModelSelector\">\r\n                    <div id=\"NewRuleModelForm\"> \r\n                        <form  onSubmit={(e: FormEvent<HTMLFormElement>) => CreateModel(e)} style={{'marginBottom':'20px', 'textAlign':'left'}}>\r\n                            Add Model (name): <input type=\"text\" name=\"modelname\" onChange={e => setPostModelName(e.target.value)}/>\r\n                            <button className=\"excsubmitbtn\" type=\"submit\" > Add Model</button>\r\n                        </form>\r\n                    </div>\r\n                    <div id=\"RuleModelddown\">\r\n                        <div id=\"existingtitle\">Or Select from Existing Models: </div>\r\n                        <RuleModelDropdown change={(e:ChangeEvent<HTMLSelectElement>) => ChangedModel(e)} />\r\n                        <button id=\"ruledelete_btn\" onClick={DeleteModel}> Delete Model </button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"model_uploadstatus\"></div>\r\n            </div>\r\n\r\n            \r\n            <div id=\"exc_uploadstatus\"></div>\r\n\r\n            <ModelAssessment />\r\n    \r\n        </div>\r\n    )\r\n};\r\nexport default RulesetsManager;\r\n\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {Department} from \"../type\";\r\n\r\n\r\nconst DeptInit:Department[] = [{\r\n    AttrKey:'',\r\n\tDept:'',\r\n    DepartmentName:'',\r\n    AsofDate: new Date(),\r\n    NextDate: new Date(),\r\n    IsMostRecent: true,\r\n    Attribute1:'',\r\n    Attribute2:'',\r\n\tAttribute3: '',\r\n    Attribute4:''\r\n}]\r\n\r\n//departments\r\nexport const deptDataSlice = createSlice({\r\n\tname: 'dept_action',\r\n\tinitialState: DeptInit,\r\n\treducers: {\r\n\t\tdeptAdd: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<Department>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({ AttrKey, Dept, DepartmentName, AsofDate, NextDate, IsMostRecent, Attribute1, Attribute2, Attribute3, Attribute4}: Department) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tAttrKey: AttrKey,\r\n\t\t\t\t\tDept: Dept,\r\n\t\t\t\t\tDepartmentName: DepartmentName,\r\n\t\t\t\t\tAsofDate: AsofDate,\r\n                    NextDate: NextDate,\r\n\t\t\t\t\tIsMostRecent: IsMostRecent,\r\n                    Attribute1: Attribute1,\r\n                    Attribute2: Attribute2,       \r\n\t\t\t\t\tAttribute3: Attribute3,\r\n\t\t\t\t\tAttribute4: Attribute4,         \r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tdept_delete: (state, _: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//dept\r\nexport const {\r\n\tdeptAdd: departmentActionCreator,\r\n\tdept_delete: deptdeleteActionCreator,\r\n} = deptDataSlice.actions;","import axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { departmentActionCreator, deptdeleteActionCreator } from \"../../reducers/department_actions\";\r\nimport { Department } from \"../../type\";\r\n\r\n\r\nconst DepartmentImport = (props:any) => {\r\n\r\n    let configheaders = props.config\r\n    let dispatcher = useDispatch();\r\n    const GetDeptData = () => {\r\n        axios.get<any[]>(`${process.env.REACT_APP_API_URL}/api/employee/deptcurrview`, configheaders)\r\n            .then(res => {\r\n                const deptdata: Department[] = res.data\r\n                console.log(deptdata)\r\n                dispatcher(deptdeleteActionCreator({}))\r\n                deptdata.forEach(dept => {\r\n                    dispatcher(departmentActionCreator(dept))\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('data error')\r\n            });\r\n    }\r\n    return(<button onClick={GetDeptData}>Import Departments</button>)\r\n};\r\nexport default DepartmentImport;","import { FormEvent } from 'react';\r\nimport AxiosUpload from '../AxiosUpload';\r\n\r\n\r\nconst DepartmentUpload = (event:FormEvent<HTMLFormElement>, deptdata:any, \r\n                            asofDate: Date, config:any, elementstring:string) => {\r\n    event.preventDefault();\r\n    \r\n    let elem:HTMLElement | null = document.getElementById(elementstring);\r\n    if (elem){elem.innerHTML = \"Uploading...\"};\r\n\r\n    let dates = {'day': asofDate.getDate(), 'month': asofDate.getMonth()+1, 'year':asofDate.getFullYear()}  \r\n\r\n    let dataArray = new FormData();\r\n    dataArray.append(\"data\",deptdata);\r\n    dataArray.append(\"year\",String(dates.year));\r\n    dataArray.append(\"month\",String(dates.month));\r\n    dataArray.append(\"day\",String(dates.day));\r\n\r\n\r\n    AxiosUpload(dataArray, \"api/employee/deptpost\", config, elem);\r\n\r\n}\r\nexport default DepartmentUpload;","\r\n\r\nfunction IsInVector(Arr,val){\r\n\r\n\tvar x= 0;\r\n\tvar contained;\r\n\t\r\n\t//loop through\r\n\tArr.forEach((ind) => {\r\n\t\tif(ind === val){\r\n\t\t\tx = x + 1\r\n\t\t} else {\r\n\t\t\tx = x + 0\r\n\t\t}\r\n\t//console.log(\"IsInVector: \" + ind + \" vs \" + val + \"...\" + x)\r\n\t})\r\n\t\r\n\tx>0 ? contained = true : contained = false\r\n\t\r\n\treturn(contained)\r\n}\r\nexport default IsInVector;","import { FormEvent } from 'react';\r\nimport AxiosUpload from './AxiosUpload';\r\n\r\nconst ModelUploadChange = (event:FormEvent<HTMLFormElement>, data:any, id:string, modelCategory:string,\r\n                    asofDate: Date, config:any, elementstring:string) => {\r\n    event.preventDefault();\r\n    \r\n    let elem:HTMLElement | null = document.getElementById(elementstring);\r\n    if (elem){elem.innerHTML = \"Uploading...\";}\r\n\r\n    let dates = {'day': asofDate.getDate(), 'month': asofDate.getMonth()+1, 'year':asofDate.getFullYear()}  \r\n\r\n    let dataArray = new FormData();\r\n    console.log(data)\r\n    dataArray.append(\"data\",data);\r\n    dataArray.append(\"year\",String(dates.year));\r\n    dataArray.append(\"month\",String(dates.month));\r\n    dataArray.append(\"day\",String(dates.day));\r\n    dataArray.append(\"id\",String(id));\r\n    dataArray.append(\"category\",modelCategory);\r\n\r\n    //Upload\r\n    AxiosUpload(dataArray, \"api/employee/datachg\", config, elem);\r\n}\r\nexport default ModelUploadChange;","\r\n\tconst FilterData = (data, onField,filterValue) => {\r\n\r\n\t\tlet returndata = []\r\n\t\tdata.forEach(d => {\r\n\t\t\tif (d[onField]===filterValue){\r\n\t\t\t\treturndata.push(d)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn(returndata)\r\n\t};\r\n\r\n\texport default FilterData;","import IsInVector from \"../IsInVector\";\r\nimport { useState, FormEvent, ChangeEvent } from \"react\";\r\nimport ModelUploadChange from \"../../data/Model_UploadChange\";\r\nimport { useSelector } from 'react-redux';\r\nimport GetFieldName from '../GetFieldName';\r\nimport { FieldMap } from \"../../type\";\r\nimport \"./css/EnumerateSelectedRow.css\";\r\nimport FilterData from \"../FilterData\";\r\n\r\nconst EnumerateSelectedRow = (props:any) => {\r\n\r\n    let selectedRow = props.data;\r\n    let config = props.config;\r\n    let keycol = props.keycol;\r\n    let colsHide = props.colsHide;\r\n    let modelCategory = props.modelCategory;\r\n    let optionalchoices:any[] = props.optionalchoices; //for dropdowns when editing instead of text\r\n\r\n    const Fields: FieldMap[] = useSelector((state: any) => state.fieldmapping);\r\n    const [formData, setFormData] = useState<any>()\r\n    const SubmitDepartment = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n\r\n        let newarry:string[] = [];\r\n        Object.keys(formData).forEach((k:string) => {\r\n            newarry.push(k)\r\n            newarry.push(formData[k])\r\n        })\r\n\r\n        ModelUploadChange(e,newarry,selectedRow[keycol],\r\n                    modelCategory,\r\n                    new Date(selectedRow['AsofDate']),\r\n                    config,\"chgdeptstatus\")\r\n    };\r\n\r\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const onDdownChange = (e: ChangeEvent<HTMLSelectElement>):void => {\r\n       if (e.target.selectedOptions[0].value!==\"Other Options:\"){\r\n            setFormData({ ...formData, [e.target.name]: e.target.selectedOptions[0].value });\r\n       }\r\n    };\r\n\r\n    return(\r\n        <div id=\"tblEnum1\">\r\n            <form id=\"submitform\" onSubmit={(e: FormEvent<HTMLFormElement>) => SubmitDepartment(e)} >\r\n            {Object.keys(selectedRow).map((k:string) => {\r\n                if (IsInVector(colsHide,k)===false){\r\n                    let colname = GetFieldName(Fields,k)\r\n                    if(colname===\"\"){colname=k}\r\n                    let options:string[] = []\r\n                    if (optionalchoices.length>0){\r\n                        options = FilterData(optionalchoices,0,k)\r\n                    }\r\n                    if (options.length===0){\r\n                        return(<div className=\"rowform_group\" key={\"s\"+k}>\r\n                                <div className=\"rowform_name\">{colname}: </div>\r\n                                <input type=\"text\"  className=\"selRowFormElement\" \r\n                                        id={\"input_\"+k} \r\n                                        name={k}\r\n                                        onChange={e=>onInputChange(e)}\r\n                                        placeholder={String(selectedRow[k])}></input>\r\n                        </div>)\r\n                    } else {\r\n                        return(<div className=\"rowform_group\" key={\"s\"+k}>\r\n                                    <div className=\"rowform_name\">{colname}: </div>\r\n                                    <div> Currently: {selectedRow[k]} </div> \r\n                                    <select name={k} onChange={(e:ChangeEvent<HTMLSelectElement>)=>onDdownChange(e)}>\r\n                                        <option>Other Options:</option>\r\n                                        {options.map(opt => {\r\n                                            return(<option key={opt[1]}>\r\n                                                        {opt[1]}\r\n                                                    </option>)\r\n                                        })}\r\n                                    </select>\r\n                            </div>)\r\n                    }\r\n                }\r\n            }) }\r\n            <button className=\"editsubmitbtn\" type=\"submit\"> Submit Edit</button>\r\n            <div id=\"chgdeptstatus\"></div>\r\n            </form>\r\n        </div>   \r\n    )\r\n};\r\nexport default EnumerateSelectedRow;","import {useEffect, useState} from 'react';\r\nimport './css/CustomTable.css'\r\nimport {Modal} from 'react-bootstrap';\r\nimport { MouseEvent} from \"react\";\r\nimport IsInVector from \"../IsInVector\";\r\nimport EnumerateSelectedRow from \"./EnumerateSelectedRow\";\r\nimport GetAuthConfigHeaders from \"../GetAuthConfigHeaders\";\r\nimport {FieldMap} from \"../../type\";\r\nimport { useSelector } from 'react-redux';\r\nimport GetFieldName from '../GetFieldName';\r\n\r\n\r\nconst CustomTable = (props:any) => {\r\n\r\n    let DeptData:any[] = props.data;\r\n    let keycol:string = props.keycol;\r\n    let modelCategory:string = props.modelCategory;\r\n    let optionalchoices:any[] = props.optionalchoices; //for dropdowns when editing instead of text\r\n\r\n    const Fields: FieldMap[] = useSelector((state: any) => state.fieldmapping);\r\n\r\n    let rowcount = 10;\r\n    let editCol = true;\r\n    let colsHide = [\"AttrKey\",\"AsofDate\",\"NextDate\",\"IsMostRecent\"];\r\n    let config = GetAuthConfigHeaders();\r\n\r\n\r\n    const [pageNo, setPageNo] = useState<number>(0)\r\n    const [maxPg, setMaxPg] = useState<number>(0)\r\n    let headerdata:string[] = []\r\n    if (DeptData.length>0){headerdata = Object.keys(DeptData[0])};\r\n\r\n    let [isModalVisible,setIsModalVisible] = useState(false);\r\n    const clickedopen = () => { setIsModalVisible(true) };\r\n    const clickedclose = () => { setIsModalVisible(false) };   \r\n    const [selectedRow, setSelectedRow] = useState<any>([]);\r\n\r\n    useEffect(()=> {\r\n        let maxno: number = Math.round(DeptData.length/rowcount - .5)\r\n       setMaxPg(maxno)\r\n    })\r\n\r\n    const ChangePage = (direction:Boolean) => {\r\n        let nextstep = pageNo + ((+direction-.5)*2)*1\r\n        if (nextstep<=maxPg && nextstep>=0){\r\n            setPageNo(nextstep)\r\n        }\r\n    };\r\n\r\n\r\n    const OpenEditor = (e:MouseEvent<HTMLDivElement>) => {\r\n        let idno = e.currentTarget.attributes[1].value\r\n        setSelectedRow(DeptData[+idno])\r\n        clickedopen()\r\n    };\r\n\r\n    const isDisplayed = (i:number) => {\r\n        if((i>=rowcount * pageNo) && (i < rowcount * (pageNo+1))){\r\n           return(\"table-row\");\r\n        } else {\r\n            return(\"none\");\r\n        }\r\n    }\r\n\r\n    return(<div className=\"tblcanvas\">\r\n                \r\n                <div className=\"paginationdiv\">\r\n                    <div className='paginatebtn' onClick={_=>ChangePage(false)}> {'<'} Prev  </div>\r\n                    Current Page: {pageNo+1} / {maxPg + 1}\r\n                    <div className='paginatebtn' onClick={_=>ChangePage(true)}>  Next {'>'}</div>\r\n                </div>\r\n\r\n                <div id=\"testtable\" >\r\n                    <table className=\"custtable\" >\r\n                        <thead id=\"dguh\">\r\n                            <tr>\r\n                            {editCol && <th>Edit</th>}\r\n                            {headerdata.map((key:string, i:number) => {\r\n                                if (IsInVector(colsHide,key)===false){ \r\n                                    let colname = GetFieldName(Fields,key)\r\n                                    if(colname===\"\"){colname=key}\r\n                                    return (\r\n                                    <th key={i} className=\"custtbl_headercell\">\r\n                                        {colname}\r\n                                    </th>\r\n                                ) }\r\n                            })}\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>  \r\n                            {DeptData.map((dept:any, i:number) => {\r\n                                return(<tr key={\"a\"+i}  id={\"a\"+i} style={{display:isDisplayed(i),height:'50px'}}>\r\n                                {editCol && <td className=\"custtbl_cell celledit\" id={String(i)} onClick={(e:MouseEvent<HTMLDivElement>)=>OpenEditor(e)}>(  )</td>}\r\n                                {Object.keys(dept).map((k:string) => {\r\n                                    if (IsInVector(colsHide,k)===false){  return(\r\n                                        <td key={i+\"_\"+k} className=\"custtbl_cell\" >\r\n                                            {dept[k]}\r\n                                        </td>\r\n                                    )}\r\n                                })}\r\n                            </tr>)\r\n                            })}    \r\n                        </tbody>\r\n                        \r\n                    </table>\r\n                    <Modal show={isModalVisible} >\r\n                        <div id=\"modal_enumName\">Edit Data</div>\r\n                        <EnumerateSelectedRow data={selectedRow} modelCategory={modelCategory} \r\n                                                    config={config} \r\n                                                    colsHide={colsHide} \r\n                                                    keycol={keycol}\r\n                                                    optionalchoices = {optionalchoices}\r\n                                                    />\r\n                        <button onClick={clickedclose}>Close</button>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n            )\r\n\r\n};\r\nexport default CustomTable;","import DepartmentImport from \"../../../data/Departments/Department_Import\";\r\nimport DepartmentUpload from \"../../../data/Departments/Department_Upload\";\r\nimport { useState, FormEvent } from \"react\";\r\nimport GetAuthConfigHeaders from \"../../../functions/GetAuthConfigHeaders\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport { Department, FieldMap } from \"../../../type\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CustomTable from \"../../../functions/EditableTable/CustomTable\";\r\nimport GetFieldName from \"../../../functions/GetFieldName\";\r\nimport \"./css/DepartmentTable.css\";\r\n\r\nconst DepartmentTable = () => {\r\n   \r\n    let config = GetAuthConfigHeaders()\r\n    \r\n    const [selDate, setSelDate] = useState<Date>(new Date())\r\n    const [deptFile, setDeptFile] = useState<any>()\r\n    const DeptData: Department[]  = useSelector((state: any) => state.departments);\r\n    const Fields: FieldMap[] = useSelector((state: any) => state.fieldmapping);\r\n    const [showTable, setShowTable] = useState<boolean>(false)\r\n\r\n    const UploadBtn = (e:FormEvent<HTMLFormElement>) => {\r\n        DepartmentUpload(e,deptFile,selDate,config,\"deptupl_div\")\r\n    };\r\n\r\n    const SetFile =(e:any)=>{\r\n        setDeptFile(e.target.files[0])\r\n    };\r\n    const SetTable = () => {\r\n        setShowTable(true)\r\n    };\r\n\r\n    const IsTable = () => {\r\n        if (showTable===true  && DeptData.length>0){\r\n                let headers:String[] = [];\r\n                Object.keys(DeptData[0]).forEach(key =>{\r\n                    headers.push(GetFieldName(Fields,key))\r\n                })\r\n                return(<div>\r\n                    <CustomTable data={DeptData} modelCategory=\"Department\" keycol=\"AttrKey\" optionalchoices={[]}/>\r\n                </div>)\r\n        } else {\r\n            return(<div></div>)\r\n        }\r\n    }\r\n\r\n    return(\r\n            <div id=\"depttable_canvas\">\r\n                <div id=\"deptimportcontent\">\r\n                    <div id=\"depttitle\">Departments</div>\r\n                    <form id=\"submitruleform\" onSubmit={(e: FormEvent<HTMLFormElement>) => UploadBtn(e)} \r\n                                style={{'marginBottom':'20px', 'textAlign':'left'}}>\r\n         \t\t\t    <input type=\"file\" className=\"deptfilebtn\" name=\"reviewFile\" onChange={e => SetFile(e)}/>   \r\n                        <DatePicker onChange={(e:any)=>setSelDate(new Date(String(e)))}/>\r\n                        <button className=\"deptsubmitbtn\" type=\"submit\" > Submit Department Adjustments</button>\r\n                    </form>   \r\n                    <div id=\"deptupl_div\"></div>\r\n                    <DepartmentImport props={config} />\r\n                    <button onClick={SetTable}>\r\n                        Table\r\n                    </button>\r\n                </div>\r\n                <div id=\"depttable1\">\r\n                    <IsTable />\r\n                </div>\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default DepartmentTable;\r\n","import { FormEvent } from 'react';\r\nimport AxiosUpload from '../AxiosUpload';\r\n\r\n    const FieldsUploadNew = (event:FormEvent<HTMLFormElement>, formdata: any, iskeyfield:boolean, elementstring:string, config:any) => {\r\n\t\tevent.preventDefault()\r\n\t\t\r\n        let dataArray = new FormData();\r\n        dataArray.append(\"category\",formdata.modelCategory);\r\n        dataArray.append(\"iskeyfield\",String(iskeyfield));\r\n        dataArray.append(\"attrName\",formdata.attrName);\r\n        dataArray.append(\"fieldName\",formdata.fieldName);\r\n        dataArray.append(\"headerName\",formdata.headerName);\r\n        \r\n        \r\n        let elem:HTMLElement | null = document.getElementById(elementstring);\r\n\t\tif (elem){elem.innerHTML = \"Uploading...\";}\r\n\r\n        AxiosUpload(dataArray, \"api/fields/fieldpost\", config, elem)\r\n\r\n    };\r\n\r\n    export default FieldsUploadNew;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport GetAuthConfigHeaders from \"../../../functions/GetAuthConfigHeaders\";\r\nimport { useState, FormEvent, ChangeEvent } from \"react\";\r\nimport { FieldMap } from \"../../../type\";\r\nimport CustomTable from \"../../../functions/EditableTable/CustomTable\";\r\nimport FilterData from \"../../../functions/FilterData\";\r\nimport FieldsUploadNew from \"../../../data/Fields/Fields_UploadNew\";\r\nimport FieldsImport from \"../../../data/Fields/Fields_Import\";\r\n\r\nconst FieldsViewer = () => {\r\n\r\n  \r\n    let config = GetAuthConfigHeaders();\r\n    let dispatcher = useDispatch();\r\n    let [fldFormData,setFldFormData] =useState({\r\n        modelCategory: 'EmployeeState',\r\n        attrName:'',\r\n        fieldName: '',\r\n        headerName:'',\r\n    });\r\n    const { modelCategory, attrName, fieldName, headerName} = fldFormData;\r\n    const fields:FieldMap[] = useSelector((state:any) => state.fieldmapping);\r\n\r\n    const onFormChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n\t\tsetFldFormData({ ...fldFormData, [e.target.name]: e.target.value });\r\n\t};\r\n\r\n    const onCategoryChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        //let val:string = e.target.selectedOptions[0].value\r\n        setFldFormData({ ...fldFormData, modelCategory: e.target.value });\r\n\r\n    };\r\n\r\n    const CheckFormVals = () => {\r\n        FieldsImport(\"*\",config,dispatcher)\r\n    };\r\n\r\n    const SubmitField = (e:FormEvent<HTMLFormElement>) => {\r\n        FieldsUploadNew(e,fldFormData, false, \"fldadd_div\", config)\r\n    };\r\n\r\n    return(\r\n            <div>\r\n                <button onClick={(_)=>CheckFormVals()}> Update Fields</button>\r\n                <select name=\"modelCategory\" onChange={e => onCategoryChange(e)}>\r\n                    <option value=\"EmployeeState\"> EmployeeState </option>\r\n                    <option value=\"Department\"> Department </option>\r\n                    <option value=\"JobTable\"> Job Table </option>\r\n                </select>   \r\n               \r\n                <div style={{height:'600px'}}>\r\n                    <CustomTable data={FilterData(fields,\"ModelName\",modelCategory)} \r\n                                    modelCategory=\"FieldMapping\"\r\n                                    keycol=\"Key\" \r\n                                    optionalchoices={[['DataType','Text'],['DataType','Number']]}\r\n                                    />\r\n                </div>\r\n                Add\r\n                <form onSubmit={(e: FormEvent<HTMLFormElement>) => SubmitField(e)}>\r\n                    Attr <input type=\"text\" name=\"attrName\" value={attrName} onChange={e => onFormChange(e)}/>  \r\n                    Field <input type=\"text\" name=\"fieldName\" value={fieldName} onChange={e => onFormChange(e)}/>  \r\n                    Header <input type=\"text\" name=\"headerName\" value={headerName} onChange={e => onFormChange(e)}/>\r\n                    <button type=\"submit\"> Add New Field</button>  \r\n                </form>\r\n                <div id=\"fldadd_div\"></div>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default FieldsViewer;\r\n","import { useState, ChangeEvent, FormEvent } from \"react\";\r\nimport GetAuthConfigHeaders from \"../../../functions/GetAuthConfigHeaders\";\r\nimport AxiosUpload from \"../../../data/AxiosUpload\";\r\n\r\n\r\nconst FieldsKey = () => {\r\n\tconst [fieldsFile, setFieldsFile] = useState<any>();\r\n    let config = GetAuthConfigHeaders();\r\n\r\n    const ApplyFile = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files){setFieldsFile(e.target.files[0])}\r\n    }\r\n\r\n    const UploadFieldKeys = (event:FormEvent<HTMLFormElement>, iskeyfield:boolean, elementstring:string, config:any) => {\r\n\t\tevent.preventDefault()\r\n\t\t\r\n        let dataArray = new FormData();\r\n        dataArray.append(\"file\",fieldsFile);\r\n        dataArray.append(\"iskeyfield\",String(iskeyfield));\r\n        \r\n        let elem:HTMLElement | null = document.getElementById(elementstring);\r\n\t\tif (elem){elem.innerHTML = \"Uploading...\";}\r\n\r\n        AxiosUpload(dataArray, \"api/fields/fieldkeypost\", config, elem)\r\n\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            Import Field Keys File\r\n            <form onSubmit={e=>UploadFieldKeys(e, true, \"uploadempsuccess\", config)} style={{'marginTop':'20px', 'textAlign':'left'}}>\r\n                    <input type=\"file\" className=\"empfilebtn\" name=\"reviewFile\" onChange={(e:ChangeEvent<HTMLInputElement>) => ApplyFile(e)}/>\r\n                    <button>Submit</button>\r\n            </form>\r\n            <div id=\"fieldstatus_div\"> </div>\r\n        </div>\r\n    )\r\n}\r\nexport default FieldsKey;","\r\nimport FieldsImport from './data/Fields/Fields_Import';\r\n\r\nconst OnLoad = (config: any, dispatcher:any) => {\r\n\r\n    console.log('load')\r\n    FieldsImport(\"*\",config,dispatcher)\r\n\r\n};\r\nexport default OnLoad;","import  {BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Navbar from './pages/Navbar'\nimport Home from './pages/home'\nimport Login from './pages/user/Login'\nimport Logout from './pages/user/Logout'\nimport SignUp from './pages/user/SignUp'\nimport ThreeTest from './three/ThreeTest'\nimport ThreeParticles from './three/ThreeParticles'\nimport EmployeeDataSetup from './pages/data/employees/EmployeeDataSetup'\nimport SingleEmployeePage from './pages/data/employees/SingleEmployeePage'\nimport JDDataSetup from './pages/data/jobdescriptions/JDDataSetup'\nimport JDDataViewer from './pages/data/jobdescriptions/JDDataViewer'\nimport EmpGraphs from './pages/data/employees/EmpGraphs';\nimport RulesetsManager from './pages/data/rulesets/RulesetsManager';\nimport DepartmentTable from './pages/data/departments/DepartmentTable';\nimport FieldsViewer from './pages/data/fields/FieldsViewer';\nimport FieldsKey from './pages/data/fields/FieldsKey';\n\nimport { useEffect } from 'react';\nimport OnLoad from './OnLoad';\nimport { useDispatch } from 'react-redux';\nimport GetAuthConfigHeaders from './functions/GetAuthConfigHeaders';\n\nfunction App() {\n\n\tlet dispatcher = useDispatch()\n\tlet config = GetAuthConfigHeaders()\n\tuseEffect(() => {\t\n\t\tOnLoad(config, dispatcher)\n\t})\n\n  return (\n    <div className=\"App\">\n\n\t\t<BrowserRouter >\n\t\t\t\t<Navbar />\n\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/' component={Home}/>\n\t\t\t\t\t\t<Route exact path='/login' component={Login}/>\n\t\t\t\t\t\t<Route exact path='/logout' component={Logout}/>\n\t\t\t\t\t\t<Route exact path='/signup' component={SignUp}/>\n\t\t\t\t\t\t<Route exact path='/employee/setup' component={EmployeeDataSetup}/>\n\t\t\t\t\t\t<Route exact path='/employee/viewer' component={SingleEmployeePage}/>\n\t\t\t\t\t\t<Route exact path='/employee/graphs' component={EmpGraphs}/>\n\t\t\t\t\t\t<Route exact path='/jobdesc/setup' component={JDDataSetup}/>\n\t\t\t\t\t\t<Route exact path='/jobdesc/viewer' component={JDDataViewer}/>\n\t\t\t\t\t\t<Route exact path='/three' component={ThreeTest}/>\n\t\t\t\t\t\t<Route exact path='/three/particles' component={ThreeParticles}/>\n\t\t\t\t\t\t<Route exact path='/employee/rulemanager' component={RulesetsManager}/>\n\t\t\t\t\t\t<Route exact path='/departments' component={DepartmentTable}/>\n\t\t\t\t\t\t<Route exact path='/fields/viewer' component={FieldsViewer}/>\n\t\t\t\t\t\t<Route exact path='/fields/key' component={FieldsKey}/>\n\t\t\t\t</Switch>\n\n\t\t</BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","\r\nimport {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\r\n//import {logger} from 'redux-logger';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { combineReducers } from '@reduxjs/toolkit';\r\n\r\nimport {userSlice} from \"./reducers/user_actions\"\r\nimport {employeeDataSlice, employeestateDataSlice, empModelSlice} from \"./reducers/employee_actions\"\r\nimport {jobtitleDataSlice, descgramDataSlice, relatedSlice, singletitleDataSlice} from \"./reducers/jobdesc_actions\"\r\nimport { fieldmapSlice, fieldvalSlice } from './reducers/field_actions';\r\nimport {ruleModelDataSlice} from './reducers/ruleset_actions';\r\n//import {rulesetDataSlice, selectedRuleModelSlice} from './reducers/ruleset_actions';\r\nimport { deptDataSlice } from './reducers/department_actions';\r\nimport { queryModelSlice} from './reducers/basicquery_actions';\r\n\r\n\r\n//combines reducers - toolkit will understand object\r\nconst reducer = combineReducers({\r\n\tuser: userSlice.reducer,\r\n\temployee: employeeDataSlice.reducer,\r\n\temployee_full: employeestateDataSlice.reducer,\r\n\tjobtitles: jobtitleDataSlice.reducer,\r\n\tselectedtitle: singletitleDataSlice.reducer,\r\n\tdescgrams: descgramDataSlice.reducer,\r\n\trelatedgrams: relatedSlice.reducer,\r\n\tfieldmapping: fieldmapSlice.reducer,\r\n\tfieldvalues: fieldvalSlice.reducer,\r\n\trulemodels: ruleModelDataSlice.reducer,\r\n\t//selectedModel: selectedRuleModelSlice.reducer,\r\n\tdepartments: deptDataSlice.reducer,\r\n\tempmodel: empModelSlice.reducer,\r\n\t//basicquery: basicquerySlice.reducer,\r\n\tquerymodels: queryModelSlice.reducer,\r\n});\r\n\r\nconst persistConfig = {\r\n\tkey: 'root',\r\n\tstorage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\n\r\n//store: comes with redux-thunk & devtools\r\n//serializablecheck ignores an (unimportant?) error from redux-persist\r\nexport default configureStore({\r\n\treducer: persistedReducer,\r\n\tmiddleware: [...getDefaultMiddleware({serializableCheck: false}), \r\n\t\t\t\t//logger\r\n\t\t\t\t]\r\n});\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n\t  <React.StrictMode>\n      <PersistGate loading={null} persistor={persistor} >\n         <App />\n      </PersistGate>\n\t  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}